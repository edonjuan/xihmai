;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 17/07/2019 03:10:12 p. m.
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0xF007EFFA  	GOTO        4084
_Interrupt:
;T_RTCDS3231_1.c,25 :: 		void Interrupt() {
;T_RTCDS3231_1.c,27 :: 		}
L_end_Interrupt:
L__Interrupt124:
0x0008	0x0011      	RETFIE      1
; end of _Interrupt
_Delay_1us:
;__Lib_Delays.c,7 :: 		void Delay_1us() {
;__Lib_Delays.c,8 :: 		Delay_us(1);
0x000A	0x0000      	NOP
0x000C	0x0000      	NOP
0x000E	0x0000      	NOP
0x0010	0x0000      	NOP
0x0012	0x0000      	NOP
;__Lib_Delays.c,9 :: 		}
L_end_Delay_1us:
0x0014	0x0012      	RETURN      0
; end of _Delay_1us
_Delay_5500us:
;__Lib_Delays.c,31 :: 		void Delay_5500us() {
;__Lib_Delays.c,32 :: 		Delay_us(5500);
0x0016	0x0E24      	MOVLW       36
0x0018	0x6E0C      	MOVWF       R12, 0
0x001A	0x0EB5      	MOVLW       181
0x001C	0x6E0D      	MOVWF       R13, 0
L_Delay_5500us5:
0x001E	0x2E0D      	DECFSZ      R13, 1, 0
0x0020	0xD7FE      	BRA         L_Delay_5500us5
0x0022	0x2E0C      	DECFSZ      R12, 1, 0
0x0024	0xD7FC      	BRA         L_Delay_5500us5
0x0026	0x0000      	NOP
0x0028	0x0000      	NOP
;__Lib_Delays.c,33 :: 		}
L_end_Delay_5500us:
0x002A	0x0012      	RETURN      0
; end of _Delay_5500us
_Delay_50us:
;__Lib_Delays.c,19 :: 		void Delay_50us() {
;__Lib_Delays.c,20 :: 		Delay_us(50);
0x002C	0x0E53      	MOVLW       83
0x002E	0x6E0D      	MOVWF       R13, 0
L_Delay_50us2:
0x0030	0x2E0D      	DECFSZ      R13, 1, 0
0x0032	0xD7FE      	BRA         L_Delay_50us2
;__Lib_Delays.c,21 :: 		}
L_end_Delay_50us:
0x0034	0x0012      	RETURN      0
; end of _Delay_50us
_UART1_Write:
;__Lib_UART_c67.c,58 :: 		
;__Lib_UART_c67.c,59 :: 		
L_UART1_Write3:
0x0036	0xB2AC      	BTFSC       TXSTA, 1 
0x0038	0xD002      	BRA         L_UART1_Write4
;__Lib_UART_c67.c,60 :: 		
0x003A	0x0000      	NOP
0x003C	0xD7FC      	BRA         L_UART1_Write3
L_UART1_Write4:
;__Lib_UART_c67.c,61 :: 		
0x003E	0xFFADC0F3  	MOVFF       FARG_UART1_Write_data_, TXREG
;__Lib_UART_c67.c,62 :: 		
L_end_UART1_Write:
0x0042	0x0012      	RETURN      0
; end of _UART1_Write
_SPI1_Write:
;__Lib_SPI_b10c7.c,79 :: 		
;__Lib_SPI_b10c7.c,82 :: 		
0x0044	0xFFC9C0F3  	MOVFF       FARG_SPI1_Write_data_, SSPBUF
;__Lib_SPI_b10c7.c,83 :: 		
L_SPI1_Write8:
0x0048	0xB0C7      	BTFSC       SSPSTAT, 0 
0x004A	0xD002      	BRA         L_SPI1_Write9
;__Lib_SPI_b10c7.c,84 :: 		
0x004C	0x0000      	NOP
0x004E	0xD7FC      	BRA         L_SPI1_Write8
L_SPI1_Write9:
;__Lib_SPI_b10c7.c,85 :: 		
0x0050	0xF000CFC9  	MOVFF       SSPBUF, R0
;__Lib_SPI_b10c7.c,87 :: 		
L_end_SPI1_Write:
0x0054	0x0012      	RETURN      0
; end of _SPI1_Write
_Lcd_Cmd:
;__Lib_Lcd.c,18 :: 		
;__Lib_Lcd.c,20 :: 		
0x0056	0x0100      	MOVLB       0
0x0058	0xBFF3      	BTFSC       FARG_Lcd_Cmd_out_char, 7, 1
0x005A	0xD002      	BRA         L__Lcd_Cmd21
0x005C	0x9E83      	BCF         LCD_D7, BitPos(LCD_D7+0) 
0x005E	0xD001      	BRA         L__Lcd_Cmd22
L__Lcd_Cmd21:
0x0060	0x8E83      	BSF         LCD_D7, BitPos(LCD_D7+0) 
L__Lcd_Cmd22:
;__Lib_Lcd.c,21 :: 		
0x0062	0xBDF3      	BTFSC       FARG_Lcd_Cmd_out_char, 6, 1
0x0064	0xD002      	BRA         L__Lcd_Cmd23
0x0066	0x9C83      	BCF         LCD_D6, BitPos(LCD_D6+0) 
0x0068	0xD001      	BRA         L__Lcd_Cmd24
L__Lcd_Cmd23:
0x006A	0x8C83      	BSF         LCD_D6, BitPos(LCD_D6+0) 
L__Lcd_Cmd24:
;__Lib_Lcd.c,22 :: 		
0x006C	0xBBF3      	BTFSC       FARG_Lcd_Cmd_out_char, 5, 1
0x006E	0xD002      	BRA         L__Lcd_Cmd25
0x0070	0x9A83      	BCF         LCD_D5, BitPos(LCD_D5+0) 
0x0072	0xD001      	BRA         L__Lcd_Cmd26
L__Lcd_Cmd25:
0x0074	0x8A83      	BSF         LCD_D5, BitPos(LCD_D5+0) 
L__Lcd_Cmd26:
;__Lib_Lcd.c,23 :: 		
0x0076	0xB9F3      	BTFSC       FARG_Lcd_Cmd_out_char, 4, 1
0x0078	0xD002      	BRA         L__Lcd_Cmd27
0x007A	0x9883      	BCF         LCD_D4, BitPos(LCD_D4+0) 
0x007C	0xD001      	BRA         L__Lcd_Cmd28
L__Lcd_Cmd27:
0x007E	0x8883      	BSF         LCD_D4, BitPos(LCD_D4+0) 
L__Lcd_Cmd28:
;__Lib_Lcd.c,25 :: 		
0x0080	0xB5A1      	BTFSC       __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0), 1
0x0082	0xD002      	BRA         L__Lcd_Cmd29
0x0084	0x8083      	BSF         LCD_RS, BitPos(LCD_RS+0) 
0x0086	0xD001      	BRA         L__Lcd_Cmd30
L__Lcd_Cmd29:
0x0088	0x9083      	BCF         LCD_RS, BitPos(LCD_RS+0) 
L__Lcd_Cmd30:
;__Lib_Lcd.c,28 :: 		
0x008A	0x8283      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,29 :: 		
0x008C	0xDFBE      	RCALL       _Delay_1us
;__Lib_Lcd.c,30 :: 		
0x008E	0x9283      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,33 :: 		
0x0090	0xB7F3      	BTFSC       FARG_Lcd_Cmd_out_char, 3, 1
0x0092	0xD002      	BRA         L__Lcd_Cmd31
0x0094	0x9E83      	BCF         LCD_D7, BitPos(LCD_D7+0) 
0x0096	0xD001      	BRA         L__Lcd_Cmd32
L__Lcd_Cmd31:
0x0098	0x8E83      	BSF         LCD_D7, BitPos(LCD_D7+0) 
L__Lcd_Cmd32:
;__Lib_Lcd.c,34 :: 		
0x009A	0xB5F3      	BTFSC       FARG_Lcd_Cmd_out_char, 2, 1
0x009C	0xD002      	BRA         L__Lcd_Cmd33
0x009E	0x9C83      	BCF         LCD_D6, BitPos(LCD_D6+0) 
0x00A0	0xD001      	BRA         L__Lcd_Cmd34
L__Lcd_Cmd33:
0x00A2	0x8C83      	BSF         LCD_D6, BitPos(LCD_D6+0) 
L__Lcd_Cmd34:
;__Lib_Lcd.c,35 :: 		
0x00A4	0xB3F3      	BTFSC       FARG_Lcd_Cmd_out_char, 1, 1
0x00A6	0xD002      	BRA         L__Lcd_Cmd35
0x00A8	0x9A83      	BCF         LCD_D5, BitPos(LCD_D5+0) 
0x00AA	0xD001      	BRA         L__Lcd_Cmd36
L__Lcd_Cmd35:
0x00AC	0x8A83      	BSF         LCD_D5, BitPos(LCD_D5+0) 
L__Lcd_Cmd36:
;__Lib_Lcd.c,36 :: 		
0x00AE	0xB1F3      	BTFSC       FARG_Lcd_Cmd_out_char, 0, 1
0x00B0	0xD002      	BRA         L__Lcd_Cmd37
0x00B2	0x9883      	BCF         LCD_D4, BitPos(LCD_D4+0) 
0x00B4	0xD001      	BRA         L__Lcd_Cmd38
L__Lcd_Cmd37:
0x00B6	0x8883      	BSF         LCD_D4, BitPos(LCD_D4+0) 
L__Lcd_Cmd38:
;__Lib_Lcd.c,38 :: 		
0x00B8	0xB5A1      	BTFSC       __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0), 1
0x00BA	0xD002      	BRA         L__Lcd_Cmd39
0x00BC	0x8083      	BSF         LCD_RS, BitPos(LCD_RS+0) 
0x00BE	0xD001      	BRA         L__Lcd_Cmd40
L__Lcd_Cmd39:
0x00C0	0x9083      	BCF         LCD_RS, BitPos(LCD_RS+0) 
L__Lcd_Cmd40:
;__Lib_Lcd.c,40 :: 		
0x00C2	0x8283      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,41 :: 		
0x00C4	0xDFA2      	RCALL       _Delay_1us
;__Lib_Lcd.c,42 :: 		
0x00C6	0x9283      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,44 :: 		
0x00C8	0xA5A1      	BTFSS       __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0), 1
0x00CA	0xD002      	BRA         L_Lcd_Cmd0
;__Lib_Lcd.c,45 :: 		
0x00CC	0xDFA4      	RCALL       _Delay_5500us
0x00CE	0xD001      	BRA         L_Lcd_Cmd1
L_Lcd_Cmd0:
;__Lib_Lcd.c,47 :: 		
0x00D0	0xDFAD      	RCALL       _Delay_50us
L_Lcd_Cmd1:
;__Lib_Lcd.c,48 :: 		
L_end_Lcd_Cmd:
0x00D2	0x0012      	RETURN      0
; end of _Lcd_Cmd
_Lcd_Chr_CP:
;__Lib_Lcd.c,50 :: 		
;__Lib_Lcd.c,52 :: 		
0x00D4	0x0100      	MOVLB       0
0x00D6	0x95A1      	BCF         __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0), 1
;__Lib_Lcd.c,53 :: 		
0x00D8	0xF0F3C0F2  	MOVFF       FARG_Lcd_Chr_CP_out_char, FARG_Lcd_Cmd_out_char
0x00DC	0xDFBC      	RCALL       _Lcd_Cmd
;__Lib_Lcd.c,54 :: 		
0x00DE	0x85A1      	BSF         __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0), 1
;__Lib_Lcd.c,55 :: 		
L_end_Lcd_Chr_CP:
0x00E0	0x0012      	RETURN      0
; end of _Lcd_Chr_CP
_____DoIFC:
;__Lib_System.c,93 :: 		
;__Lib_System.c,94 :: 		
0x00E2	0x50F2      	MOVF        INTCON, 0, 0
;__Lib_System.c,95 :: 		
0x00E4	0x6E02      	MOVWF       R2, 0
;__Lib_System.c,96 :: 		
0x00E6	0x9EF2      	BCF         INTCON, 7 
;__Lib_System.c,97 :: 		
0x00E8	0x0005      	PUSH
;__Lib_System.c,98 :: 		
0x00EA	0x6AFF      	CLRF        TOSU, 0
;__Lib_System.c,99 :: 		
0x00EC	0x5001      	MOVF        R1, 0, 0
;__Lib_System.c,100 :: 		
0x00EE	0x6EFE      	MOVWF       TOSH, 0
;__Lib_System.c,101 :: 		
0x00F0	0x5000      	MOVF        R0, 0, 0
;__Lib_System.c,102 :: 		
0x00F2	0x6EFD      	MOVWF       TOSL, 0
;__Lib_System.c,103 :: 		
0x00F4	0xBE02      	BTFSC       R2, 7, 0
;__Lib_System.c,104 :: 		
0x00F6	0x8EF2      	BSF         INTCON, 7, 0
;__Lib_System.c,105 :: 		
;__Lib_System.c,107 :: 		
L_end_____DoIFC:
0x00F8	0x0012      	RETURN      0
; end of _____DoIFC
_I2C1_Is_Idle:
;__Lib_I2C_b10.c,30 :: 		
;__Lib_I2C_b10.c,31 :: 		
0x00FA	0xB4C7      	BTFSC       SSPSTAT, 2 
0x00FC	0xD009      	BRA         L_I2C1_Is_Idle0
;__Lib_I2C_b10.c,32 :: 		
0x00FE	0x0E1F      	MOVLW       31
0x0100	0x14C5      	ANDWF       SSPCON2, 0 
0x0102	0x6E01      	MOVWF       R1 
0x0104	0x5001      	MOVF        R1, 0 
0x0106	0x0A00      	XORLW       0
0x0108	0xE103      	BNZ         L_I2C1_Is_Idle1
;__Lib_I2C_b10.c,33 :: 		
0x010A	0x0E01      	MOVLW       1
0x010C	0x6E00      	MOVWF       R0 
0x010E	0xD001      	BRA         L_end_I2C1_Is_Idle
L_I2C1_Is_Idle1:
L_I2C1_Is_Idle0:
;__Lib_I2C_b10.c,34 :: 		
0x0110	0x6A00      	CLRF        R0 
;__Lib_I2C_b10.c,35 :: 		
L_end_I2C1_Is_Idle:
0x0112	0x0012      	RETURN      0
; end of _I2C1_Is_Idle
_Lcd_Out:
;__Lib_Lcd.c,184 :: 		
;__Lib_Lcd.c,187 :: 		
0x0114	0xD010      	BRA         L_Lcd_Out11
;__Lib_Lcd.c,188 :: 		
L_Lcd_Out13:
0x0116	0x0E80      	MOVLW       128
0x0118	0x0100      	MOVLB       0
0x011A	0x6FED      	MOVWF       FARG_Lcd_Out_row, 1
0x011C	0xD01A      	BRA         L_Lcd_Out12
;__Lib_Lcd.c,189 :: 		
L_Lcd_Out14:
0x011E	0x0EC0      	MOVLW       192
0x0120	0x6FED      	MOVWF       FARG_Lcd_Out_row, 1
0x0122	0xD017      	BRA         L_Lcd_Out12
;__Lib_Lcd.c,190 :: 		
L_Lcd_Out15:
0x0124	0x0E94      	MOVLW       148
0x0126	0x6FED      	MOVWF       FARG_Lcd_Out_row, 1
0x0128	0xD014      	BRA         L_Lcd_Out12
;__Lib_Lcd.c,191 :: 		
L_Lcd_Out16:
0x012A	0x0ED4      	MOVLW       212
0x012C	0x6FED      	MOVWF       FARG_Lcd_Out_row, 1
0x012E	0xD011      	BRA         L_Lcd_Out12
;__Lib_Lcd.c,192 :: 		
L_Lcd_Out17:
0x0130	0x0E80      	MOVLW       128
0x0132	0x6FED      	MOVWF       FARG_Lcd_Out_row, 1
;__Lib_Lcd.c,193 :: 		
0x0134	0xD00E      	BRA         L_Lcd_Out12
L_Lcd_Out11:
0x0136	0x0100      	MOVLB       0
0x0138	0x51ED      	MOVF        FARG_Lcd_Out_row, 0, 1
0x013A	0x0A01      	XORLW       1
0x013C	0xE0EC      	BZ          L_Lcd_Out13
0x013E	0x51ED      	MOVF        FARG_Lcd_Out_row, 0, 1
0x0140	0x0A02      	XORLW       2
0x0142	0xE0ED      	BZ          L_Lcd_Out14
0x0144	0x51ED      	MOVF        FARG_Lcd_Out_row, 0, 1
0x0146	0x0A03      	XORLW       3
0x0148	0xE0ED      	BZ          L_Lcd_Out15
0x014A	0x51ED      	MOVF        FARG_Lcd_Out_row, 0, 1
0x014C	0x0A04      	XORLW       4
0x014E	0xE0ED      	BZ          L_Lcd_Out16
0x0150	0xD7EF      	BRA         L_Lcd_Out17
L_Lcd_Out12:
;__Lib_Lcd.c,194 :: 		
0x0152	0x05EE      	DECF        FARG_Lcd_Out_column, 0, 1
0x0154	0x6E00      	MOVWF       R0 
0x0156	0x51ED      	MOVF        FARG_Lcd_Out_row, 0, 1
0x0158	0x2600      	ADDWF       R0, 1 
0x015A	0xF0EDC000  	MOVFF       R0, FARG_Lcd_Out_row
;__Lib_Lcd.c,196 :: 		
0x015E	0xF0F3C000  	MOVFF       R0, FARG_Lcd_Cmd_out_char
0x0162	0xDF79      	RCALL       _Lcd_Cmd
;__Lib_Lcd.c,197 :: 		
0x0164	0x95A1      	BCF         __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0), 1
;__Lib_Lcd.c,198 :: 		
0x0166	0x6BF1      	CLRF        Lcd_Out_i_L0, 1
;__Lib_Lcd.c,199 :: 		
L_Lcd_Out18:
0x0168	0x51F1      	MOVF        Lcd_Out_i_L0, 0, 1
0x016A	0x25EF      	ADDWF       FARG_Lcd_Out_text, 0, 1
0x016C	0x6EE9      	MOVWF       FSR0L 
0x016E	0x0E00      	MOVLW       0
0x0170	0x21F0      	ADDWFC      FARG_Lcd_Out_text+1, 0, 1
0x0172	0x6EEA      	MOVWF       FSR0H 
0x0174	0x52EE      	MOVF        POSTINC0, 1 
0x0176	0xE00B      	BZ          L_Lcd_Out19
;__Lib_Lcd.c,200 :: 		
0x0178	0x51F1      	MOVF        Lcd_Out_i_L0, 0, 1
0x017A	0x25EF      	ADDWF       FARG_Lcd_Out_text, 0, 1
0x017C	0x6EE9      	MOVWF       FSR0L 
0x017E	0x0E00      	MOVLW       0
0x0180	0x21F0      	ADDWFC      FARG_Lcd_Out_text+1, 0, 1
0x0182	0x6EEA      	MOVWF       FSR0H 
0x0184	0xF0F2CFEE  	MOVFF       POSTINC0, FARG_Lcd_Chr_CP_out_char
0x0188	0xDFA5      	RCALL       _Lcd_Chr_CP
0x018A	0x2BF1      	INCF        Lcd_Out_i_L0, 1, 1
0x018C	0xD7ED      	BRA         L_Lcd_Out18
L_Lcd_Out19:
;__Lib_Lcd.c,201 :: 		
0x018E	0x85A1      	BSF         __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0), 1
;__Lib_Lcd.c,202 :: 		
L_end_Lcd_Out:
0x0190	0x0012      	RETURN      0
; end of _Lcd_Out
_I2C1_Repeated_Start:
;__Lib_I2C_b10.c,68 :: 		
;__Lib_I2C_b10.c,71 :: 		
0x0192	0xF0EDC08B  	MOVFF       __Lib_I2C_b10__I2C1_TIMEOUT, I2C1_Repeated_Start_timeout_L0
0x0196	0xF0EEC08C  	MOVFF       __Lib_I2C_b10__I2C1_TIMEOUT+1, I2C1_Repeated_Start_timeout_L0+1
0x019A	0xF0EFC08D  	MOVFF       __Lib_I2C_b10__I2C1_TIMEOUT+2, I2C1_Repeated_Start_timeout_L0+2
0x019E	0xF0F0C08E  	MOVFF       __Lib_I2C_b10__I2C1_TIMEOUT+3, I2C1_Repeated_Start_timeout_L0+3
;__Lib_I2C_b10.c,73 :: 		
0x01A2	0x82C5      	BSF         SSPCON2, 1 
;__Lib_I2C_b10.c,74 :: 		
L_I2C1_Repeated_Start12:
0x01A4	0xA2C5      	BTFSS       SSPCON2, 1 
0x01A6	0xD01F      	BRA         L_I2C1_Repeated_Start13
;__Lib_I2C_b10.c,76 :: 		
0x01A8	0x0100      	MOVLB       0
0x01AA	0x518B      	MOVF        __Lib_I2C_b10__I2C1_TIMEOUT, 0, 1
0x01AC	0x118C      	IORWF       __Lib_I2C_b10__I2C1_TIMEOUT+1, 0, 1
0x01AE	0x118D      	IORWF       __Lib_I2C_b10__I2C1_TIMEOUT+2, 0, 1
0x01B0	0x118E      	IORWF       __Lib_I2C_b10__I2C1_TIMEOUT+3, 0, 1
0x01B2	0xE018      	BZ          L_I2C1_Repeated_Start14
;__Lib_I2C_b10.c,78 :: 		
0x01B4	0x51ED      	MOVF        I2C1_Repeated_Start_timeout_L0, 0, 1
0x01B6	0x11EE      	IORWF       I2C1_Repeated_Start_timeout_L0+1, 0, 1
0x01B8	0x11EF      	IORWF       I2C1_Repeated_Start_timeout_L0+2, 0, 1
0x01BA	0x11F0      	IORWF       I2C1_Repeated_Start_timeout_L0+3, 0, 1
0x01BC	0xE10C      	BNZ         L_I2C1_Repeated_Start15
;__Lib_I2C_b10.c,80 :: 		
0x01BE	0xFFE1C0CE  	MOVFF       _I2C1_Timeout_Ptr+2, FSR1L
0x01C2	0xFFE2C0CF  	MOVFF       _I2C1_Timeout_Ptr+3, FSR1H
0x01C6	0x0E06      	MOVLW       6
0x01C8	0x6EE6      	MOVWF       POSTINC1 
0x01CA	0xF000C0CC  	MOVFF       _I2C1_Timeout_Ptr, R0
0x01CE	0xF001C0CD  	MOVFF       _I2C1_Timeout_Ptr+1, R1
0x01D2	0xDF87      	RCALL       _____DoIFC
;__Lib_I2C_b10.c,81 :: 		
0x01D4	0xD008      	BRA         L_I2C1_Repeated_Start13
;__Lib_I2C_b10.c,82 :: 		
L_I2C1_Repeated_Start15:
;__Lib_I2C_b10.c,83 :: 		
0x01D6	0x0E01      	MOVLW       1
0x01D8	0x0100      	MOVLB       0
0x01DA	0x5FED      	SUBWF       I2C1_Repeated_Start_timeout_L0, 1, 1
0x01DC	0x0E00      	MOVLW       0
0x01DE	0x5BEE      	SUBWFB      I2C1_Repeated_Start_timeout_L0+1, 1, 1
0x01E0	0x5BEF      	SUBWFB      I2C1_Repeated_Start_timeout_L0+2, 1, 1
0x01E2	0x5BF0      	SUBWFB      I2C1_Repeated_Start_timeout_L0+3, 1, 1
;__Lib_I2C_b10.c,84 :: 		
L_I2C1_Repeated_Start14:
;__Lib_I2C_b10.c,85 :: 		
0x01E4	0xD7DF      	BRA         L_I2C1_Repeated_Start12
L_I2C1_Repeated_Start13:
;__Lib_I2C_b10.c,86 :: 		
L_end_I2C1_Repeated_Start:
0x01E6	0x0012      	RETURN      0
; end of _I2C1_Repeated_Start
_I2C1_Stop:
;__Lib_I2C_b10.c,185 :: 		
;__Lib_I2C_b10.c,186 :: 		
0x01E8	0x84C5      	BSF         SSPCON2, 2 
;__Lib_I2C_b10.c,187 :: 		
L_end_I2C1_Stop:
0x01EA	0x0012      	RETURN      0
; end of _I2C1_Stop
_I2C1_Start:
;__Lib_I2C_b10.c,37 :: 		
;__Lib_I2C_b10.c,41 :: 		
0x01EC	0xF0E9C08B  	MOVFF       __Lib_I2C_b10__I2C1_TIMEOUT, I2C1_Start_timeout_L0
0x01F0	0xF0EAC08C  	MOVFF       __Lib_I2C_b10__I2C1_TIMEOUT+1, I2C1_Start_timeout_L0+1
0x01F4	0xF0EBC08D  	MOVFF       __Lib_I2C_b10__I2C1_TIMEOUT+2, I2C1_Start_timeout_L0+2
0x01F8	0xF0ECC08E  	MOVFF       __Lib_I2C_b10__I2C1_TIMEOUT+3, I2C1_Start_timeout_L0+3
;__Lib_I2C_b10.c,43 :: 		
0x01FC	0x0100      	MOVLB       0
0x01FE	0x6BE7      	CLRF        I2C1_Start_j_L0, 1
0x0200	0x6BE8      	CLRF        I2C1_Start_j_L0+1, 1
L_I2C1_Start2:
0x0202	0x51E8      	MOVF        I2C1_Start_j_L0+1, 0, 1
0x0204	0x0812      	SUBLW       18
0x0206	0xE102      	BNZ         L__I2C1_Start39
0x0208	0x51E7      	MOVF        I2C1_Start_j_L0, 0, 1
0x020A	0x088E      	SUBLW       142
L__I2C1_Start39:
0x020C	0xE308      	BNC         L_I2C1_Start3
;__Lib_I2C_b10.c,44 :: 		
0x020E	0xDF75      	RCALL       _I2C1_Is_Idle
0x0210	0x5200      	MOVF        R0, 1 
0x0212	0xE001      	BZ          L_I2C1_Start5
;__Lib_I2C_b10.c,45 :: 		
0x0214	0xD004      	BRA         L_I2C1_Start3
L_I2C1_Start5:
;__Lib_I2C_b10.c,43 :: 		
0x0216	0x0100      	MOVLB       0
0x0218	0x4BE7      	INFSNZ      I2C1_Start_j_L0, 1, 1
0x021A	0x2BE8      	INCF        I2C1_Start_j_L0+1, 1, 1
;__Lib_I2C_b10.c,46 :: 		
0x021C	0xD7F2      	BRA         L_I2C1_Start2
L_I2C1_Start3:
0x021E	0x0100      	MOVLB       0
;__Lib_I2C_b10.c,48 :: 		
0x0220	0x0E12      	MOVLW       18
0x0222	0x5DE8      	SUBWF       I2C1_Start_j_L0+1, 0, 1
0x0224	0xE102      	BNZ         L__I2C1_Start40
0x0226	0x0E8F      	MOVLW       143
0x0228	0x5DE7      	SUBWF       I2C1_Start_j_L0, 0, 1
L__I2C1_Start40:
0x022A	0xE303      	BNC         L_I2C1_Start6
;__Lib_I2C_b10.c,49 :: 		
0x022C	0x0E7B      	MOVLW       123
0x022E	0x6E00      	MOVWF       R0 
0x0230	0xD024      	BRA         L_end_I2C1_Start
L_I2C1_Start6:
;__Lib_I2C_b10.c,51 :: 		
0x0232	0x80C5      	BSF         SSPCON2, 0 
;__Lib_I2C_b10.c,52 :: 		
L_I2C1_Start8:
0x0234	0xA0C5      	BTFSS       SSPCON2, 0 
0x0236	0xD020      	BRA         L_I2C1_Start9
;__Lib_I2C_b10.c,54 :: 		
0x0238	0x518B      	MOVF        __Lib_I2C_b10__I2C1_TIMEOUT, 0, 1
0x023A	0x118C      	IORWF       __Lib_I2C_b10__I2C1_TIMEOUT+1, 0, 1
0x023C	0x118D      	IORWF       __Lib_I2C_b10__I2C1_TIMEOUT+2, 0, 1
0x023E	0x118E      	IORWF       __Lib_I2C_b10__I2C1_TIMEOUT+3, 0, 1
0x0240	0xE01A      	BZ          L_I2C1_Start10
;__Lib_I2C_b10.c,56 :: 		
0x0242	0x51E9      	MOVF        I2C1_Start_timeout_L0, 0, 1
0x0244	0x11EA      	IORWF       I2C1_Start_timeout_L0+1, 0, 1
0x0246	0x11EB      	IORWF       I2C1_Start_timeout_L0+2, 0, 1
0x0248	0x11EC      	IORWF       I2C1_Start_timeout_L0+3, 0, 1
0x024A	0xE10E      	BNZ         L_I2C1_Start11
;__Lib_I2C_b10.c,58 :: 		
0x024C	0xFFE1C0CE  	MOVFF       _I2C1_Timeout_Ptr+2, FSR1L
0x0250	0xFFE2C0CF  	MOVFF       _I2C1_Timeout_Ptr+3, FSR1H
0x0254	0x0E05      	MOVLW       5
0x0256	0x6EE6      	MOVWF       POSTINC1 
0x0258	0xF000C0CC  	MOVFF       _I2C1_Timeout_Ptr, R0
0x025C	0xF001C0CD  	MOVFF       _I2C1_Timeout_Ptr+1, R1
0x0260	0xDF40      	RCALL       _____DoIFC
;__Lib_I2C_b10.c,59 :: 		
0x0262	0x0E01      	MOVLW       1
0x0264	0x6E00      	MOVWF       R0 
0x0266	0xD009      	BRA         L_end_I2C1_Start
;__Lib_I2C_b10.c,60 :: 		
L_I2C1_Start11:
;__Lib_I2C_b10.c,61 :: 		
0x0268	0x0E01      	MOVLW       1
0x026A	0x0100      	MOVLB       0
0x026C	0x5FE9      	SUBWF       I2C1_Start_timeout_L0, 1, 1
0x026E	0x0E00      	MOVLW       0
0x0270	0x5BEA      	SUBWFB      I2C1_Start_timeout_L0+1, 1, 1
0x0272	0x5BEB      	SUBWFB      I2C1_Start_timeout_L0+2, 1, 1
0x0274	0x5BEC      	SUBWFB      I2C1_Start_timeout_L0+3, 1, 1
;__Lib_I2C_b10.c,62 :: 		
L_I2C1_Start10:
;__Lib_I2C_b10.c,63 :: 		
0x0276	0xD7DE      	BRA         L_I2C1_Start8
L_I2C1_Start9:
;__Lib_I2C_b10.c,64 :: 		
0x0278	0x6A00      	CLRF        R0 
;__Lib_I2C_b10.c,66 :: 		
L_end_I2C1_Start:
0x027A	0x0012      	RETURN      0
; end of _I2C1_Start
_Div_8X8_U:
;__Lib_Math.c,77 :: 		
;__Lib_Math.c,84 :: 		
0x027C	0x6A08      	CLRF        R8, 0
;__Lib_Math.c,85 :: 		
0x027E	0x0E08      	MOVLW       8
;__Lib_Math.c,86 :: 		
0x0280	0x6E0C      	MOVWF       R12, 0
;__Lib_Math.c,87 :: 		
0x0282	0x3400      	RLCF        R0, 0, 0
;__Lib_Math.c,88 :: 		
0x0284	0x3608      	RLCF        R8, 1, 0
;__Lib_Math.c,89 :: 		
0x0286	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,90 :: 		
0x0288	0x5E08      	SUBWF       R8, 1, 0
;__Lib_Math.c,91 :: 		
0x028A	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,92 :: 		
0x028C	0xD002      	BRA         $+6
;__Lib_Math.c,93 :: 		
0x028E	0x2608      	ADDWF       R8, 1, 0
;__Lib_Math.c,94 :: 		
0x0290	0x90D8      	BCF         STATUS, 0, 0
;__Lib_Math.c,95 :: 		
0x0292	0x3600      	RLCF        R0, 1, 0
;__Lib_Math.c,96 :: 		
0x0294	0x2E0C      	DECFSZ      R12, 1, 0
;__Lib_Math.c,97 :: 		
0x0296	0xD7F5      	BRA         $-20
;__Lib_Math.c,99 :: 		
L_end_Div_8X8_U:
0x0298	0x0012      	RETURN      0
; end of _Div_8X8_U
_I2C1_Rd:
;__Lib_I2C_b10.c,88 :: 		
;__Lib_I2C_b10.c,92 :: 		
0x029A	0xF0E9C08B  	MOVFF       __Lib_I2C_b10__I2C1_TIMEOUT, I2C1_Rd_timeout_L0
0x029E	0xF0EAC08C  	MOVFF       __Lib_I2C_b10__I2C1_TIMEOUT+1, I2C1_Rd_timeout_L0+1
0x02A2	0xF0EBC08D  	MOVFF       __Lib_I2C_b10__I2C1_TIMEOUT+2, I2C1_Rd_timeout_L0+2
0x02A6	0xF0ECC08E  	MOVFF       __Lib_I2C_b10__I2C1_TIMEOUT+3, I2C1_Rd_timeout_L0+3
;__Lib_I2C_b10.c,95 :: 		
0x02AA	0x969E      	BCF         PIR1, 3 
;__Lib_I2C_b10.c,96 :: 		
0x02AC	0x86C5      	BSF         SSPCON2, 3 
;__Lib_I2C_b10.c,98 :: 		
L_I2C1_Rd16:
0x02AE	0xB69E      	BTFSC       PIR1, 3 
0x02B0	0xD01F      	BRA         L_I2C1_Rd17
;__Lib_I2C_b10.c,100 :: 		
0x02B2	0x0100      	MOVLB       0
0x02B4	0x518B      	MOVF        __Lib_I2C_b10__I2C1_TIMEOUT, 0, 1
0x02B6	0x118C      	IORWF       __Lib_I2C_b10__I2C1_TIMEOUT+1, 0, 1
0x02B8	0x118D      	IORWF       __Lib_I2C_b10__I2C1_TIMEOUT+2, 0, 1
0x02BA	0x118E      	IORWF       __Lib_I2C_b10__I2C1_TIMEOUT+3, 0, 1
0x02BC	0xE018      	BZ          L_I2C1_Rd18
;__Lib_I2C_b10.c,102 :: 		
0x02BE	0x51E9      	MOVF        I2C1_Rd_timeout_L0, 0, 1
0x02C0	0x11EA      	IORWF       I2C1_Rd_timeout_L0+1, 0, 1
0x02C2	0x11EB      	IORWF       I2C1_Rd_timeout_L0+2, 0, 1
0x02C4	0x11EC      	IORWF       I2C1_Rd_timeout_L0+3, 0, 1
0x02C6	0xE10C      	BNZ         L_I2C1_Rd19
;__Lib_I2C_b10.c,104 :: 		
0x02C8	0xFFE1C0CE  	MOVFF       _I2C1_Timeout_Ptr+2, FSR1L
0x02CC	0xFFE2C0CF  	MOVFF       _I2C1_Timeout_Ptr+3, FSR1H
0x02D0	0x0E03      	MOVLW       3
0x02D2	0x6EE6      	MOVWF       POSTINC1 
0x02D4	0xF000C0CC  	MOVFF       _I2C1_Timeout_Ptr, R0
0x02D8	0xF001C0CD  	MOVFF       _I2C1_Timeout_Ptr+1, R1
0x02DC	0xDF02      	RCALL       _____DoIFC
;__Lib_I2C_b10.c,105 :: 		
0x02DE	0xD008      	BRA         L_I2C1_Rd17
;__Lib_I2C_b10.c,106 :: 		
L_I2C1_Rd19:
;__Lib_I2C_b10.c,107 :: 		
0x02E0	0x0E01      	MOVLW       1
0x02E2	0x0100      	MOVLB       0
0x02E4	0x5FE9      	SUBWF       I2C1_Rd_timeout_L0, 1, 1
0x02E6	0x0E00      	MOVLW       0
0x02E8	0x5BEA      	SUBWFB      I2C1_Rd_timeout_L0+1, 1, 1
0x02EA	0x5BEB      	SUBWFB      I2C1_Rd_timeout_L0+2, 1, 1
0x02EC	0x5BEC      	SUBWFB      I2C1_Rd_timeout_L0+3, 1, 1
;__Lib_I2C_b10.c,108 :: 		
L_I2C1_Rd18:
;__Lib_I2C_b10.c,109 :: 		
0x02EE	0xD7DF      	BRA         L_I2C1_Rd16
L_I2C1_Rd17:
0x02F0	0x0100      	MOVLB       0
;__Lib_I2C_b10.c,111 :: 		
0x02F2	0xF0E8CFC9  	MOVFF       SSPBUF, I2C1_Rd_tmp_L0
;__Lib_I2C_b10.c,112 :: 		
0x02F6	0x51E7      	MOVF        FARG_I2C1_Rd_ack, 0, 1
0x02F8	0x0A00      	XORLW       0
0x02FA	0xE102      	BNZ         L_I2C1_Rd20
;__Lib_I2C_b10.c,113 :: 		
0x02FC	0x8AC5      	BSF         SSPCON2, 5 
0x02FE	0xD001      	BRA         L_I2C1_Rd21
L_I2C1_Rd20:
;__Lib_I2C_b10.c,115 :: 		
0x0300	0x9AC5      	BCF         SSPCON2, 5 
L_I2C1_Rd21:
;__Lib_I2C_b10.c,117 :: 		
0x0302	0x969E      	BCF         PIR1, 3 
;__Lib_I2C_b10.c,118 :: 		
0x0304	0x88C5      	BSF         SSPCON2, 4 
;__Lib_I2C_b10.c,121 :: 		
0x0306	0xF0E9C08B  	MOVFF       __Lib_I2C_b10__I2C1_TIMEOUT, I2C1_Rd_timeout_L0
0x030A	0xF0EAC08C  	MOVFF       __Lib_I2C_b10__I2C1_TIMEOUT+1, I2C1_Rd_timeout_L0+1
0x030E	0xF0EBC08D  	MOVFF       __Lib_I2C_b10__I2C1_TIMEOUT+2, I2C1_Rd_timeout_L0+2
0x0312	0xF0ECC08E  	MOVFF       __Lib_I2C_b10__I2C1_TIMEOUT+3, I2C1_Rd_timeout_L0+3
;__Lib_I2C_b10.c,123 :: 		
L_I2C1_Rd22:
0x0316	0xB69E      	BTFSC       PIR1, 3 
0x0318	0xD01E      	BRA         L_I2C1_Rd23
;__Lib_I2C_b10.c,125 :: 		
0x031A	0x518B      	MOVF        __Lib_I2C_b10__I2C1_TIMEOUT, 0, 1
0x031C	0x118C      	IORWF       __Lib_I2C_b10__I2C1_TIMEOUT+1, 0, 1
0x031E	0x118D      	IORWF       __Lib_I2C_b10__I2C1_TIMEOUT+2, 0, 1
0x0320	0x118E      	IORWF       __Lib_I2C_b10__I2C1_TIMEOUT+3, 0, 1
0x0322	0xE018      	BZ          L_I2C1_Rd24
;__Lib_I2C_b10.c,127 :: 		
0x0324	0x51E9      	MOVF        I2C1_Rd_timeout_L0, 0, 1
0x0326	0x11EA      	IORWF       I2C1_Rd_timeout_L0+1, 0, 1
0x0328	0x11EB      	IORWF       I2C1_Rd_timeout_L0+2, 0, 1
0x032A	0x11EC      	IORWF       I2C1_Rd_timeout_L0+3, 0, 1
0x032C	0xE10C      	BNZ         L_I2C1_Rd25
;__Lib_I2C_b10.c,129 :: 		
0x032E	0xFFE1C0CE  	MOVFF       _I2C1_Timeout_Ptr+2, FSR1L
0x0332	0xFFE2C0CF  	MOVFF       _I2C1_Timeout_Ptr+3, FSR1H
0x0336	0x0E03      	MOVLW       3
0x0338	0x6EE6      	MOVWF       POSTINC1 
0x033A	0xF000C0CC  	MOVFF       _I2C1_Timeout_Ptr, R0
0x033E	0xF001C0CD  	MOVFF       _I2C1_Timeout_Ptr+1, R1
0x0342	0xDECF      	RCALL       _____DoIFC
;__Lib_I2C_b10.c,130 :: 		
0x0344	0xD008      	BRA         L_I2C1_Rd23
;__Lib_I2C_b10.c,131 :: 		
L_I2C1_Rd25:
;__Lib_I2C_b10.c,132 :: 		
0x0346	0x0E01      	MOVLW       1
0x0348	0x0100      	MOVLB       0
0x034A	0x5FE9      	SUBWF       I2C1_Rd_timeout_L0, 1, 1
0x034C	0x0E00      	MOVLW       0
0x034E	0x5BEA      	SUBWFB      I2C1_Rd_timeout_L0+1, 1, 1
0x0350	0x5BEB      	SUBWFB      I2C1_Rd_timeout_L0+2, 1, 1
0x0352	0x5BEC      	SUBWFB      I2C1_Rd_timeout_L0+3, 1, 1
;__Lib_I2C_b10.c,133 :: 		
L_I2C1_Rd24:
;__Lib_I2C_b10.c,134 :: 		
0x0354	0xD7E0      	BRA         L_I2C1_Rd22
L_I2C1_Rd23:
;__Lib_I2C_b10.c,136 :: 		
0x0356	0xF000C0E8  	MOVFF       I2C1_Rd_tmp_L0, R0
;__Lib_I2C_b10.c,137 :: 		
L_end_I2C1_Rd:
0x035A	0x0012      	RETURN      0
; end of _I2C1_Rd
_I2C1_Wr:
;__Lib_I2C_b10.c,139 :: 		
;__Lib_I2C_b10.c,142 :: 		
0x035C	0x969E      	BCF         PIR1, 3 
;__Lib_I2C_b10.c,143 :: 		
0x035E	0xFFC9C0E7  	MOVFF       FARG_I2C1_Wr_data_, SSPBUF
;__Lib_I2C_b10.c,145 :: 		
0x0362	0xF0E8C08B  	MOVFF       __Lib_I2C_b10__I2C1_TIMEOUT, I2C1_Wr_timeout_L0
0x0366	0xF0E9C08C  	MOVFF       __Lib_I2C_b10__I2C1_TIMEOUT+1, I2C1_Wr_timeout_L0+1
0x036A	0xF0EAC08D  	MOVFF       __Lib_I2C_b10__I2C1_TIMEOUT+2, I2C1_Wr_timeout_L0+2
0x036E	0xF0EBC08E  	MOVFF       __Lib_I2C_b10__I2C1_TIMEOUT+3, I2C1_Wr_timeout_L0+3
;__Lib_I2C_b10.c,147 :: 		
L_I2C1_Wr26:
0x0372	0xA4C7      	BTFSS       SSPSTAT, 2 
0x0374	0xD021      	BRA         L_I2C1_Wr27
;__Lib_I2C_b10.c,149 :: 		
0x0376	0x0100      	MOVLB       0
0x0378	0x518B      	MOVF        __Lib_I2C_b10__I2C1_TIMEOUT, 0, 1
0x037A	0x118C      	IORWF       __Lib_I2C_b10__I2C1_TIMEOUT+1, 0, 1
0x037C	0x118D      	IORWF       __Lib_I2C_b10__I2C1_TIMEOUT+2, 0, 1
0x037E	0x118E      	IORWF       __Lib_I2C_b10__I2C1_TIMEOUT+3, 0, 1
0x0380	0xE01A      	BZ          L_I2C1_Wr28
;__Lib_I2C_b10.c,151 :: 		
0x0382	0x51E8      	MOVF        I2C1_Wr_timeout_L0, 0, 1
0x0384	0x11E9      	IORWF       I2C1_Wr_timeout_L0+1, 0, 1
0x0386	0x11EA      	IORWF       I2C1_Wr_timeout_L0+2, 0, 1
0x0388	0x11EB      	IORWF       I2C1_Wr_timeout_L0+3, 0, 1
0x038A	0xE10E      	BNZ         L_I2C1_Wr29
;__Lib_I2C_b10.c,153 :: 		
0x038C	0xFFE1C0CE  	MOVFF       _I2C1_Timeout_Ptr+2, FSR1L
0x0390	0xFFE2C0CF  	MOVFF       _I2C1_Timeout_Ptr+3, FSR1H
0x0394	0x0E04      	MOVLW       4
0x0396	0x6EE6      	MOVWF       POSTINC1 
0x0398	0xF000C0CC  	MOVFF       _I2C1_Timeout_Ptr, R0
0x039C	0xF001C0CD  	MOVFF       _I2C1_Timeout_Ptr+1, R1
0x03A0	0xDEA0      	RCALL       _____DoIFC
;__Lib_I2C_b10.c,154 :: 		
0x03A2	0x0E01      	MOVLW       1
0x03A4	0x6E00      	MOVWF       R0 
0x03A6	0xD03A      	BRA         L_end_I2C1_Wr
;__Lib_I2C_b10.c,155 :: 		
L_I2C1_Wr29:
;__Lib_I2C_b10.c,156 :: 		
0x03A8	0x0E01      	MOVLW       1
0x03AA	0x0100      	MOVLB       0
0x03AC	0x5FE8      	SUBWF       I2C1_Wr_timeout_L0, 1, 1
0x03AE	0x0E00      	MOVLW       0
0x03B0	0x5BE9      	SUBWFB      I2C1_Wr_timeout_L0+1, 1, 1
0x03B2	0x5BEA      	SUBWFB      I2C1_Wr_timeout_L0+2, 1, 1
0x03B4	0x5BEB      	SUBWFB      I2C1_Wr_timeout_L0+3, 1, 1
;__Lib_I2C_b10.c,157 :: 		
L_I2C1_Wr28:
;__Lib_I2C_b10.c,158 :: 		
0x03B6	0xD7DD      	BRA         L_I2C1_Wr26
L_I2C1_Wr27:
;__Lib_I2C_b10.c,160 :: 		
0x03B8	0xF0E8C08B  	MOVFF       __Lib_I2C_b10__I2C1_TIMEOUT, I2C1_Wr_timeout_L0
0x03BC	0xF0E9C08C  	MOVFF       __Lib_I2C_b10__I2C1_TIMEOUT+1, I2C1_Wr_timeout_L0+1
0x03C0	0xF0EAC08D  	MOVFF       __Lib_I2C_b10__I2C1_TIMEOUT+2, I2C1_Wr_timeout_L0+2
0x03C4	0xF0EBC08E  	MOVFF       __Lib_I2C_b10__I2C1_TIMEOUT+3, I2C1_Wr_timeout_L0+3
;__Lib_I2C_b10.c,162 :: 		
L_I2C1_Wr30:
0x03C8	0xB69E      	BTFSC       PIR1, 3 
0x03CA	0xD021      	BRA         L_I2C1_Wr31
;__Lib_I2C_b10.c,164 :: 		
0x03CC	0x0100      	MOVLB       0
0x03CE	0x518B      	MOVF        __Lib_I2C_b10__I2C1_TIMEOUT, 0, 1
0x03D0	0x118C      	IORWF       __Lib_I2C_b10__I2C1_TIMEOUT+1, 0, 1
0x03D2	0x118D      	IORWF       __Lib_I2C_b10__I2C1_TIMEOUT+2, 0, 1
0x03D4	0x118E      	IORWF       __Lib_I2C_b10__I2C1_TIMEOUT+3, 0, 1
0x03D6	0xE01A      	BZ          L_I2C1_Wr32
;__Lib_I2C_b10.c,166 :: 		
0x03D8	0x51E8      	MOVF        I2C1_Wr_timeout_L0, 0, 1
0x03DA	0x11E9      	IORWF       I2C1_Wr_timeout_L0+1, 0, 1
0x03DC	0x11EA      	IORWF       I2C1_Wr_timeout_L0+2, 0, 1
0x03DE	0x11EB      	IORWF       I2C1_Wr_timeout_L0+3, 0, 1
0x03E0	0xE10E      	BNZ         L_I2C1_Wr33
;__Lib_I2C_b10.c,168 :: 		
0x03E2	0xFFE1C0CE  	MOVFF       _I2C1_Timeout_Ptr+2, FSR1L
0x03E6	0xFFE2C0CF  	MOVFF       _I2C1_Timeout_Ptr+3, FSR1H
0x03EA	0x0E04      	MOVLW       4
0x03EC	0x6EE6      	MOVWF       POSTINC1 
0x03EE	0xF000C0CC  	MOVFF       _I2C1_Timeout_Ptr, R0
0x03F2	0xF001C0CD  	MOVFF       _I2C1_Timeout_Ptr+1, R1
0x03F6	0xDE75      	RCALL       _____DoIFC
;__Lib_I2C_b10.c,169 :: 		
0x03F8	0x0E01      	MOVLW       1
0x03FA	0x6E00      	MOVWF       R0 
0x03FC	0xD00F      	BRA         L_end_I2C1_Wr
;__Lib_I2C_b10.c,170 :: 		
L_I2C1_Wr33:
;__Lib_I2C_b10.c,171 :: 		
0x03FE	0x0E01      	MOVLW       1
0x0400	0x0100      	MOVLB       0
0x0402	0x5FE8      	SUBWF       I2C1_Wr_timeout_L0, 1, 1
0x0404	0x0E00      	MOVLW       0
0x0406	0x5BE9      	SUBWFB      I2C1_Wr_timeout_L0+1, 1, 1
0x0408	0x5BEA      	SUBWFB      I2C1_Wr_timeout_L0+2, 1, 1
0x040A	0x5BEB      	SUBWFB      I2C1_Wr_timeout_L0+3, 1, 1
;__Lib_I2C_b10.c,172 :: 		
L_I2C1_Wr32:
;__Lib_I2C_b10.c,173 :: 		
0x040C	0xD7DD      	BRA         L_I2C1_Wr30
L_I2C1_Wr31:
;__Lib_I2C_b10.c,175 :: 		
0x040E	0xBCC5      	BTFSC       SSPCON2, 6 
0x0410	0xD002      	BRA         L_I2C1_Wr34
;__Lib_I2C_b10.c,176 :: 		
0x0412	0x6A00      	CLRF        R0 
0x0414	0xD003      	BRA         L_end_I2C1_Wr
;__Lib_I2C_b10.c,177 :: 		
L_I2C1_Wr34:
;__Lib_I2C_b10.c,179 :: 		
0x0416	0x84C5      	BSF         SSPCON2, 2 
;__Lib_I2C_b10.c,180 :: 		
0x0418	0x0E02      	MOVLW       2
0x041A	0x6E00      	MOVWF       R0 
;__Lib_I2C_b10.c,182 :: 		
L_end_I2C1_Wr:
0x041C	0x0012      	RETURN      0
; end of _I2C1_Wr
_day_display:
;T_RTCDS3231_1.c,110 :: 		void day_display(){                              // Day display function
;T_RTCDS3231_1.c,111 :: 		switch(day){
0x041E	0xD047      	BRA         L_day_display16
;T_RTCDS3231_1.c,112 :: 		case 1:  Lcd_Out(2, 1, "Sun"); break;
L_day_display18:
0x0420	0x0E02      	MOVLW       2
0x0422	0x0100      	MOVLB       0
0x0424	0x6FED      	MOVWF       FARG_Lcd_Out_row, 1
0x0426	0x0E01      	MOVLW       1
0x0428	0x6FEE      	MOVWF       FARG_Lcd_Out_column, 1
0x042A	0x0E52      	MOVLW       ?lstr5_T_RTCDS3231_1
0x042C	0x6FEF      	MOVWF       FARG_Lcd_Out_text, 1
0x042E	0x0E00      	MOVLW       hi_addr(?lstr5_T_RTCDS3231_1)
0x0430	0x6FF0      	MOVWF       FARG_Lcd_Out_text+1, 1
0x0432	0xDE70      	RCALL       _Lcd_Out
0x0434	0xD050      	BRA         L_day_display17
;T_RTCDS3231_1.c,113 :: 		case 2:  Lcd_Out(2, 1, "Mon"); break;
L_day_display19:
0x0436	0x0E02      	MOVLW       2
0x0438	0x6FED      	MOVWF       FARG_Lcd_Out_row, 1
0x043A	0x0E01      	MOVLW       1
0x043C	0x6FEE      	MOVWF       FARG_Lcd_Out_column, 1
0x043E	0x0E56      	MOVLW       ?lstr6_T_RTCDS3231_1
0x0440	0x6FEF      	MOVWF       FARG_Lcd_Out_text, 1
0x0442	0x0E00      	MOVLW       hi_addr(?lstr6_T_RTCDS3231_1)
0x0444	0x6FF0      	MOVWF       FARG_Lcd_Out_text+1, 1
0x0446	0xDE66      	RCALL       _Lcd_Out
0x0448	0xD046      	BRA         L_day_display17
;T_RTCDS3231_1.c,114 :: 		case 3:  Lcd_Out(2, 1, "Tue"); break;
L_day_display20:
0x044A	0x0E02      	MOVLW       2
0x044C	0x6FED      	MOVWF       FARG_Lcd_Out_row, 1
0x044E	0x0E01      	MOVLW       1
0x0450	0x6FEE      	MOVWF       FARG_Lcd_Out_column, 1
0x0452	0x0E4E      	MOVLW       ?lstr7_T_RTCDS3231_1
0x0454	0x6FEF      	MOVWF       FARG_Lcd_Out_text, 1
0x0456	0x0E00      	MOVLW       hi_addr(?lstr7_T_RTCDS3231_1)
0x0458	0x6FF0      	MOVWF       FARG_Lcd_Out_text+1, 1
0x045A	0xDE5C      	RCALL       _Lcd_Out
0x045C	0xD03C      	BRA         L_day_display17
;T_RTCDS3231_1.c,115 :: 		case 4:  Lcd_Out(2, 1, "Wed"); break;
L_day_display21:
0x045E	0x0E02      	MOVLW       2
0x0460	0x6FED      	MOVWF       FARG_Lcd_Out_row, 1
0x0462	0x0E01      	MOVLW       1
0x0464	0x6FEE      	MOVWF       FARG_Lcd_Out_column, 1
0x0466	0x0E46      	MOVLW       ?lstr8_T_RTCDS3231_1
0x0468	0x6FEF      	MOVWF       FARG_Lcd_Out_text, 1
0x046A	0x0E00      	MOVLW       hi_addr(?lstr8_T_RTCDS3231_1)
0x046C	0x6FF0      	MOVWF       FARG_Lcd_Out_text+1, 1
0x046E	0xDE52      	RCALL       _Lcd_Out
0x0470	0xD032      	BRA         L_day_display17
;T_RTCDS3231_1.c,116 :: 		case 5:  Lcd_Out(2, 1, "Thu"); break;
L_day_display22:
0x0472	0x0E02      	MOVLW       2
0x0474	0x6FED      	MOVWF       FARG_Lcd_Out_row, 1
0x0476	0x0E01      	MOVLW       1
0x0478	0x6FEE      	MOVWF       FARG_Lcd_Out_column, 1
0x047A	0x0E4A      	MOVLW       ?lstr9_T_RTCDS3231_1
0x047C	0x6FEF      	MOVWF       FARG_Lcd_Out_text, 1
0x047E	0x0E00      	MOVLW       hi_addr(?lstr9_T_RTCDS3231_1)
0x0480	0x6FF0      	MOVWF       FARG_Lcd_Out_text+1, 1
0x0482	0xDE48      	RCALL       _Lcd_Out
0x0484	0xD028      	BRA         L_day_display17
;T_RTCDS3231_1.c,117 :: 		case 6:  Lcd_Out(2, 1, "Fri"); break;
L_day_display23:
0x0486	0x0E02      	MOVLW       2
0x0488	0x6FED      	MOVWF       FARG_Lcd_Out_row, 1
0x048A	0x0E01      	MOVLW       1
0x048C	0x6FEE      	MOVWF       FARG_Lcd_Out_column, 1
0x048E	0x0E5A      	MOVLW       ?lstr10_T_RTCDS3231_1
0x0490	0x6FEF      	MOVWF       FARG_Lcd_Out_text, 1
0x0492	0x0E00      	MOVLW       hi_addr(?lstr10_T_RTCDS3231_1)
0x0494	0x6FF0      	MOVWF       FARG_Lcd_Out_text+1, 1
0x0496	0xDE3E      	RCALL       _Lcd_Out
0x0498	0xD01E      	BRA         L_day_display17
;T_RTCDS3231_1.c,118 :: 		default: Lcd_Out(2, 1, "Sat"); break;
L_day_display24:
0x049A	0x0E02      	MOVLW       2
0x049C	0x6FED      	MOVWF       FARG_Lcd_Out_row, 1
0x049E	0x0E01      	MOVLW       1
0x04A0	0x6FEE      	MOVWF       FARG_Lcd_Out_column, 1
0x04A2	0x0E69      	MOVLW       ?lstr11_T_RTCDS3231_1
0x04A4	0x6FEF      	MOVWF       FARG_Lcd_Out_text, 1
0x04A6	0x0E00      	MOVLW       hi_addr(?lstr11_T_RTCDS3231_1)
0x04A8	0x6FF0      	MOVWF       FARG_Lcd_Out_text+1, 1
0x04AA	0xDE34      	RCALL       _Lcd_Out
0x04AC	0xD014      	BRA         L_day_display17
;T_RTCDS3231_1.c,119 :: 		}
L_day_display16:
0x04AE	0x0100      	MOVLB       0
0x04B0	0x51D0      	MOVF        _day, 0, 1
0x04B2	0x0A01      	XORLW       1
0x04B4	0xE0B5      	BZ          L_day_display18
0x04B6	0x51D0      	MOVF        _day, 0, 1
0x04B8	0x0A02      	XORLW       2
0x04BA	0xE0BD      	BZ          L_day_display19
0x04BC	0x51D0      	MOVF        _day, 0, 1
0x04BE	0x0A03      	XORLW       3
0x04C0	0xE0C4      	BZ          L_day_display20
0x04C2	0x51D0      	MOVF        _day, 0, 1
0x04C4	0x0A04      	XORLW       4
0x04C6	0xE0CB      	BZ          L_day_display21
0x04C8	0x51D0      	MOVF        _day, 0, 1
0x04CA	0x0A05      	XORLW       5
0x04CC	0xE0D2      	BZ          L_day_display22
0x04CE	0x51D0      	MOVF        _day, 0, 1
0x04D0	0x0A06      	XORLW       6
0x04D2	0xE0D9      	BZ          L_day_display23
0x04D4	0xD7E2      	BRA         L_day_display24
L_day_display17:
;T_RTCDS3231_1.c,120 :: 		}
L_end_day_display:
0x04D6	0x0012      	RETURN      0
; end of _day_display
_blink:
;T_RTCDS3231_1.c,146 :: 		void blink(){
;T_RTCDS3231_1.c,147 :: 		char j = 0;
0x04D8	0x0100      	MOVLB       0
0x04DA	0x6BE1      	CLRF        blink_j_L0, 1
;T_RTCDS3231_1.c,148 :: 		while(j < 10 && (PORTB.F3 || i >= 5) && PORTB.F4 && (PORTB.F5 || i < 5)){
L_blink25:
0x04DC	0x0E0A      	MOVLW       10
0x04DE	0x5DE1      	SUBWF       blink_j_L0, 0, 1
0x04E0	0xE218      	BC          L_blink26
0x04E2	0xB681      	BTFSC       PORTB, 3 
0x04E4	0xD004      	BRA         L__blink109
0x04E6	0x0E05      	MOVLW       5
0x04E8	0x5DD6      	SUBWF       _i, 0, 1
0x04EA	0xE201      	BC          L__blink109
0x04EC	0xD012      	BRA         L_blink26
L__blink109:
0x04EE	0xA881      	BTFSS       PORTB, 4 
0x04F0	0xD010      	BRA         L_blink26
0x04F2	0xBA81      	BTFSC       PORTB, 5 
0x04F4	0xD004      	BRA         L__blink108
0x04F6	0x0E05      	MOVLW       5
0x04F8	0x5DD6      	SUBWF       _i, 0, 1
0x04FA	0xE301      	BNC         L__blink108
0x04FC	0xD00A      	BRA         L_blink26
L__blink108:
L__blink107:
;T_RTCDS3231_1.c,149 :: 		j++;
0x04FE	0x2BE1      	INCF        blink_j_L0, 1, 1
;T_RTCDS3231_1.c,150 :: 		delay_ms(25);
0x0500	0x0EA3      	MOVLW       163
0x0502	0x6E0C      	MOVWF       R12, 0
0x0504	0x0E55      	MOVLW       85
0x0506	0x6E0D      	MOVWF       R13, 0
L_blink33:
0x0508	0x2E0D      	DECFSZ      R13, 1, 0
0x050A	0xD7FE      	BRA         L_blink33
0x050C	0x2E0C      	DECFSZ      R12, 1, 0
0x050E	0xD7FC      	BRA         L_blink33
;T_RTCDS3231_1.c,151 :: 		}
0x0510	0xD7E5      	BRA         L_blink25
L_blink26:
;T_RTCDS3231_1.c,152 :: 		}
L_end_blink:
0x0512	0x0012      	RETURN      0
; end of _blink
_UART1_Write_Text:
;__Lib_UART_c67.c,66 :: 		
;__Lib_UART_c67.c,67 :: 		
0x0514	0x0100      	MOVLB       0
0x0516	0x6BE4      	CLRF        UART1_Write_Text_counter_L0, 1
;__Lib_UART_c67.c,69 :: 		
0x0518	0xFFE9C0E1  	MOVFF       FARG_UART1_Write_Text_uart_text, FSR0L
0x051C	0xFFEAC0E2  	MOVFF       FARG_UART1_Write_Text_uart_text+1, FSR0H
0x0520	0xF0E3CFEE  	MOVFF       POSTINC0, UART1_Write_Text_data__L0
;__Lib_UART_c67.c,70 :: 		
L_UART1_Write_Text5:
0x0524	0x51E3      	MOVF        UART1_Write_Text_data__L0, 0, 1
0x0526	0x0A00      	XORLW       0
0x0528	0xE00E      	BZ          L_UART1_Write_Text6
;__Lib_UART_c67.c,71 :: 		
0x052A	0xF0F3C0E3  	MOVFF       UART1_Write_Text_data__L0, FARG_UART1_Write_data_
0x052E	0xDD83      	RCALL       _UART1_Write
;__Lib_UART_c67.c,72 :: 		
0x0530	0x0100      	MOVLB       0
0x0532	0x2BE4      	INCF        UART1_Write_Text_counter_L0, 1, 1
;__Lib_UART_c67.c,73 :: 		
0x0534	0x51E4      	MOVF        UART1_Write_Text_counter_L0, 0, 1
0x0536	0x25E1      	ADDWF       FARG_UART1_Write_Text_uart_text, 0, 1
0x0538	0x6EE9      	MOVWF       FSR0L 
0x053A	0x0E00      	MOVLW       0
0x053C	0x21E2      	ADDWFC      FARG_UART1_Write_Text_uart_text+1, 0, 1
0x053E	0x6EEA      	MOVWF       FSR0H 
0x0540	0xF0E3CFEE  	MOVFF       POSTINC0, UART1_Write_Text_data__L0
;__Lib_UART_c67.c,74 :: 		
0x0544	0xD7EF      	BRA         L_UART1_Write_Text5
L_UART1_Write_Text6:
;__Lib_UART_c67.c,75 :: 		
L_end_UART1_Write_Text:
0x0546	0x0012      	RETURN      0
; end of _UART1_Write_Text
_Lcd_Chr:
;__Lib_Lcd.c,65 :: 		
;__Lib_Lcd.c,66 :: 		
0x0548	0xD010      	BRA         L_Lcd_Chr4
;__Lib_Lcd.c,67 :: 		
L_Lcd_Chr6:
0x054A	0x0E80      	MOVLW       128
0x054C	0x0100      	MOVLB       0
0x054E	0x6FE1      	MOVWF       FARG_Lcd_Chr_row, 1
0x0550	0xD01A      	BRA         L_Lcd_Chr5
;__Lib_Lcd.c,68 :: 		
L_Lcd_Chr7:
0x0552	0x0EC0      	MOVLW       192
0x0554	0x6FE1      	MOVWF       FARG_Lcd_Chr_row, 1
0x0556	0xD017      	BRA         L_Lcd_Chr5
;__Lib_Lcd.c,69 :: 		
L_Lcd_Chr8:
0x0558	0x0E94      	MOVLW       148
0x055A	0x6FE1      	MOVWF       FARG_Lcd_Chr_row, 1
0x055C	0xD014      	BRA         L_Lcd_Chr5
;__Lib_Lcd.c,70 :: 		
L_Lcd_Chr9:
0x055E	0x0ED4      	MOVLW       212
0x0560	0x6FE1      	MOVWF       FARG_Lcd_Chr_row, 1
0x0562	0xD011      	BRA         L_Lcd_Chr5
;__Lib_Lcd.c,71 :: 		
L_Lcd_Chr10:
0x0564	0x0E80      	MOVLW       128
0x0566	0x6FE1      	MOVWF       FARG_Lcd_Chr_row, 1
;__Lib_Lcd.c,72 :: 		
0x0568	0xD00E      	BRA         L_Lcd_Chr5
L_Lcd_Chr4:
0x056A	0x0100      	MOVLB       0
0x056C	0x51E1      	MOVF        FARG_Lcd_Chr_row, 0, 1
0x056E	0x0A01      	XORLW       1
0x0570	0xE0EC      	BZ          L_Lcd_Chr6
0x0572	0x51E1      	MOVF        FARG_Lcd_Chr_row, 0, 1
0x0574	0x0A02      	XORLW       2
0x0576	0xE0ED      	BZ          L_Lcd_Chr7
0x0578	0x51E1      	MOVF        FARG_Lcd_Chr_row, 0, 1
0x057A	0x0A03      	XORLW       3
0x057C	0xE0ED      	BZ          L_Lcd_Chr8
0x057E	0x51E1      	MOVF        FARG_Lcd_Chr_row, 0, 1
0x0580	0x0A04      	XORLW       4
0x0582	0xE0ED      	BZ          L_Lcd_Chr9
0x0584	0xD7EF      	BRA         L_Lcd_Chr10
L_Lcd_Chr5:
;__Lib_Lcd.c,74 :: 		
0x0586	0x05E2      	DECF        FARG_Lcd_Chr_column, 0, 1
0x0588	0x6E00      	MOVWF       R0 
0x058A	0x51E1      	MOVF        FARG_Lcd_Chr_row, 0, 1
0x058C	0x2600      	ADDWF       R0, 1 
0x058E	0xF0E1C000  	MOVFF       R0, FARG_Lcd_Chr_row
;__Lib_Lcd.c,76 :: 		
0x0592	0x85A1      	BSF         __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0), 1
;__Lib_Lcd.c,77 :: 		
0x0594	0xF0F3C000  	MOVFF       R0, FARG_Lcd_Cmd_out_char
0x0598	0xDD5E      	RCALL       _Lcd_Cmd
;__Lib_Lcd.c,79 :: 		
0x059A	0x95A1      	BCF         __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0), 1
;__Lib_Lcd.c,80 :: 		
0x059C	0xF0F3C0E3  	MOVFF       FARG_Lcd_Chr_out_char, FARG_Lcd_Cmd_out_char
0x05A0	0xDD5A      	RCALL       _Lcd_Cmd
;__Lib_Lcd.c,81 :: 		
0x05A2	0x85A1      	BSF         __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0), 1
;__Lib_Lcd.c,82 :: 		
L_end_Lcd_Chr:
0x05A4	0x0012      	RETURN      0
; end of _Lcd_Chr
_DS3231_read:
;T_RTCDS3231_1.c,28 :: 		void DS3231_read(){                            // Read time & calendar data function
;T_RTCDS3231_1.c,29 :: 		I2C1_Start();                                // Start I2C protocol
0x05A6	0xDE22      	RCALL       _I2C1_Start
;T_RTCDS3231_1.c,30 :: 		I2C1_Wr(0xD0);                               // DS3231 address
0x05A8	0x0ED0      	MOVLW       208
0x05AA	0x0100      	MOVLB       0
0x05AC	0x6FE7      	MOVWF       FARG_I2C1_Wr_data_, 1
0x05AE	0xDED6      	RCALL       _I2C1_Wr
;T_RTCDS3231_1.c,31 :: 		I2C1_Wr(0);                                  // Send register address (seconds register)
0x05B0	0x0100      	MOVLB       0
0x05B2	0x6BE7      	CLRF        FARG_I2C1_Wr_data_, 1
0x05B4	0xDED3      	RCALL       _I2C1_Wr
;T_RTCDS3231_1.c,32 :: 		I2C1_Repeated_Start();                       // Restart I2C
0x05B6	0xDDED      	RCALL       _I2C1_Repeated_Start
;T_RTCDS3231_1.c,33 :: 		I2C1_Wr(0xD1);                               // Initialize data read
0x05B8	0x0ED1      	MOVLW       209
0x05BA	0x0100      	MOVLB       0
0x05BC	0x6FE7      	MOVWF       FARG_I2C1_Wr_data_, 1
0x05BE	0xDECE      	RCALL       _I2C1_Wr
;T_RTCDS3231_1.c,34 :: 		second = I2C1_Rd(1);                         // Read seconds from register 0
0x05C0	0x0E01      	MOVLW       1
0x05C2	0x0100      	MOVLB       0
0x05C4	0x6FE7      	MOVWF       FARG_I2C1_Rd_ack, 1
0x05C6	0xDE69      	RCALL       _I2C1_Rd
0x05C8	0xF0D3C000  	MOVFF       R0, _second
;T_RTCDS3231_1.c,35 :: 		minute = I2C1_Rd(1);                         // Read minutes from register 1
0x05CC	0x0E01      	MOVLW       1
0x05CE	0x0100      	MOVLB       0
0x05D0	0x6FE7      	MOVWF       FARG_I2C1_Rd_ack, 1
0x05D2	0xDE63      	RCALL       _I2C1_Rd
0x05D4	0xF0D4C000  	MOVFF       R0, _minute
;T_RTCDS3231_1.c,36 :: 		hour   = I2C1_Rd(1);                         // Read hour from register 2
0x05D8	0x0E01      	MOVLW       1
0x05DA	0x0100      	MOVLB       0
0x05DC	0x6FE7      	MOVWF       FARG_I2C1_Rd_ack, 1
0x05DE	0xDE5D      	RCALL       _I2C1_Rd
0x05E0	0xF0D2C000  	MOVFF       R0, _hour
;T_RTCDS3231_1.c,37 :: 		day    = I2C1_Rd(1);                         // Read day from register 3
0x05E4	0x0E01      	MOVLW       1
0x05E6	0x0100      	MOVLB       0
0x05E8	0x6FE7      	MOVWF       FARG_I2C1_Rd_ack, 1
0x05EA	0xDE57      	RCALL       _I2C1_Rd
0x05EC	0xF0D0C000  	MOVFF       R0, _day
;T_RTCDS3231_1.c,38 :: 		date   = I2C1_Rd(1);                         // Read date from register 4
0x05F0	0x0E01      	MOVLW       1
0x05F2	0x0100      	MOVLB       0
0x05F4	0x6FE7      	MOVWF       FARG_I2C1_Rd_ack, 1
0x05F6	0xDE51      	RCALL       _I2C1_Rd
0x05F8	0xF0D1C000  	MOVFF       R0, _date
;T_RTCDS3231_1.c,39 :: 		month  = I2C1_Rd(1);                         // Read month from register 5
0x05FC	0x0E01      	MOVLW       1
0x05FE	0x0100      	MOVLB       0
0x0600	0x6FE7      	MOVWF       FARG_I2C1_Rd_ack, 1
0x0602	0xDE4B      	RCALL       _I2C1_Rd
0x0604	0xF0D5C000  	MOVFF       R0, _month
;T_RTCDS3231_1.c,40 :: 		year   = I2C1_Rd(0);                         // Read year from register 6
0x0608	0x0100      	MOVLB       0
0x060A	0x6BE7      	CLRF        FARG_I2C1_Rd_ack, 1
0x060C	0xDE46      	RCALL       _I2C1_Rd
0x060E	0xF0D7C000  	MOVFF       R0, _year
;T_RTCDS3231_1.c,41 :: 		I2C1_Stop();                                 // Stop I2C protocol
0x0612	0xDDEA      	RCALL       _I2C1_Stop
;T_RTCDS3231_1.c,42 :: 		}
L_end_DS3231_read:
0x0614	0x0012      	RETURN      0
; end of _DS3231_read
_abs:
;__Lib_CStdlib.c,37 :: 		
;__Lib_CStdlib.c,38 :: 		
0x0616	0x0E80      	MOVLW       128
0x0618	0x0100      	MOVLB       0
0x061A	0x19E2      	XORWF       FARG_abs_a+1, 0, 1
0x061C	0x6E00      	MOVWF       R0 
0x061E	0x0E80      	MOVLW       128
0x0620	0x5C00      	SUBWF       R0, 0 
0x0622	0xE102      	BNZ         L__abs93
0x0624	0x0E00      	MOVLW       0
0x0626	0x5DE1      	SUBWF       FARG_abs_a, 0, 1
L__abs93:
0x0628	0xE208      	BC          L_abs0
;__Lib_CStdlib.c,39 :: 		
0x062A	0x51E1      	MOVF        FARG_abs_a, 0, 1
0x062C	0x0800      	SUBLW       0
0x062E	0x6E00      	MOVWF       R0 
0x0630	0xF001C0E2  	MOVFF       FARG_abs_a+1, R1
0x0634	0x0E00      	MOVLW       0
0x0636	0x5601      	SUBFWB      R1, 1 
0x0638	0xD004      	BRA         L_end_abs
L_abs0:
;__Lib_CStdlib.c,40 :: 		
0x063A	0xF000C0E1  	MOVFF       FARG_abs_a, R0
0x063E	0xF001C0E2  	MOVFF       FARG_abs_a+1, R1
;__Lib_CStdlib.c,41 :: 		
L_end_abs:
0x0642	0x0012      	RETURN      0
; end of _abs
_Div_8X8_S:
;__Lib_Math.c,326 :: 		
;__Lib_Math.c,335 :: 		
0x0644	0x6A0D      	CLRF        R13, 0
;__Lib_Math.c,336 :: 		
0x0646	0x6A08      	CLRF        R8, 0
;__Lib_Math.c,337 :: 		
0x0648	0x5000      	MOVF        R0, 0, 0
;__Lib_Math.c,338 :: 		
0x064A	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_Math.c,339 :: 		
0x064C	0x0C00      	RETLW       0
;__Lib_Math.c,340 :: 		
0x064E	0x1804      	XORWF       R4, 0, 0
;__Lib_Math.c,341 :: 		
0x0650	0x6E0A      	MOVWF       R10, 0
;__Lib_Math.c,342 :: 		
0x0652	0xBE0A      	BTFSC       R10, 7, 0
;__Lib_Math.c,343 :: 		
0x0654	0x1E0D      	COMF        R13, 1, 0
;__Lib_Math.c,344 :: 		
0x0656	0x6A0B      	CLRF        R11, 0
;__Lib_Math.c,345 :: 		
0x0658	0xAE04      	BTFSS       R4, 7, 0
;__Lib_Math.c,346 :: 		
0x065A	0xD002      	BRA         $+6
;__Lib_Math.c,347 :: 		
0x065C	0x1E04      	COMF        R4, 1, 0
;__Lib_Math.c,348 :: 		
0x065E	0x2A04      	INCF        R4, 1, 0
;__Lib_Math.c,349 :: 		
0x0660	0xAE00      	BTFSS       R0, 7, 0
;__Lib_Math.c,350 :: 		
0x0662	0xD002      	BRA         $+6
;__Lib_Math.c,351 :: 		
0x0664	0x1E00      	COMF        R0, 1, 0
;__Lib_Math.c,352 :: 		
0x0666	0x2A00      	INCF        R0, 1, 0
;__Lib_Math.c,353 :: 		
0x0668	0x5000      	MOVF        R0, 0, 0
;__Lib_Math.c,354 :: 		
0x066A	0x1004      	IORWF       R4, 0, 0
;__Lib_Math.c,355 :: 		
0x066C	0x6E0A      	MOVWF       R10, 0
;__Lib_Math.c,356 :: 		
0x066E	0xBE0A      	BTFSC       R10, 7, 0
;__Lib_Math.c,357 :: 		
0x0670	0xD01F      	BRA         $+64
;__Lib_Math.c,358 :: 		
0x0672	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,359 :: 		
0x0674	0x5E08      	SUBWF       R8, 1, 0
;__Lib_Math.c,360 :: 		
0x0676	0x3600      	RLCF        R0, 1, 0
;__Lib_Math.c,361 :: 		
0x0678	0x3400      	RLCF        R0, 0, 0
;__Lib_Math.c,362 :: 		
0x067A	0x3608      	RLCF        R8, 1, 0
;__Lib_Math.c,363 :: 		
0x067C	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,364 :: 		
0x067E	0x2608      	ADDWF       R8, 1, 0
;__Lib_Math.c,365 :: 		
0x0680	0x3600      	RLCF        R0, 1, 0
;__Lib_Math.c,366 :: 		
0x0682	0x0E06      	MOVLW       6
;__Lib_Math.c,367 :: 		
0x0684	0x6E0C      	MOVWF       R12, 0
;__Lib_Math.c,368 :: 		
0x0686	0x3400      	RLCF        R0, 0, 0
;__Lib_Math.c,369 :: 		
0x0688	0x3608      	RLCF        R8, 1, 0
;__Lib_Math.c,370 :: 		
0x068A	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,371 :: 		
0x068C	0xB000      	BTFSC       R0, 0, 0
;__Lib_Math.c,372 :: 		
0x068E	0x5E08      	SUBWF       R8, 1, 0
;__Lib_Math.c,373 :: 		
0x0690	0xA000      	BTFSS       R0, 0, 0
;__Lib_Math.c,374 :: 		
0x0692	0x2608      	ADDWF       R8, 1, 0
;__Lib_Math.c,375 :: 		
0x0694	0x3600      	RLCF        R0, 1, 0
;__Lib_Math.c,376 :: 		
0x0696	0x2E0C      	DECFSZ      R12, 1, 0
;__Lib_Math.c,377 :: 		
0x0698	0xD7F6      	BRA         $-18
;__Lib_Math.c,378 :: 		
0x069A	0xA000      	BTFSS       R0, 0, 0
;__Lib_Math.c,379 :: 		
0x069C	0x2608      	ADDWF       R8, 1, 0
;__Lib_Math.c,380 :: 		
0x069E	0xB00B      	BTFSC       R11, 0, 0
;__Lib_Math.c,381 :: 		
0x06A0	0xD015      	BRA         $+44
;__Lib_Math.c,382 :: 		
0x06A2	0xAE0D      	BTFSS       R13, 7, 0
;__Lib_Math.c,383 :: 		
0x06A4	0x0C00      	RETLW       0
;__Lib_Math.c,384 :: 		
0x06A6	0x1E00      	COMF        R0, 1, 0
;__Lib_Math.c,385 :: 		
0x06A8	0x2A00      	INCF        R0, 1, 0
;__Lib_Math.c,386 :: 		
0x06AA	0x1E08      	COMF        R8, 1, 0
;__Lib_Math.c,387 :: 		
0x06AC	0x2A08      	INCF        R8, 1, 0
;__Lib_Math.c,388 :: 		
0x06AE	0x0C00      	RETLW       0
;__Lib_Math.c,389 :: 		
0x06B0	0xAE04      	BTFSS       R4, 7, 0
;__Lib_Math.c,390 :: 		
0x06B2	0xD009      	BRA         $+20
;__Lib_Math.c,391 :: 		
0x06B4	0xBE00      	BTFSC       R0, 7, 0
;__Lib_Math.c,392 :: 		
0x06B6	0xD004      	BRA         $+10
;__Lib_Math.c,393 :: 		
0x06B8	0x5000      	MOVF        R0, 0, 0
;__Lib_Math.c,394 :: 		
0x06BA	0x6E08      	MOVWF       R8, 0
;__Lib_Math.c,395 :: 		
0x06BC	0x6A00      	CLRF        R0, 0
;__Lib_Math.c,396 :: 		
0x06BE	0xD7F1      	BRA         $-28
;__Lib_Math.c,397 :: 		
0x06C0	0x6A00      	CLRF        R0, 0
;__Lib_Math.c,398 :: 		
0x06C2	0x2A00      	INCF        R0, 1, 0
;__Lib_Math.c,399 :: 		
0x06C4	0x0C00      	RETLW       0
;__Lib_Math.c,400 :: 		
0x06C6	0x1E00      	COMF        R0, 1, 0
;__Lib_Math.c,401 :: 		
0x06C8	0x2A0B      	INCF        R11, 1, 0
;__Lib_Math.c,402 :: 		
0x06CA	0xD7D3      	BRA         $-88
;__Lib_Math.c,403 :: 		
0x06CC	0x2A08      	INCF        R8, 1, 0
;__Lib_Math.c,404 :: 		
0x06CE	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,405 :: 		
0x06D0	0x5C08      	SUBWF       R8, 0, 0
;__Lib_Math.c,406 :: 		
0x06D2	0xA4D8      	BTFSS       STATUS, 2, 0
;__Lib_Math.c,407 :: 		
0x06D4	0xD7E6      	BRA         $-50
;__Lib_Math.c,408 :: 		
0x06D6	0x6A08      	CLRF        R8, 0
;__Lib_Math.c,409 :: 		
0x06D8	0x2A00      	INCF        R0, 1, 0
;__Lib_Math.c,410 :: 		
0x06DA	0xAE00      	BTFSS       R0, 7, 0
;__Lib_Math.c,411 :: 		
0x06DC	0xD7E2      	BRA         $-58
;__Lib_Math.c,412 :: 		
0x06DE	0x0CFF      	RETLW       255
;__Lib_Math.c,414 :: 		
L_end_Div_8X8_S:
0x06E0	0x0012      	RETURN      0
; end of _Div_8X8_S
_DS3231_display:
;T_RTCDS3231_1.c,121 :: 		void DS3231_display(){
;T_RTCDS3231_1.c,123 :: 		second = (second >> 4) * 10 + (second & 0x0F);
0x06E2	0xF000C0D3  	MOVFF       _second, R0
0x06E6	0x3200      	RRCF        R0, 1 
0x06E8	0x9E00      	BCF         R0, 7 
0x06EA	0x3200      	RRCF        R0, 1 
0x06EC	0x9E00      	BCF         R0, 7 
0x06EE	0x3200      	RRCF        R0, 1 
0x06F0	0x9E00      	BCF         R0, 7 
0x06F2	0x3200      	RRCF        R0, 1 
0x06F4	0x9E00      	BCF         R0, 7 
0x06F6	0x0E0A      	MOVLW       10
0x06F8	0x0200      	MULWF       R0 
0x06FA	0xF001CFF3  	MOVFF       PRODL, R1
0x06FE	0x0E0F      	MOVLW       15
0x0700	0x0100      	MOVLB       0
0x0702	0x15D3      	ANDWF       _second, 0, 1
0x0704	0x6E00      	MOVWF       R0 
0x0706	0x5000      	MOVF        R0, 0 
0x0708	0x2401      	ADDWF       R1, 0 
0x070A	0x6FE6      	MOVWF       FLOC__DS3231_display+5, 1
0x070C	0xF0D3C0E6  	MOVFF       FLOC__DS3231_display+5, _second
;T_RTCDS3231_1.c,124 :: 		minute = (minute >> 4) * 10 + (minute & 0x0F);
0x0710	0xF000C0D4  	MOVFF       _minute, R0
0x0714	0x3200      	RRCF        R0, 1 
0x0716	0x9E00      	BCF         R0, 7 
0x0718	0x3200      	RRCF        R0, 1 
0x071A	0x9E00      	BCF         R0, 7 
0x071C	0x3200      	RRCF        R0, 1 
0x071E	0x9E00      	BCF         R0, 7 
0x0720	0x3200      	RRCF        R0, 1 
0x0722	0x9E00      	BCF         R0, 7 
0x0724	0x0E0A      	MOVLW       10
0x0726	0x0200      	MULWF       R0 
0x0728	0xF001CFF3  	MOVFF       PRODL, R1
0x072C	0x0E0F      	MOVLW       15
0x072E	0x15D4      	ANDWF       _minute, 0, 1
0x0730	0x6E00      	MOVWF       R0 
0x0732	0x5000      	MOVF        R0, 0 
0x0734	0x2401      	ADDWF       R1, 0 
0x0736	0x6FE5      	MOVWF       FLOC__DS3231_display+4, 1
0x0738	0xF0D4C0E5  	MOVFF       FLOC__DS3231_display+4, _minute
;T_RTCDS3231_1.c,125 :: 		hour   = (hour >> 4)   * 10 + (hour & 0x0F);
0x073C	0xF000C0D2  	MOVFF       _hour, R0
0x0740	0x3200      	RRCF        R0, 1 
0x0742	0x9E00      	BCF         R0, 7 
0x0744	0x3200      	RRCF        R0, 1 
0x0746	0x9E00      	BCF         R0, 7 
0x0748	0x3200      	RRCF        R0, 1 
0x074A	0x9E00      	BCF         R0, 7 
0x074C	0x3200      	RRCF        R0, 1 
0x074E	0x9E00      	BCF         R0, 7 
0x0750	0x0E0A      	MOVLW       10
0x0752	0x0200      	MULWF       R0 
0x0754	0xF001CFF3  	MOVFF       PRODL, R1
0x0758	0x0E0F      	MOVLW       15
0x075A	0x15D2      	ANDWF       _hour, 0, 1
0x075C	0x6E00      	MOVWF       R0 
0x075E	0x5000      	MOVF        R0, 0 
0x0760	0x2401      	ADDWF       R1, 0 
0x0762	0x6FE4      	MOVWF       FLOC__DS3231_display+3, 1
0x0764	0xF0D2C0E4  	MOVFF       FLOC__DS3231_display+3, _hour
;T_RTCDS3231_1.c,126 :: 		date   = (date >> 4)   * 10 + (date & 0x0F);
0x0768	0xF000C0D1  	MOVFF       _date, R0
0x076C	0x3200      	RRCF        R0, 1 
0x076E	0x9E00      	BCF         R0, 7 
0x0770	0x3200      	RRCF        R0, 1 
0x0772	0x9E00      	BCF         R0, 7 
0x0774	0x3200      	RRCF        R0, 1 
0x0776	0x9E00      	BCF         R0, 7 
0x0778	0x3200      	RRCF        R0, 1 
0x077A	0x9E00      	BCF         R0, 7 
0x077C	0x0E0A      	MOVLW       10
0x077E	0x0200      	MULWF       R0 
0x0780	0xF001CFF3  	MOVFF       PRODL, R1
0x0784	0x0E0F      	MOVLW       15
0x0786	0x15D1      	ANDWF       _date, 0, 1
0x0788	0x6E00      	MOVWF       R0 
0x078A	0x5000      	MOVF        R0, 0 
0x078C	0x2401      	ADDWF       R1, 0 
0x078E	0x6FE3      	MOVWF       FLOC__DS3231_display+2, 1
0x0790	0xF0D1C0E3  	MOVFF       FLOC__DS3231_display+2, _date
;T_RTCDS3231_1.c,127 :: 		month  = (month >> 4)  * 10 + (month & 0x0F);
0x0794	0xF000C0D5  	MOVFF       _month, R0
0x0798	0x3200      	RRCF        R0, 1 
0x079A	0x9E00      	BCF         R0, 7 
0x079C	0x3200      	RRCF        R0, 1 
0x079E	0x9E00      	BCF         R0, 7 
0x07A0	0x3200      	RRCF        R0, 1 
0x07A2	0x9E00      	BCF         R0, 7 
0x07A4	0x3200      	RRCF        R0, 1 
0x07A6	0x9E00      	BCF         R0, 7 
0x07A8	0x0E0A      	MOVLW       10
0x07AA	0x0200      	MULWF       R0 
0x07AC	0xF001CFF3  	MOVFF       PRODL, R1
0x07B0	0x0E0F      	MOVLW       15
0x07B2	0x15D5      	ANDWF       _month, 0, 1
0x07B4	0x6E00      	MOVWF       R0 
0x07B6	0x5000      	MOVF        R0, 0 
0x07B8	0x2401      	ADDWF       R1, 0 
0x07BA	0x6FE2      	MOVWF       FLOC__DS3231_display+1, 1
0x07BC	0xF0D5C0E2  	MOVFF       FLOC__DS3231_display+1, _month
;T_RTCDS3231_1.c,128 :: 		year   = (year >> 4)   * 10 + (year & 0x0F);
0x07C0	0xF000C0D7  	MOVFF       _year, R0
0x07C4	0x3200      	RRCF        R0, 1 
0x07C6	0x9E00      	BCF         R0, 7 
0x07C8	0x3200      	RRCF        R0, 1 
0x07CA	0x9E00      	BCF         R0, 7 
0x07CC	0x3200      	RRCF        R0, 1 
0x07CE	0x9E00      	BCF         R0, 7 
0x07D0	0x3200      	RRCF        R0, 1 
0x07D2	0x9E00      	BCF         R0, 7 
0x07D4	0x0E0A      	MOVLW       10
0x07D6	0x0200      	MULWF       R0 
0x07D8	0xF001CFF3  	MOVFF       PRODL, R1
0x07DC	0x0E0F      	MOVLW       15
0x07DE	0x15D7      	ANDWF       _year, 0, 1
0x07E0	0x6E00      	MOVWF       R0 
0x07E2	0x5000      	MOVF        R0, 0 
0x07E4	0x2401      	ADDWF       R1, 0 
0x07E6	0x6FE1      	MOVWF       FLOC__DS3231_display, 1
0x07E8	0xF0D7C0E1  	MOVFF       FLOC__DS3231_display, _year
;T_RTCDS3231_1.c,130 :: 		time[7]     = second % 10  + 48;
0x07EC	0x0E0A      	MOVLW       10
0x07EE	0x6E04      	MOVWF       R4 
0x07F0	0xF000C0E6  	MOVFF       FLOC__DS3231_display+5, R0
0x07F4	0xDD43      	RCALL       _Div_8X8_U
0x07F6	0xF000C008  	MOVFF       R8, R0
0x07FA	0x0E30      	MOVLW       48
0x07FC	0x2400      	ADDWF       R0, 0 
0x07FE	0x6F74      	MOVWF       _time+7, 1
;T_RTCDS3231_1.c,131 :: 		time[6]     = second / 10  + 48;
0x0800	0x0E0A      	MOVLW       10
0x0802	0x6E04      	MOVWF       R4 
0x0804	0xF000C0E6  	MOVFF       FLOC__DS3231_display+5, R0
0x0808	0xDD39      	RCALL       _Div_8X8_U
0x080A	0x0E30      	MOVLW       48
0x080C	0x2400      	ADDWF       R0, 0 
0x080E	0x6F73      	MOVWF       _time+6, 1
;T_RTCDS3231_1.c,132 :: 		time[4]     = minute % 10  + 48;
0x0810	0x0E0A      	MOVLW       10
0x0812	0x6E04      	MOVWF       R4 
0x0814	0xF000C0E5  	MOVFF       FLOC__DS3231_display+4, R0
0x0818	0xDD31      	RCALL       _Div_8X8_U
0x081A	0xF000C008  	MOVFF       R8, R0
0x081E	0x0E30      	MOVLW       48
0x0820	0x2400      	ADDWF       R0, 0 
0x0822	0x6F71      	MOVWF       _time+4, 1
;T_RTCDS3231_1.c,133 :: 		time[3]     = minute / 10  + 48;
0x0824	0x0E0A      	MOVLW       10
0x0826	0x6E04      	MOVWF       R4 
0x0828	0xF000C0E5  	MOVFF       FLOC__DS3231_display+4, R0
0x082C	0xDD27      	RCALL       _Div_8X8_U
0x082E	0x0E30      	MOVLW       48
0x0830	0x2400      	ADDWF       R0, 0 
0x0832	0x6F70      	MOVWF       _time+3, 1
;T_RTCDS3231_1.c,134 :: 		time[1]     = hour   % 10  + 48;
0x0834	0x0E0A      	MOVLW       10
0x0836	0x6E04      	MOVWF       R4 
0x0838	0xF000C0E4  	MOVFF       FLOC__DS3231_display+3, R0
0x083C	0xDD1F      	RCALL       _Div_8X8_U
0x083E	0xF000C008  	MOVFF       R8, R0
0x0842	0x0E30      	MOVLW       48
0x0844	0x2400      	ADDWF       R0, 0 
0x0846	0x6F6E      	MOVWF       _time+1, 1
;T_RTCDS3231_1.c,135 :: 		time[0]     = hour   / 10  + 48;
0x0848	0x0E0A      	MOVLW       10
0x084A	0x6E04      	MOVWF       R4 
0x084C	0xF000C0E4  	MOVFF       FLOC__DS3231_display+3, R0
0x0850	0xDD15      	RCALL       _Div_8X8_U
0x0852	0x0E30      	MOVLW       48
0x0854	0x2400      	ADDWF       R0, 0 
0x0856	0x6F6D      	MOVWF       _time, 1
;T_RTCDS3231_1.c,136 :: 		calendar[9] = year  % 10 + 48;
0x0858	0x0E0A      	MOVLW       10
0x085A	0x6E04      	MOVWF       R4 
0x085C	0xF000C0E1  	MOVFF       FLOC__DS3231_display, R0
0x0860	0xDD0D      	RCALL       _Div_8X8_U
0x0862	0xF000C008  	MOVFF       R8, R0
0x0866	0x0E30      	MOVLW       48
0x0868	0x2400      	ADDWF       R0, 0 
0x086A	0x6F67      	MOVWF       _calendar+9, 1
;T_RTCDS3231_1.c,137 :: 		calendar[8] = year  / 10 + 48;
0x086C	0x0E0A      	MOVLW       10
0x086E	0x6E04      	MOVWF       R4 
0x0870	0xF000C0E1  	MOVFF       FLOC__DS3231_display, R0
0x0874	0xDD03      	RCALL       _Div_8X8_U
0x0876	0x0E30      	MOVLW       48
0x0878	0x2400      	ADDWF       R0, 0 
0x087A	0x6F66      	MOVWF       _calendar+8, 1
;T_RTCDS3231_1.c,138 :: 		calendar[4] = month % 10 + 48;
0x087C	0x0E0A      	MOVLW       10
0x087E	0x6E04      	MOVWF       R4 
0x0880	0xF000C0E2  	MOVFF       FLOC__DS3231_display+1, R0
0x0884	0xDCFB      	RCALL       _Div_8X8_U
0x0886	0xF000C008  	MOVFF       R8, R0
0x088A	0x0E30      	MOVLW       48
0x088C	0x2400      	ADDWF       R0, 0 
0x088E	0x6F62      	MOVWF       _calendar+4, 1
;T_RTCDS3231_1.c,139 :: 		calendar[3] = month / 10 + 48;
0x0890	0x0E0A      	MOVLW       10
0x0892	0x6E04      	MOVWF       R4 
0x0894	0xF000C0E2  	MOVFF       FLOC__DS3231_display+1, R0
0x0898	0xDCF1      	RCALL       _Div_8X8_U
0x089A	0x0E30      	MOVLW       48
0x089C	0x2400      	ADDWF       R0, 0 
0x089E	0x6F61      	MOVWF       _calendar+3, 1
;T_RTCDS3231_1.c,140 :: 		calendar[1] = date  % 10 + 48;
0x08A0	0x0E0A      	MOVLW       10
0x08A2	0x6E04      	MOVWF       R4 
0x08A4	0xF000C0E3  	MOVFF       FLOC__DS3231_display+2, R0
0x08A8	0xDCE9      	RCALL       _Div_8X8_U
0x08AA	0xF000C008  	MOVFF       R8, R0
0x08AE	0x0E30      	MOVLW       48
0x08B0	0x2400      	ADDWF       R0, 0 
0x08B2	0x6E5F      	MOVWF       _calendar+1 
;T_RTCDS3231_1.c,141 :: 		calendar[0] = date  / 10 + 48;
0x08B4	0x0E0A      	MOVLW       10
0x08B6	0x6E04      	MOVWF       R4 
0x08B8	0xF000C0E3  	MOVFF       FLOC__DS3231_display+2, R0
0x08BC	0xDCDF      	RCALL       _Div_8X8_U
0x08BE	0x0E30      	MOVLW       48
0x08C0	0x2400      	ADDWF       R0, 0 
0x08C2	0x6E5E      	MOVWF       _calendar 
;T_RTCDS3231_1.c,142 :: 		Lcd_Out(1, 1, time);                           // Display time
0x08C4	0x0E01      	MOVLW       1
0x08C6	0x6FED      	MOVWF       FARG_Lcd_Out_row, 1
0x08C8	0x0E01      	MOVLW       1
0x08CA	0x6FEE      	MOVWF       FARG_Lcd_Out_column, 1
0x08CC	0x0E6D      	MOVLW       _time
0x08CE	0x6FEF      	MOVWF       FARG_Lcd_Out_text, 1
0x08D0	0x0E00      	MOVLW       hi_addr(_time)
0x08D2	0x6FF0      	MOVWF       FARG_Lcd_Out_text+1, 1
0x08D4	0xDC1F      	RCALL       _Lcd_Out
;T_RTCDS3231_1.c,143 :: 		day_display();                                 // Display day
0x08D6	0xDDA3      	RCALL       _day_display
;T_RTCDS3231_1.c,144 :: 		Lcd_Out(2, 5, calendar);                       // Display calendar
0x08D8	0x0E02      	MOVLW       2
0x08DA	0x6FED      	MOVWF       FARG_Lcd_Out_row, 1
0x08DC	0x0E05      	MOVLW       5
0x08DE	0x6FEE      	MOVWF       FARG_Lcd_Out_column, 1
0x08E0	0x0E5E      	MOVLW       _calendar
0x08E2	0x6FEF      	MOVWF       FARG_Lcd_Out_text, 1
0x08E4	0x0E00      	MOVLW       hi_addr(_calendar)
0x08E6	0x6FF0      	MOVWF       FARG_Lcd_Out_text+1, 1
0x08E8	0xDC15      	RCALL       _Lcd_Out
;T_RTCDS3231_1.c,145 :: 		}
L_end_DS3231_display:
0x08EA	0x0012      	RETURN      0
; end of _DS3231_display
_I2C_Restart:
;__Lib_I2C_b10.c,242 :: 		
;__Lib_I2C_b10.c,243 :: 		
0x08EC	0xF000C0AC  	MOVFF       _I2C_Restart_Ptr, R0
0x08F0	0xF001C0AD  	MOVFF       _I2C_Restart_Ptr+1, R1
0x08F4	0xF000EC71  	CALL        _____DoIFC, 0
;__Lib_I2C_b10.c,244 :: 		
L_end_I2C_Restart:
0x08F8	0x0012      	RETURN      0
; end of _I2C_Restart
_Lcd_Init:
;__Lib_Lcd.c,84 :: 		
;__Lib_Lcd.c,86 :: 		
0x08FA	0x9295      	BCF         LCD_EN_Direction, BitPos(LCD_EN_Direction+0) 
;__Lib_Lcd.c,87 :: 		
0x08FC	0x9095      	BCF         LCD_RS_Direction, BitPos(LCD_RS_Direction+0) 
;__Lib_Lcd.c,88 :: 		
0x08FE	0x9895      	BCF         LCD_D4_Direction, BitPos(LCD_D4_Direction+0) 
;__Lib_Lcd.c,89 :: 		
0x0900	0x9A95      	BCF         LCD_D5_Direction, BitPos(LCD_D5_Direction+0) 
;__Lib_Lcd.c,90 :: 		
0x0902	0x9C95      	BCF         LCD_D6_Direction, BitPos(LCD_D6_Direction+0) 
;__Lib_Lcd.c,91 :: 		
0x0904	0x9E95      	BCF         LCD_D7_Direction, BitPos(LCD_D7_Direction+0) 
;__Lib_Lcd.c,93 :: 		
0x0906	0x9283      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,94 :: 		
0x0908	0x9083      	BCF         LCD_RS, BitPos(LCD_RS+0) 
;__Lib_Lcd.c,95 :: 		
0x090A	0x9E83      	BCF         LCD_D7, BitPos(LCD_D7+0) 
;__Lib_Lcd.c,96 :: 		
0x090C	0x9C83      	BCF         LCD_D6, BitPos(LCD_D6+0) 
;__Lib_Lcd.c,97 :: 		
0x090E	0x9A83      	BCF         LCD_D5, BitPos(LCD_D5+0) 
;__Lib_Lcd.c,98 :: 		
0x0910	0x9883      	BCF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,100 :: 		
0x0912	0xF000EC0B  	CALL        _Delay_5500us, 0
;__Lib_Lcd.c,101 :: 		
0x0916	0xF000EC0B  	CALL        _Delay_5500us, 0
;__Lib_Lcd.c,102 :: 		
0x091A	0xF000EC0B  	CALL        _Delay_5500us, 0
;__Lib_Lcd.c,105 :: 		
0x091E	0x8A83      	BSF         LCD_D5, BitPos(LCD_D5+0) 
;__Lib_Lcd.c,106 :: 		
0x0920	0x8883      	BSF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,107 :: 		
0x0922	0x8283      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,108 :: 		
0x0924	0xF000EC05  	CALL        _Delay_1us, 0
;__Lib_Lcd.c,109 :: 		
0x0928	0x9283      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,110 :: 		
0x092A	0xF000EC0B  	CALL        _Delay_5500us, 0
;__Lib_Lcd.c,112 :: 		
0x092E	0x8283      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,113 :: 		
0x0930	0xF000EC05  	CALL        _Delay_1us, 0
;__Lib_Lcd.c,114 :: 		
0x0934	0x9283      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,115 :: 		
0x0936	0xF000EC0B  	CALL        _Delay_5500us, 0
;__Lib_Lcd.c,117 :: 		
0x093A	0x8283      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,118 :: 		
0x093C	0xF000EC05  	CALL        _Delay_1us, 0
;__Lib_Lcd.c,119 :: 		
0x0940	0x9283      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,120 :: 		
0x0942	0xF000EC0B  	CALL        _Delay_5500us, 0
;__Lib_Lcd.c,123 :: 		
0x0946	0x9883      	BCF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,124 :: 		
0x0948	0x8283      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,125 :: 		
0x094A	0xF000EC05  	CALL        _Delay_1us, 0
;__Lib_Lcd.c,126 :: 		
0x094E	0x9283      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,127 :: 		
0x0950	0xF000EC0B  	CALL        _Delay_5500us, 0
;__Lib_Lcd.c,130 :: 		
0x0954	0x8283      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,131 :: 		
0x0956	0xF000EC05  	CALL        _Delay_1us, 0
;__Lib_Lcd.c,132 :: 		
0x095A	0x9283      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,134 :: 		
0x095C	0x9A83      	BCF         LCD_D5, BitPos(LCD_D5+0) 
;__Lib_Lcd.c,135 :: 		
0x095E	0x8E83      	BSF         LCD_D7, BitPos(LCD_D7+0) 
;__Lib_Lcd.c,136 :: 		
0x0960	0x8283      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,137 :: 		
0x0962	0xF000EC05  	CALL        _Delay_1us, 0
;__Lib_Lcd.c,138 :: 		
0x0966	0x9283      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,139 :: 		
0x0968	0xF000EC0B  	CALL        _Delay_5500us, 0
;__Lib_Lcd.c,142 :: 		
0x096C	0x9E83      	BCF         LCD_D7, BitPos(LCD_D7+0) 
;__Lib_Lcd.c,143 :: 		
0x096E	0x8883      	BSF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,144 :: 		
0x0970	0x8283      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,145 :: 		
0x0972	0xF000EC05  	CALL        _Delay_1us, 0
;__Lib_Lcd.c,146 :: 		
0x0976	0x9283      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,148 :: 		
0x0978	0x9883      	BCF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,149 :: 		
0x097A	0x8283      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,150 :: 		
0x097C	0xF000EC05  	CALL        _Delay_1us, 0
;__Lib_Lcd.c,151 :: 		
0x0980	0x9283      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,152 :: 		
0x0982	0xF000EC0B  	CALL        _Delay_5500us, 0
;__Lib_Lcd.c,155 :: 		
0x0986	0x8283      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,156 :: 		
0x0988	0xF000EC05  	CALL        _Delay_1us, 0
;__Lib_Lcd.c,157 :: 		
0x098C	0x9283      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,159 :: 		
0x098E	0x8883      	BSF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,160 :: 		
0x0990	0x8283      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,161 :: 		
0x0992	0xF000EC05  	CALL        _Delay_1us, 0
;__Lib_Lcd.c,162 :: 		
0x0996	0x9283      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,163 :: 		
0x0998	0xF000EC0B  	CALL        _Delay_5500us, 0
;__Lib_Lcd.c,166 :: 		
0x099C	0x9883      	BCF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,167 :: 		
0x099E	0x8283      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,168 :: 		
0x09A0	0xF000EC05  	CALL        _Delay_1us, 0
;__Lib_Lcd.c,169 :: 		
0x09A4	0x9283      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,171 :: 		
0x09A6	0x8E83      	BSF         LCD_D7, BitPos(LCD_D7+0) 
;__Lib_Lcd.c,172 :: 		
0x09A8	0x8C83      	BSF         LCD_D6, BitPos(LCD_D6+0) 
;__Lib_Lcd.c,173 :: 		
0x09AA	0x8A83      	BSF         LCD_D5, BitPos(LCD_D5+0) 
;__Lib_Lcd.c,174 :: 		
0x09AC	0x8883      	BSF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,175 :: 		
0x09AE	0x8283      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,176 :: 		
0x09B0	0xF000EC05  	CALL        _Delay_1us, 0
;__Lib_Lcd.c,177 :: 		
0x09B4	0x9283      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,179 :: 		
0x09B6	0xF000EC0B  	CALL        _Delay_5500us, 0
;__Lib_Lcd.c,181 :: 		
0x09BA	0x0100      	MOVLB       0
0x09BC	0x85A1      	BSF         __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0), 1
;__Lib_Lcd.c,182 :: 		
L_end_Lcd_Init:
0x09BE	0x0012      	RETURN      0
; end of _Lcd_Init
_I2C1_Init:
;__Lib_I2C_b10.c,189 :: 		
;__Lib_I2C_b10.c,191 :: 		
0x09C0	0x0EFA      	MOVLW       _I2C1_Is_Idle
0x09C2	0x0100      	MOVLB       0
0x09C4	0x6FB0      	MOVWF       _I2C_Is_Idle_Ptr, 1
0x09C6	0x0E00      	MOVLW       hi_addr(_I2C1_Is_Idle)
0x09C8	0x6FB1      	MOVWF       _I2C_Is_Idle_Ptr+1, 1
0x09CA	0x0E00      	MOVLW       0
0x09CC	0x6FB2      	MOVWF       _I2C_Is_Idle_Ptr+2, 1
0x09CE	0x0E00      	MOVLW       0
0x09D0	0x6FB3      	MOVWF       _I2C_Is_Idle_Ptr+3, 1
;__Lib_I2C_b10.c,192 :: 		
0x09D2	0x0EEC      	MOVLW       _I2C1_Start
0x09D4	0x6FB4      	MOVWF       _I2C_Start_Ptr, 1
0x09D6	0x0E01      	MOVLW       hi_addr(_I2C1_Start)
0x09D8	0x6FB5      	MOVWF       _I2C_Start_Ptr+1, 1
0x09DA	0x0E00      	MOVLW       0
0x09DC	0x6FB6      	MOVWF       _I2C_Start_Ptr+2, 1
0x09DE	0x0E00      	MOVLW       0
0x09E0	0x6FB7      	MOVWF       _I2C_Start_Ptr+3, 1
;__Lib_I2C_b10.c,193 :: 		
0x09E2	0x0E92      	MOVLW       _I2C1_Repeated_Start
0x09E4	0x6FAC      	MOVWF       _I2C_Restart_Ptr, 1
0x09E6	0x0E01      	MOVLW       hi_addr(_I2C1_Repeated_Start)
0x09E8	0x6FAD      	MOVWF       _I2C_Restart_Ptr+1, 1
0x09EA	0x0E00      	MOVLW       0
0x09EC	0x6FAE      	MOVWF       _I2C_Restart_Ptr+2, 1
0x09EE	0x0E00      	MOVLW       0
0x09F0	0x6FAF      	MOVWF       _I2C_Restart_Ptr+3, 1
;__Lib_I2C_b10.c,194 :: 		
0x09F2	0x0E9A      	MOVLW       _I2C1_Rd
0x09F4	0x6FA4      	MOVWF       _I2C_Read_Ptr, 1
0x09F6	0x0E02      	MOVLW       hi_addr(_I2C1_Rd)
0x09F8	0x6FA5      	MOVWF       _I2C_Read_Ptr+1, 1
0x09FA	0x0EE7      	MOVLW       FARG_I2C1_Rd_ack
0x09FC	0x6FA6      	MOVWF       _I2C_Read_Ptr+2, 1
0x09FE	0x0E00      	MOVLW       hi_addr(FARG_I2C1_Rd_ack)
0x0A00	0x6FA7      	MOVWF       _I2C_Read_Ptr+3, 1
;__Lib_I2C_b10.c,195 :: 		
0x0A02	0x0E5C      	MOVLW       _I2C1_Wr
0x0A04	0x6FA8      	MOVWF       _I2C_Write_Ptr, 1
0x0A06	0x0E03      	MOVLW       hi_addr(_I2C1_Wr)
0x0A08	0x6FA9      	MOVWF       _I2C_Write_Ptr+1, 1
0x0A0A	0x0EE7      	MOVLW       FARG_I2C1_Wr_data_
0x0A0C	0x6FAA      	MOVWF       _I2C_Write_Ptr+2, 1
0x0A0E	0x0E00      	MOVLW       hi_addr(FARG_I2C1_Wr_data_)
0x0A10	0x6FAB      	MOVWF       _I2C_Write_Ptr+3, 1
;__Lib_I2C_b10.c,196 :: 		
0x0A12	0x0EE8      	MOVLW       _I2C1_Stop
0x0A14	0x6FB8      	MOVWF       _I2C_Stop_Ptr, 1
0x0A16	0x0E01      	MOVLW       hi_addr(_I2C1_Stop)
0x0A18	0x6FB9      	MOVWF       _I2C_Stop_Ptr+1, 1
0x0A1A	0x0E00      	MOVLW       0
0x0A1C	0x6FBA      	MOVWF       _I2C_Stop_Ptr+2, 1
0x0A1E	0x0E00      	MOVLW       0
0x0A20	0x6FBB      	MOVWF       _I2C_Stop_Ptr+3, 1
;__Lib_I2C_b10.c,203 :: 		
0x0A22	0x9093      	BCF         TRISB0_bit, BitPos(TRISB0_bit+0) 
;__Lib_I2C_b10.c,204 :: 		
0x0A24	0x9293      	BCF         TRISB1_bit, BitPos(TRISB1_bit+0) 
;__Lib_I2C_b10.c,207 :: 		
0x0A26	0x908A      	BCF         LATB0_bit, BitPos(LATB0_bit+0) 
;__Lib_I2C_b10.c,208 :: 		
0x0A28	0x928A      	BCF         LATB1_bit, BitPos(LATB1_bit+0) 
;__Lib_I2C_b10.c,211 :: 		
0x0A2A	0x8093      	BSF         TRISB0_bit, BitPos(TRISB0_bit+0) 
;__Lib_I2C_b10.c,212 :: 		
0x0A2C	0x8293      	BSF         TRISB1_bit, BitPos(TRISB1_bit+0) 
;__Lib_I2C_b10.c,214 :: 		
0x0A2E	0x9EC7      	BCF         SSPSTAT, 7 
;__Lib_I2C_b10.c,215 :: 		
0x0A30	0x9CC7      	BCF         SSPSTAT, 6 
;__Lib_I2C_b10.c,216 :: 		
0x0A32	0x0E38      	MOVLW       56
0x0A34	0x6EC6      	MOVWF       SSPCON1 
;__Lib_I2C_b10.c,219 :: 		
L_end_I2C1_Init:
0x0A36	0x0012      	RETURN      0
; end of _I2C1_Init
___CC2DW:
;__Lib_System.c,21 :: 		
;__Lib_System.c,23 :: 		
_CC2DL_Loop1:
;__Lib_System.c,24 :: 		
0x0A38	0x0009      	TBLRD*+
;__Lib_System.c,25 :: 		
0x0A3A	0xFFE6CFF5  	MOVFF       TABLAT, POSTINC1
;__Lib_System.c,26 :: 		
0x0A3E	0x0600      	DECF        R0, 1, 0
;__Lib_System.c,27 :: 		
0x0A40	0xE1FB      	BNZ         _CC2DL_Loop1
;__Lib_System.c,28 :: 		
0x0A42	0x0601      	DECF        R1, 1, 0
;__Lib_System.c,29 :: 		
0x0A44	0xE1F9      	BNZ         _CC2DL_Loop1
;__Lib_System.c,31 :: 		
L_end___CC2DW:
0x0A46	0x0012      	RETURN      0
; end of ___CC2DW
_alarms_read_display:
;T_RTCDS3231_1.c,43 :: 		void alarms_read_display(){                    // Read and display alarm1 and alarm2 data function
;T_RTCDS3231_1.c,46 :: 		I2C1_Start();                                 // Start I2C protocol
0x0A48	0xF000ECF6  	CALL        _I2C1_Start, 0
;T_RTCDS3231_1.c,47 :: 		I2C1_Wr(0xD0);                                // DS3231 address
0x0A4C	0x0ED0      	MOVLW       208
0x0A4E	0x0100      	MOVLB       0
0x0A50	0x6FE7      	MOVWF       FARG_I2C1_Wr_data_, 1
0x0A52	0xDC84      	RCALL       _I2C1_Wr
;T_RTCDS3231_1.c,48 :: 		I2C1_Wr(0x08);                                // Send register address (alarm1 minutes register)
0x0A54	0x0E08      	MOVLW       8
0x0A56	0x0100      	MOVLB       0
0x0A58	0x6FE7      	MOVWF       FARG_I2C1_Wr_data_, 1
0x0A5A	0xDC80      	RCALL       _I2C1_Wr
;T_RTCDS3231_1.c,49 :: 		i2c_restart();                                // Restart I2C
0x0A5C	0xDF47      	RCALL       _I2C_Restart
;T_RTCDS3231_1.c,50 :: 		I2C1_Wr(0xD1);                                // Initialize data read
0x0A5E	0x0ED1      	MOVLW       209
0x0A60	0x0100      	MOVLB       0
0x0A62	0x6FE7      	MOVWF       FARG_I2C1_Wr_data_, 1
0x0A64	0xDC7B      	RCALL       _I2C1_Wr
;T_RTCDS3231_1.c,51 :: 		alarm1_minute = I2C1_Rd(1);                   // Read alarm1 minutes
0x0A66	0x0E01      	MOVLW       1
0x0A68	0x0100      	MOVLB       0
0x0A6A	0x6FE7      	MOVWF       FARG_I2C1_Rd_ack, 1
0x0A6C	0xDC16      	RCALL       _I2C1_Rd
0x0A6E	0xF0A2C000  	MOVFF       R0, _alarm1_minute
;T_RTCDS3231_1.c,52 :: 		alarm1_hour   = I2C1_Rd(1);                   // Read alarm1 hours
0x0A72	0x0E01      	MOVLW       1
0x0A74	0x0100      	MOVLB       0
0x0A76	0x6FE7      	MOVWF       FARG_I2C1_Rd_ack, 1
0x0A78	0xDC10      	RCALL       _I2C1_Rd
0x0A7A	0xF0A3C000  	MOVFF       R0, _alarm1_hour
;T_RTCDS3231_1.c,53 :: 		I2C1_Rd(1);                                   // Skip alarm1 day/date register
0x0A7E	0x0E01      	MOVLW       1
0x0A80	0x0100      	MOVLB       0
0x0A82	0x6FE7      	MOVWF       FARG_I2C1_Rd_ack, 1
0x0A84	0xDC0A      	RCALL       _I2C1_Rd
;T_RTCDS3231_1.c,54 :: 		alarm2_minute = I2C1_Rd(1);                   // Read alarm2 minutes
0x0A86	0x0E01      	MOVLW       1
0x0A88	0x0100      	MOVLB       0
0x0A8A	0x6FE7      	MOVWF       FARG_I2C1_Rd_ack, 1
0x0A8C	0xDC06      	RCALL       _I2C1_Rd
0x0A8E	0xF09FC000  	MOVFF       R0, _alarm2_minute
;T_RTCDS3231_1.c,55 :: 		alarm2_hour   = I2C1_Rd(1);                   // Read alarm2 hours
0x0A92	0x0E01      	MOVLW       1
0x0A94	0x0100      	MOVLB       0
0x0A96	0x6FE7      	MOVWF       FARG_I2C1_Rd_ack, 1
0x0A98	0xDC00      	RCALL       _I2C1_Rd
0x0A9A	0xF0A0C000  	MOVFF       R0, _alarm2_hour
;T_RTCDS3231_1.c,56 :: 		I2C1_Rd(1);                                   // Skip alarm2 day/date register
0x0A9E	0x0E01      	MOVLW       1
0x0AA0	0x0100      	MOVLB       0
0x0AA2	0x6FE7      	MOVWF       FARG_I2C1_Rd_ack, 1
0x0AA4	0xF001EC4D  	CALL        _I2C1_Rd, 0
;T_RTCDS3231_1.c,57 :: 		control_reg = I2C1_Rd(1);                     // Read the DS3231 control register
0x0AA8	0x0E01      	MOVLW       1
0x0AAA	0x0100      	MOVLB       0
0x0AAC	0x6FE7      	MOVWF       FARG_I2C1_Rd_ack, 1
0x0AAE	0xF001EC4D  	CALL        _I2C1_Rd, 0
0x0AB2	0xF0DAC000  	MOVFF       R0, alarms_read_display_control_reg_L0
;T_RTCDS3231_1.c,58 :: 		status_reg  = I2C1_Rd(1);                     // Read the DS3231 status register
0x0AB6	0x0E01      	MOVLW       1
0x0AB8	0x0100      	MOVLB       0
0x0ABA	0x6FE7      	MOVWF       FARG_I2C1_Rd_ack, 1
0x0ABC	0xF001EC4D  	CALL        _I2C1_Rd, 0
0x0AC0	0xF09EC000  	MOVFF       R0, _status_reg
;T_RTCDS3231_1.c,59 :: 		I2C1_Rd(1);                                   // Skip aging offset register
0x0AC4	0x0E01      	MOVLW       1
0x0AC6	0x0100      	MOVLB       0
0x0AC8	0x6FE7      	MOVWF       FARG_I2C1_Rd_ack, 1
0x0ACA	0xF001EC4D  	CALL        _I2C1_Rd, 0
;T_RTCDS3231_1.c,60 :: 		temperature_msb = I2C1_Rd(1);                 // Read temperature MSB
0x0ACE	0x0E01      	MOVLW       1
0x0AD0	0x0100      	MOVLB       0
0x0AD2	0x6FE7      	MOVWF       FARG_I2C1_Rd_ack, 1
0x0AD4	0xF001EC4D  	CALL        _I2C1_Rd, 0
0x0AD8	0xF0DCC000  	MOVFF       R0, alarms_read_display_temperature_msb_L0
;T_RTCDS3231_1.c,61 :: 		temperature_lsb = I2C1_Rd(0);                 // Read temperature LSB
0x0ADC	0x0100      	MOVLB       0
0x0ADE	0x6BE7      	CLRF        FARG_I2C1_Rd_ack, 1
0x0AE0	0xF001EC4D  	CALL        _I2C1_Rd, 0
0x0AE4	0xF0DBC000  	MOVFF       R0, alarms_read_display_temperature_lsb_L0
;T_RTCDS3231_1.c,62 :: 		I2C1_Stop();                                  // Stop I2C protocol
0x0AE8	0xF000ECF4  	CALL        _I2C1_Stop, 0
;T_RTCDS3231_1.c,64 :: 		alarm1_minute = (alarm1_minute >> 4) * 10 + (alarm1_minute & 0x0F);
0x0AEC	0xF000C0A2  	MOVFF       _alarm1_minute, R0
0x0AF0	0x3200      	RRCF        R0, 1 
0x0AF2	0x9E00      	BCF         R0, 7 
0x0AF4	0x3200      	RRCF        R0, 1 
0x0AF6	0x9E00      	BCF         R0, 7 
0x0AF8	0x3200      	RRCF        R0, 1 
0x0AFA	0x9E00      	BCF         R0, 7 
0x0AFC	0x3200      	RRCF        R0, 1 
0x0AFE	0x9E00      	BCF         R0, 7 
0x0B00	0x0E0A      	MOVLW       10
0x0B02	0x0200      	MULWF       R0 
0x0B04	0xF001CFF3  	MOVFF       PRODL, R1
0x0B08	0x0E0F      	MOVLW       15
0x0B0A	0x0100      	MOVLB       0
0x0B0C	0x15A2      	ANDWF       _alarm1_minute, 0, 1
0x0B0E	0x6E00      	MOVWF       R0 
0x0B10	0x5000      	MOVF        R0, 0 
0x0B12	0x2401      	ADDWF       R1, 0 
0x0B14	0x6FE0      	MOVWF       FLOC__alarms_read_display+3, 1
0x0B16	0xF0A2C0E0  	MOVFF       FLOC__alarms_read_display+3, _alarm1_minute
;T_RTCDS3231_1.c,65 :: 		alarm1_hour   = (alarm1_hour   >> 4) * 10 + (alarm1_hour & 0x0F);
0x0B1A	0xF000C0A3  	MOVFF       _alarm1_hour, R0
0x0B1E	0x3200      	RRCF        R0, 1 
0x0B20	0x9E00      	BCF         R0, 7 
0x0B22	0x3200      	RRCF        R0, 1 
0x0B24	0x9E00      	BCF         R0, 7 
0x0B26	0x3200      	RRCF        R0, 1 
0x0B28	0x9E00      	BCF         R0, 7 
0x0B2A	0x3200      	RRCF        R0, 1 
0x0B2C	0x9E00      	BCF         R0, 7 
0x0B2E	0x0E0A      	MOVLW       10
0x0B30	0x0200      	MULWF       R0 
0x0B32	0xF001CFF3  	MOVFF       PRODL, R1
0x0B36	0x0E0F      	MOVLW       15
0x0B38	0x15A3      	ANDWF       _alarm1_hour, 0, 1
0x0B3A	0x6E00      	MOVWF       R0 
0x0B3C	0x5000      	MOVF        R0, 0 
0x0B3E	0x2401      	ADDWF       R1, 0 
0x0B40	0x6FDF      	MOVWF       FLOC__alarms_read_display+2, 1
0x0B42	0xF0A3C0DF  	MOVFF       FLOC__alarms_read_display+2, _alarm1_hour
;T_RTCDS3231_1.c,66 :: 		alarm2_minute = (alarm2_minute >> 4) * 10 + (alarm2_minute & 0x0F);
0x0B46	0xF000C09F  	MOVFF       _alarm2_minute, R0
0x0B4A	0x3200      	RRCF        R0, 1 
0x0B4C	0x9E00      	BCF         R0, 7 
0x0B4E	0x3200      	RRCF        R0, 1 
0x0B50	0x9E00      	BCF         R0, 7 
0x0B52	0x3200      	RRCF        R0, 1 
0x0B54	0x9E00      	BCF         R0, 7 
0x0B56	0x3200      	RRCF        R0, 1 
0x0B58	0x9E00      	BCF         R0, 7 
0x0B5A	0x0E0A      	MOVLW       10
0x0B5C	0x0200      	MULWF       R0 
0x0B5E	0xF001CFF3  	MOVFF       PRODL, R1
0x0B62	0x0E0F      	MOVLW       15
0x0B64	0x159F      	ANDWF       _alarm2_minute, 0, 1
0x0B66	0x6E00      	MOVWF       R0 
0x0B68	0x5000      	MOVF        R0, 0 
0x0B6A	0x2401      	ADDWF       R1, 0 
0x0B6C	0x6FDE      	MOVWF       FLOC__alarms_read_display+1, 1
0x0B6E	0xF09FC0DE  	MOVFF       FLOC__alarms_read_display+1, _alarm2_minute
;T_RTCDS3231_1.c,67 :: 		alarm2_hour   = (alarm2_hour   >> 4) * 10 + (alarm2_hour & 0x0F);
0x0B72	0xF000C0A0  	MOVFF       _alarm2_hour, R0
0x0B76	0x3200      	RRCF        R0, 1 
0x0B78	0x9E00      	BCF         R0, 7 
0x0B7A	0x3200      	RRCF        R0, 1 
0x0B7C	0x9E00      	BCF         R0, 7 
0x0B7E	0x3200      	RRCF        R0, 1 
0x0B80	0x9E00      	BCF         R0, 7 
0x0B82	0x3200      	RRCF        R0, 1 
0x0B84	0x9E00      	BCF         R0, 7 
0x0B86	0x0E0A      	MOVLW       10
0x0B88	0x0200      	MULWF       R0 
0x0B8A	0xF001CFF3  	MOVFF       PRODL, R1
0x0B8E	0x0E0F      	MOVLW       15
0x0B90	0x15A0      	ANDWF       _alarm2_hour, 0, 1
0x0B92	0x6E00      	MOVWF       R0 
0x0B94	0x5000      	MOVF        R0, 0 
0x0B96	0x2401      	ADDWF       R1, 0 
0x0B98	0x6FDD      	MOVWF       FLOC__alarms_read_display, 1
0x0B9A	0xF0A0C0DD  	MOVFF       FLOC__alarms_read_display, _alarm2_hour
;T_RTCDS3231_1.c,69 :: 		alarm1[8]     = alarm1_minute % 10  + 48;
0x0B9E	0x0E0A      	MOVLW       10
0x0BA0	0x6E04      	MOVWF       R4 
0x0BA2	0xF000C0E0  	MOVFF       FLOC__alarms_read_display+3, R0
0x0BA6	0xF001EC3E  	CALL        _Div_8X8_U, 0
0x0BAA	0xF000C008  	MOVFF       R8, R0
0x0BAE	0x0E30      	MOVLW       48
0x0BB0	0x2400      	ADDWF       R0, 0 
0x0BB2	0x6E1D      	MOVWF       _alarm1+8 
;T_RTCDS3231_1.c,70 :: 		alarm1[7]     = alarm1_minute / 10  + 48;
0x0BB4	0x0E0A      	MOVLW       10
0x0BB6	0x6E04      	MOVWF       R4 
0x0BB8	0xF000C0E0  	MOVFF       FLOC__alarms_read_display+3, R0
0x0BBC	0xF001EC3E  	CALL        _Div_8X8_U, 0
0x0BC0	0x0E30      	MOVLW       48
0x0BC2	0x2400      	ADDWF       R0, 0 
0x0BC4	0x6E1C      	MOVWF       _alarm1+7 
;T_RTCDS3231_1.c,71 :: 		alarm1[5]     = alarm1_hour   % 10  + 48;
0x0BC6	0x0E0A      	MOVLW       10
0x0BC8	0x6E04      	MOVWF       R4 
0x0BCA	0xF000C0DF  	MOVFF       FLOC__alarms_read_display+2, R0
0x0BCE	0xF001EC3E  	CALL        _Div_8X8_U, 0
0x0BD2	0xF000C008  	MOVFF       R8, R0
0x0BD6	0x0E30      	MOVLW       48
0x0BD8	0x2400      	ADDWF       R0, 0 
0x0BDA	0x6E1A      	MOVWF       _alarm1+5 
;T_RTCDS3231_1.c,72 :: 		alarm1[4]     = alarm1_hour   / 10  + 48;
0x0BDC	0x0E0A      	MOVLW       10
0x0BDE	0x6E04      	MOVWF       R4 
0x0BE0	0xF000C0DF  	MOVFF       FLOC__alarms_read_display+2, R0
0x0BE4	0xF001EC3E  	CALL        _Div_8X8_U, 0
0x0BE8	0x0E30      	MOVLW       48
0x0BEA	0x2400      	ADDWF       R0, 0 
0x0BEC	0x6E19      	MOVWF       _alarm1+4 
;T_RTCDS3231_1.c,73 :: 		alarm2[8]     = alarm2_minute % 10  + 48;
0x0BEE	0x0E0A      	MOVLW       10
0x0BF0	0x6E04      	MOVWF       R4 
0x0BF2	0xF000C0DE  	MOVFF       FLOC__alarms_read_display+1, R0
0x0BF6	0xF001EC3E  	CALL        _Div_8X8_U, 0
0x0BFA	0xF000C008  	MOVFF       R8, R0
0x0BFE	0x0E30      	MOVLW       48
0x0C00	0x2400      	ADDWF       R0, 0 
0x0C02	0x6E2A      	MOVWF       _alarm2+8 
;T_RTCDS3231_1.c,74 :: 		alarm2[7]     = alarm2_minute / 10  + 48;
0x0C04	0x0E0A      	MOVLW       10
0x0C06	0x6E04      	MOVWF       R4 
0x0C08	0xF000C0DE  	MOVFF       FLOC__alarms_read_display+1, R0
0x0C0C	0xF001EC3E  	CALL        _Div_8X8_U, 0
0x0C10	0x0E30      	MOVLW       48
0x0C12	0x2400      	ADDWF       R0, 0 
0x0C14	0x6E29      	MOVWF       _alarm2+7 
;T_RTCDS3231_1.c,75 :: 		alarm2[5]     = alarm2_hour   % 10  + 48;
0x0C16	0x0E0A      	MOVLW       10
0x0C18	0x6E04      	MOVWF       R4 
0x0C1A	0xF000C0DD  	MOVFF       FLOC__alarms_read_display, R0
0x0C1E	0xF001EC3E  	CALL        _Div_8X8_U, 0
0x0C22	0xF000C008  	MOVFF       R8, R0
0x0C26	0x0E30      	MOVLW       48
0x0C28	0x2400      	ADDWF       R0, 0 
0x0C2A	0x6E27      	MOVWF       _alarm2+5 
;T_RTCDS3231_1.c,76 :: 		alarm2[4]     = alarm2_hour   / 10  + 48;
0x0C2C	0x0E0A      	MOVLW       10
0x0C2E	0x6E04      	MOVWF       R4 
0x0C30	0xF000C0DD  	MOVFF       FLOC__alarms_read_display, R0
0x0C34	0xF001EC3E  	CALL        _Div_8X8_U, 0
0x0C38	0x0E30      	MOVLW       48
0x0C3A	0x2400      	ADDWF       R0, 0 
0x0C3C	0x6E26      	MOVWF       _alarm2+4 
;T_RTCDS3231_1.c,77 :: 		alarm1_status = control_reg;              // Read alarm1 interrupt enable bit (A1IE) from DS3231 control register
0x0C3E	0xB1DA      	BTFSC       alarms_read_display_control_reg_L0, 0, 1
0x0C40	0xD002      	BRA         L__alarms_read_display127
0x0C42	0x91A1      	BCF         _alarm1_status, BitPos(_alarm1_status+0), 1
0x0C44	0xD001      	BRA         L__alarms_read_display128
L__alarms_read_display127:
0x0C46	0x81A1      	BSF         _alarm1_status, BitPos(_alarm1_status+0), 1
L__alarms_read_display128:
;T_RTCDS3231_1.c,78 :: 		alarm2_status = control_reg >> 1;         // Read alarm2 interrupt enable bit (A2IE) from DS3231 control register
0x0C48	0xF000C0DA  	MOVFF       alarms_read_display_control_reg_L0, R0
0x0C4C	0x3200      	RRCF        R0, 1 
0x0C4E	0x9E00      	BCF         R0, 7 
0x0C50	0xB000      	BTFSC       R0, 0 
0x0C52	0xD002      	BRA         L__alarms_read_display129
0x0C54	0x93A1      	BCF         _alarm2_status, BitPos(_alarm2_status+0), 1
0x0C56	0xD001      	BRA         L__alarms_read_display130
L__alarms_read_display129:
0x0C58	0x83A1      	BSF         _alarm2_status, BitPos(_alarm2_status+0), 1
L__alarms_read_display130:
;T_RTCDS3231_1.c,79 :: 		if(temperature_msb < 0){
0x0C5A	0x0E80      	MOVLW       128
0x0C5C	0x19DC      	XORWF       alarms_read_display_temperature_msb_L0, 0, 1
0x0C5E	0x6E00      	MOVWF       R0 
0x0C60	0x0E80      	MOVLW       128
0x0C62	0x0A00      	XORLW       0
0x0C64	0x5C00      	SUBWF       R0, 0 
0x0C66	0xE20C      	BC          L_alarms_read_display0
;T_RTCDS3231_1.c,80 :: 		temperature_msb = abs(temperature_msb);
0x0C68	0xF0E1C0DC  	MOVFF       alarms_read_display_temperature_msb_L0, FARG_abs_a
0x0C6C	0x0E00      	MOVLW       0
0x0C6E	0xBFDC      	BTFSC       alarms_read_display_temperature_msb_L0, 7, 1
0x0C70	0x0EFF      	MOVLW       255
0x0C72	0x6FE2      	MOVWF       FARG_abs_a+1, 1
0x0C74	0xDCD0      	RCALL       _abs
0x0C76	0xF0DCC000  	MOVFF       R0, alarms_read_display_temperature_msb_L0
;T_RTCDS3231_1.c,81 :: 		temperature[2] = '-';
0x0C7A	0x0E2D      	MOVLW       45
0x0C7C	0x6E3D      	MOVWF       _temperature+2 
;T_RTCDS3231_1.c,82 :: 		}
0x0C7E	0xD002      	BRA         L_alarms_read_display1
L_alarms_read_display0:
;T_RTCDS3231_1.c,84 :: 		temperature[2] = ' ';
0x0C80	0x0E20      	MOVLW       32
0x0C82	0x6E3D      	MOVWF       _temperature+2 
L_alarms_read_display1:
;T_RTCDS3231_1.c,85 :: 		temperature_lsb >>= 6;
0x0C84	0x0E06      	MOVLW       6
0x0C86	0x6E00      	MOVWF       R0 
0x0C88	0xF0DDC0DB  	MOVFF       alarms_read_display_temperature_lsb_L0, FLOC__alarms_read_display
0x0C8C	0x5000      	MOVF        R0, 0 
L__alarms_read_display131:
0x0C8E	0xE004      	BZ          L__alarms_read_display132
0x0C90	0x33DD      	RRCF        FLOC__alarms_read_display, 1, 1
0x0C92	0x9FDD      	BCF         FLOC__alarms_read_display, 7, 1
0x0C94	0x0FFF      	ADDLW       255
0x0C96	0xD7FB      	BRA         L__alarms_read_display131
L__alarms_read_display132:
0x0C98	0xF0DBC0DD  	MOVFF       FLOC__alarms_read_display, alarms_read_display_temperature_lsb_L0
;T_RTCDS3231_1.c,86 :: 		temperature[4] = temperature_msb % 10  + 48;
0x0C9C	0x0E0A      	MOVLW       10
0x0C9E	0x6E04      	MOVWF       R4 
0x0CA0	0xF000C0DC  	MOVFF       alarms_read_display_temperature_msb_L0, R0
0x0CA4	0xDCCF      	RCALL       _Div_8X8_S
0x0CA6	0xF000C008  	MOVFF       R8, R0
0x0CAA	0x0E30      	MOVLW       48
0x0CAC	0x2400      	ADDWF       R0, 0 
0x0CAE	0x6E3F      	MOVWF       _temperature+4 
;T_RTCDS3231_1.c,87 :: 		temperature[3] = temperature_msb / 10  + 48;
0x0CB0	0x0E0A      	MOVLW       10
0x0CB2	0x6E04      	MOVWF       R4 
0x0CB4	0xF000C0DC  	MOVFF       alarms_read_display_temperature_msb_L0, R0
0x0CB8	0xDCC5      	RCALL       _Div_8X8_S
0x0CBA	0x0E30      	MOVLW       48
0x0CBC	0x2400      	ADDWF       R0, 0 
0x0CBE	0x6E3E      	MOVWF       _temperature+3 
;T_RTCDS3231_1.c,88 :: 		if(temperature_lsb == 0 || temperature_lsb == 2){
0x0CC0	0x51DD      	MOVF        FLOC__alarms_read_display, 0, 1
0x0CC2	0x0A00      	XORLW       0
0x0CC4	0xE004      	BZ          L__alarms_read_display106
0x0CC6	0x51DB      	MOVF        alarms_read_display_temperature_lsb_L0, 0, 1
0x0CC8	0x0A02      	XORLW       2
0x0CCA	0xE001      	BZ          L__alarms_read_display106
0x0CCC	0xD00A      	BRA         L_alarms_read_display4
L__alarms_read_display106:
;T_RTCDS3231_1.c,89 :: 		temperature[7] = '0';
0x0CCE	0x0E30      	MOVLW       48
0x0CD0	0x6E42      	MOVWF       _temperature+7 
;T_RTCDS3231_1.c,90 :: 		if(temperature_lsb == 0) temperature[6] = '0';
0x0CD2	0x51DB      	MOVF        alarms_read_display_temperature_lsb_L0, 0, 1
0x0CD4	0x0A00      	XORLW       0
0x0CD6	0xE103      	BNZ         L_alarms_read_display5
0x0CD8	0x0E30      	MOVLW       48
0x0CDA	0x6E41      	MOVWF       _temperature+6 
0x0CDC	0xD002      	BRA         L_alarms_read_display6
L_alarms_read_display5:
;T_RTCDS3231_1.c,91 :: 		else                     temperature[6] = '5';
0x0CDE	0x0E35      	MOVLW       53
0x0CE0	0x6E41      	MOVWF       _temperature+6 
L_alarms_read_display6:
;T_RTCDS3231_1.c,92 :: 		}
L_alarms_read_display4:
;T_RTCDS3231_1.c,93 :: 		if(temperature_lsb == 1 || temperature_lsb == 3){
0x0CE2	0x51DB      	MOVF        alarms_read_display_temperature_lsb_L0, 0, 1
0x0CE4	0x0A01      	XORLW       1
0x0CE6	0xE004      	BZ          L__alarms_read_display105
0x0CE8	0x51DB      	MOVF        alarms_read_display_temperature_lsb_L0, 0, 1
0x0CEA	0x0A03      	XORLW       3
0x0CEC	0xE001      	BZ          L__alarms_read_display105
0x0CEE	0xD00A      	BRA         L_alarms_read_display9
L__alarms_read_display105:
;T_RTCDS3231_1.c,94 :: 		temperature[7] = '5';
0x0CF0	0x0E35      	MOVLW       53
0x0CF2	0x6E42      	MOVWF       _temperature+7 
;T_RTCDS3231_1.c,95 :: 		if(temperature_lsb == 1) temperature[6] = '2';
0x0CF4	0x51DB      	MOVF        alarms_read_display_temperature_lsb_L0, 0, 1
0x0CF6	0x0A01      	XORLW       1
0x0CF8	0xE103      	BNZ         L_alarms_read_display10
0x0CFA	0x0E32      	MOVLW       50
0x0CFC	0x6E41      	MOVWF       _temperature+6 
0x0CFE	0xD002      	BRA         L_alarms_read_display11
L_alarms_read_display10:
;T_RTCDS3231_1.c,96 :: 		else                     temperature[6] = '7';
0x0D00	0x0E37      	MOVLW       55
0x0D02	0x6E41      	MOVWF       _temperature+6 
L_alarms_read_display11:
;T_RTCDS3231_1.c,97 :: 		}
L_alarms_read_display9:
;T_RTCDS3231_1.c,98 :: 		temperature[8]  = 223;                         // Degree symbol
0x0D04	0x0EDF      	MOVLW       223
0x0D06	0x6E43      	MOVWF       _temperature+8 
;T_RTCDS3231_1.c,99 :: 		UART1_Write_Text( temperature);                   // Display temperature
0x0D08	0x0E3B      	MOVLW       _temperature
0x0D0A	0x6FE1      	MOVWF       FARG_UART1_Write_Text_uart_text, 1
0x0D0C	0x0E00      	MOVLW       hi_addr(_temperature)
0x0D0E	0x6FE2      	MOVWF       FARG_UART1_Write_Text_uart_text+1, 1
0x0D10	0xDC01      	RCALL       _UART1_Write_Text
;T_RTCDS3231_1.c,101 :: 		Lcd_Out(3, 1, alarm1);                         // Display alarm1
0x0D12	0x0E03      	MOVLW       3
0x0D14	0x6FED      	MOVWF       FARG_Lcd_Out_row, 1
0x0D16	0x0E01      	MOVLW       1
0x0D18	0x6FEE      	MOVWF       FARG_Lcd_Out_column, 1
0x0D1A	0x0E15      	MOVLW       _alarm1
0x0D1C	0x6FEF      	MOVWF       FARG_Lcd_Out_text, 1
0x0D1E	0x0E00      	MOVLW       hi_addr(_alarm1)
0x0D20	0x6FF0      	MOVWF       FARG_Lcd_Out_text+1, 1
0x0D22	0xF000EC8A  	CALL        _Lcd_Out, 0
;T_RTCDS3231_1.c,102 :: 		UART1_Write_Text( alarm1);
0x0D26	0x0E15      	MOVLW       _alarm1
0x0D28	0x6FE1      	MOVWF       FARG_UART1_Write_Text_uart_text, 1
0x0D2A	0x0E00      	MOVLW       hi_addr(_alarm1)
0x0D2C	0x6FE2      	MOVWF       FARG_UART1_Write_Text_uart_text+1, 1
0x0D2E	0xF002EC8A  	CALL        _UART1_Write_Text, 0
;T_RTCDS3231_1.c,104 :: 		if(alarm1_status)  UART1_Write_Text(  "ON ");      // If A1IE = 1 print 'ON'
0x0D32	0xA1A1      	BTFSS       _alarm1_status, BitPos(_alarm1_status+0), 1
0x0D34	0xD007      	BRA         L_alarms_read_display12
0x0D36	0x0E37      	MOVLW       ?lstr1_T_RTCDS3231_1
0x0D38	0x6FE1      	MOVWF       FARG_UART1_Write_Text_uart_text, 1
0x0D3A	0x0E00      	MOVLW       hi_addr(?lstr1_T_RTCDS3231_1)
0x0D3C	0x6FE2      	MOVWF       FARG_UART1_Write_Text_uart_text+1, 1
0x0D3E	0xF002EC8A  	CALL        _UART1_Write_Text, 0
0x0D42	0xD006      	BRA         L_alarms_read_display13
L_alarms_read_display12:
;T_RTCDS3231_1.c,105 :: 		else               UART1_Write_Text(  "OFF");      // If A1IE = 0 print 'OFF'
0x0D44	0x0E2F      	MOVLW       ?lstr2_T_RTCDS3231_1
0x0D46	0x6FE1      	MOVWF       FARG_UART1_Write_Text_uart_text, 1
0x0D48	0x0E00      	MOVLW       hi_addr(?lstr2_T_RTCDS3231_1)
0x0D4A	0x6FE2      	MOVWF       FARG_UART1_Write_Text_uart_text+1, 1
0x0D4C	0xF002EC8A  	CALL        _UART1_Write_Text, 0
L_alarms_read_display13:
;T_RTCDS3231_1.c,106 :: 		Lcd_Out(4, 1, alarm2);                         // Display alarm2
0x0D50	0x0E04      	MOVLW       4
0x0D52	0x6FED      	MOVWF       FARG_Lcd_Out_row, 1
0x0D54	0x0E01      	MOVLW       1
0x0D56	0x6FEE      	MOVWF       FARG_Lcd_Out_column, 1
0x0D58	0x0E22      	MOVLW       _alarm2
0x0D5A	0x6FEF      	MOVWF       FARG_Lcd_Out_text, 1
0x0D5C	0x0E00      	MOVLW       hi_addr(_alarm2)
0x0D5E	0x6FF0      	MOVWF       FARG_Lcd_Out_text+1, 1
0x0D60	0xF000EC8A  	CALL        _Lcd_Out, 0
;T_RTCDS3231_1.c,107 :: 		if(alarm2_status)  Lcd_Out(4, 18, "ON ");      // If A2IE = 1 print 'ON'
0x0D64	0xA3A1      	BTFSS       _alarm2_status, BitPos(_alarm2_status+0), 1
0x0D66	0xD00B      	BRA         L_alarms_read_display14
0x0D68	0x0E04      	MOVLW       4
0x0D6A	0x6FED      	MOVWF       FARG_Lcd_Out_row, 1
0x0D6C	0x0E12      	MOVLW       18
0x0D6E	0x6FEE      	MOVWF       FARG_Lcd_Out_column, 1
0x0D70	0x0E33      	MOVLW       ?lstr3_T_RTCDS3231_1
0x0D72	0x6FEF      	MOVWF       FARG_Lcd_Out_text, 1
0x0D74	0x0E00      	MOVLW       hi_addr(?lstr3_T_RTCDS3231_1)
0x0D76	0x6FF0      	MOVWF       FARG_Lcd_Out_text+1, 1
0x0D78	0xF000EC8A  	CALL        _Lcd_Out, 0
0x0D7C	0xD00A      	BRA         L_alarms_read_display15
L_alarms_read_display14:
;T_RTCDS3231_1.c,108 :: 		else               Lcd_Out(4, 18, "OFF");      // If A2IE = 0 print 'OFF'
0x0D7E	0x0E04      	MOVLW       4
0x0D80	0x6FED      	MOVWF       FARG_Lcd_Out_row, 1
0x0D82	0x0E12      	MOVLW       18
0x0D84	0x6FEE      	MOVWF       FARG_Lcd_Out_column, 1
0x0D86	0x0E7F      	MOVLW       ?lstr4_T_RTCDS3231_1
0x0D88	0x6FEF      	MOVWF       FARG_Lcd_Out_text, 1
0x0D8A	0x0E00      	MOVLW       hi_addr(?lstr4_T_RTCDS3231_1)
0x0D8C	0x6FF0      	MOVWF       FARG_Lcd_Out_text+1, 1
0x0D8E	0xF000EC8A  	CALL        _Lcd_Out, 0
L_alarms_read_display15:
;T_RTCDS3231_1.c,109 :: 		}
L_end_alarms_read_display:
0x0D92	0x0012      	RETURN      0
; end of _alarms_read_display
_edit:
;T_RTCDS3231_1.c,153 :: 		char edit(char parameter, char x, char y){
;T_RTCDS3231_1.c,154 :: 		while(!PORTB.F3 || !PORTB.F5);                      // Wait for button RB0 is release
L_edit34:
0x0D94	0xA681      	BTFSS       PORTB, 3 
0x0D96	0xD003      	BRA         L__edit121
0x0D98	0xAA81      	BTFSS       PORTB, 5 
0x0D9A	0xD001      	BRA         L__edit121
0x0D9C	0xD001      	BRA         L_edit35
L__edit121:
0x0D9E	0xD7FA      	BRA         L_edit34
L_edit35:
;T_RTCDS3231_1.c,155 :: 		while(1){
L_edit38:
;T_RTCDS3231_1.c,156 :: 		while(!PORTB.F4){                                 // If button RB2 is pressed
L_edit40:
0x0DA0	0xB881      	BTFSC       PORTB, 4 
0x0DA2	0xD088      	BRA         L_edit41
;T_RTCDS3231_1.c,157 :: 		parameter++;
0x0DA4	0x0100      	MOVLB       0
0x0DA6	0x2BDA      	INCF        FARG_edit_parameter, 1, 1
;T_RTCDS3231_1.c,158 :: 		if(((i == 0) || (i == 5)) && parameter > 23)    // If hours > 23 ==> hours = 0
0x0DA8	0x51D6      	MOVF        _i, 0, 1
0x0DAA	0x0A00      	XORLW       0
0x0DAC	0xE004      	BZ          L__edit120
0x0DAE	0x51D6      	MOVF        _i, 0, 1
0x0DB0	0x0A05      	XORLW       5
0x0DB2	0xE001      	BZ          L__edit120
0x0DB4	0xD004      	BRA         L_edit46
L__edit120:
0x0DB6	0x51DA      	MOVF        FARG_edit_parameter, 0, 1
0x0DB8	0x0817      	SUBLW       23
0x0DBA	0xA0D8      	BTFSS       STATUS, 0 
L__edit119:
;T_RTCDS3231_1.c,159 :: 		parameter = 0;
0x0DBC	0x6BDA      	CLRF        FARG_edit_parameter, 1
L_edit46:
;T_RTCDS3231_1.c,160 :: 		if(((i == 1) || (i == 6)) && parameter > 59)    // If minutes > 59 ==> minutes = 0
0x0DBE	0x51D6      	MOVF        _i, 0, 1
0x0DC0	0x0A01      	XORLW       1
0x0DC2	0xE004      	BZ          L__edit118
0x0DC4	0x51D6      	MOVF        _i, 0, 1
0x0DC6	0x0A06      	XORLW       6
0x0DC8	0xE001      	BZ          L__edit118
0x0DCA	0xD004      	BRA         L_edit51
L__edit118:
0x0DCC	0x51DA      	MOVF        FARG_edit_parameter, 0, 1
0x0DCE	0x083B      	SUBLW       59
0x0DD0	0xA0D8      	BTFSS       STATUS, 0 
L__edit117:
;T_RTCDS3231_1.c,161 :: 		parameter = 0;
0x0DD2	0x6BDA      	CLRF        FARG_edit_parameter, 1
L_edit51:
;T_RTCDS3231_1.c,162 :: 		if(i == 2 && parameter > 31)                    // If date > 31 ==> date = 1
0x0DD4	0x51D6      	MOVF        _i, 0, 1
0x0DD6	0x0A02      	XORLW       2
0x0DD8	0xE105      	BNZ         L_edit54
0x0DDA	0x51DA      	MOVF        FARG_edit_parameter, 0, 1
0x0DDC	0x081F      	SUBLW       31
0x0DDE	0xE202      	BC          L_edit54
L__edit116:
;T_RTCDS3231_1.c,163 :: 		parameter = 1;
0x0DE0	0x0E01      	MOVLW       1
0x0DE2	0x6FDA      	MOVWF       FARG_edit_parameter, 1
L_edit54:
;T_RTCDS3231_1.c,164 :: 		if(i == 3 && parameter > 12)                    // If month > 12 ==> month = 1
0x0DE4	0x51D6      	MOVF        _i, 0, 1
0x0DE6	0x0A03      	XORLW       3
0x0DE8	0xE105      	BNZ         L_edit57
0x0DEA	0x51DA      	MOVF        FARG_edit_parameter, 0, 1
0x0DEC	0x080C      	SUBLW       12
0x0DEE	0xE202      	BC          L_edit57
L__edit115:
;T_RTCDS3231_1.c,165 :: 		parameter = 1;
0x0DF0	0x0E01      	MOVLW       1
0x0DF2	0x6FDA      	MOVWF       FARG_edit_parameter, 1
L_edit57:
;T_RTCDS3231_1.c,166 :: 		if(i == 4 && parameter > 99)                    // If year > 99 ==> year = 0
0x0DF4	0x51D6      	MOVF        _i, 0, 1
0x0DF6	0x0A04      	XORLW       4
0x0DF8	0xE104      	BNZ         L_edit60
0x0DFA	0x51DA      	MOVF        FARG_edit_parameter, 0, 1
0x0DFC	0x0863      	SUBLW       99
0x0DFE	0xA0D8      	BTFSS       STATUS, 0 
L__edit114:
;T_RTCDS3231_1.c,167 :: 		parameter = 0;
0x0E00	0x6BDA      	CLRF        FARG_edit_parameter, 1
L_edit60:
;T_RTCDS3231_1.c,168 :: 		if(i == 7 && parameter > 1)                     // For alarms ON or OFF (1: alarm ON, 0: alarm OFF)
0x0E02	0x51D6      	MOVF        _i, 0, 1
0x0E04	0x0A07      	XORLW       7
0x0E06	0xE104      	BNZ         L_edit63
0x0E08	0x51DA      	MOVF        FARG_edit_parameter, 0, 1
0x0E0A	0x0801      	SUBLW       1
0x0E0C	0xA0D8      	BTFSS       STATUS, 0 
L__edit113:
;T_RTCDS3231_1.c,169 :: 		parameter = 0;
0x0E0E	0x6BDA      	CLRF        FARG_edit_parameter, 1
L_edit63:
;T_RTCDS3231_1.c,170 :: 		if(i == 7){                                     // For alarms ON & OFF
0x0E10	0x51D6      	MOVF        _i, 0, 1
0x0E12	0x0A07      	XORLW       7
0x0E14	0xE119      	BNZ         L_edit64
;T_RTCDS3231_1.c,171 :: 		if(parameter == 1)  Lcd_Out(y, x, "ON ");
0x0E16	0x51DA      	MOVF        FARG_edit_parameter, 0, 1
0x0E18	0x0A01      	XORLW       1
0x0E1A	0xE10B      	BNZ         L_edit65
0x0E1C	0xF0EDC0DC  	MOVFF       FARG_edit_y, FARG_Lcd_Out_row
0x0E20	0xF0EEC0DB  	MOVFF       FARG_edit_x, FARG_Lcd_Out_column
0x0E24	0x0E83      	MOVLW       ?lstr12_T_RTCDS3231_1
0x0E26	0x6FEF      	MOVWF       FARG_Lcd_Out_text, 1
0x0E28	0x0E00      	MOVLW       hi_addr(?lstr12_T_RTCDS3231_1)
0x0E2A	0x6FF0      	MOVWF       FARG_Lcd_Out_text+1, 1
0x0E2C	0xF000EC8A  	CALL        _Lcd_Out, 0
0x0E30	0xD00A      	BRA         L_edit66
L_edit65:
;T_RTCDS3231_1.c,172 :: 		else                Lcd_Out(y, x, "OFF");
0x0E32	0xF0EDC0DC  	MOVFF       FARG_edit_y, FARG_Lcd_Out_row
0x0E36	0xF0EEC0DB  	MOVFF       FARG_edit_x, FARG_Lcd_Out_column
0x0E3A	0x0E7B      	MOVLW       ?lstr13_T_RTCDS3231_1
0x0E3C	0x6FEF      	MOVWF       FARG_Lcd_Out_text, 1
0x0E3E	0x0E00      	MOVLW       hi_addr(?lstr13_T_RTCDS3231_1)
0x0E40	0x6FF0      	MOVWF       FARG_Lcd_Out_text+1, 1
0x0E42	0xF000EC8A  	CALL        _Lcd_Out, 0
L_edit66:
;T_RTCDS3231_1.c,173 :: 		}
0x0E46	0xD021      	BRA         L_edit67
L_edit64:
;T_RTCDS3231_1.c,175 :: 		Lcd_Chr(y, x, parameter / 10 + 48);
0x0E48	0xF0E1C0DC  	MOVFF       FARG_edit_y, FARG_Lcd_Chr_row
0x0E4C	0xF0E2C0DB  	MOVFF       FARG_edit_x, FARG_Lcd_Chr_column
0x0E50	0x0E0A      	MOVLW       10
0x0E52	0x6E04      	MOVWF       R4 
0x0E54	0xF000C0DA  	MOVFF       FARG_edit_parameter, R0
0x0E58	0xF001EC3E  	CALL        _Div_8X8_U, 0
0x0E5C	0x0E30      	MOVLW       48
0x0E5E	0x2400      	ADDWF       R0, 0 
0x0E60	0x6FE3      	MOVWF       FARG_Lcd_Chr_out_char, 1
0x0E62	0xF002ECA4  	CALL        _Lcd_Chr, 0
;T_RTCDS3231_1.c,176 :: 		Lcd_Chr(y, x + 1, parameter % 10 + 48);
0x0E66	0xF0E1C0DC  	MOVFF       FARG_edit_y, FARG_Lcd_Chr_row
0x0E6A	0x51DB      	MOVF        FARG_edit_x, 0, 1
0x0E6C	0x0F01      	ADDLW       1
0x0E6E	0x6FE2      	MOVWF       FARG_Lcd_Chr_column, 1
0x0E70	0x0E0A      	MOVLW       10
0x0E72	0x6E04      	MOVWF       R4 
0x0E74	0xF000C0DA  	MOVFF       FARG_edit_parameter, R0
0x0E78	0xF001EC3E  	CALL        _Div_8X8_U, 0
0x0E7C	0xF000C008  	MOVFF       R8, R0
0x0E80	0x0E30      	MOVLW       48
0x0E82	0x2400      	ADDWF       R0, 0 
0x0E84	0x6FE3      	MOVWF       FARG_Lcd_Chr_out_char, 1
0x0E86	0xF002ECA4  	CALL        _Lcd_Chr, 0
;T_RTCDS3231_1.c,177 :: 		}
L_edit67:
;T_RTCDS3231_1.c,178 :: 		if(i >= 5){
0x0E8A	0x0E05      	MOVLW       5
0x0E8C	0x5DD6      	SUBWF       _i, 0, 1
0x0E8E	0xE303      	BNC         L_edit68
;T_RTCDS3231_1.c,179 :: 		DS3231_read();                             // Read data from DS3231
0x0E90	0xF002ECD3  	CALL        _DS3231_read, 0
;T_RTCDS3231_1.c,180 :: 		DS3231_display();                          // Display DS3231 time and calendar
0x0E94	0xDC26      	RCALL       _DS3231_display
;T_RTCDS3231_1.c,181 :: 		}
L_edit68:
;T_RTCDS3231_1.c,182 :: 		delay_ms(200);                               // Wait 200ms
0x0E96	0x0E06      	MOVLW       6
0x0E98	0x6E0B      	MOVWF       R11, 0
0x0E9A	0x0E13      	MOVLW       19
0x0E9C	0x6E0C      	MOVWF       R12, 0
0x0E9E	0x0EAD      	MOVLW       173
0x0EA0	0x6E0D      	MOVWF       R13, 0
L_edit69:
0x0EA2	0x2E0D      	DECFSZ      R13, 1, 0
0x0EA4	0xD7FE      	BRA         L_edit69
0x0EA6	0x2E0C      	DECFSZ      R12, 1, 0
0x0EA8	0xD7FC      	BRA         L_edit69
0x0EAA	0x2E0B      	DECFSZ      R11, 1, 0
0x0EAC	0xD7FA      	BRA         L_edit69
0x0EAE	0x0000      	NOP
0x0EB0	0x0000      	NOP
;T_RTCDS3231_1.c,183 :: 		}
0x0EB2	0xD776      	BRA         L_edit40
L_edit41:
0x0EB4	0x0100      	MOVLB       0
;T_RTCDS3231_1.c,184 :: 		Lcd_Out(y, x, "  ");                           // Print two spaces
0x0EB6	0xF0EDC0DC  	MOVFF       FARG_edit_y, FARG_Lcd_Out_row
0x0EBA	0xF0EEC0DB  	MOVFF       FARG_edit_x, FARG_Lcd_Out_column
0x0EBE	0x0E76      	MOVLW       ?lstr14_T_RTCDS3231_1
0x0EC0	0x6FEF      	MOVWF       FARG_Lcd_Out_text, 1
0x0EC2	0x0E00      	MOVLW       hi_addr(?lstr14_T_RTCDS3231_1)
0x0EC4	0x6FF0      	MOVWF       FARG_Lcd_Out_text+1, 1
0x0EC6	0xF000EC8A  	CALL        _Lcd_Out, 0
;T_RTCDS3231_1.c,185 :: 		if(i == 7) Lcd_Out(y, x + 2, " ");             // Print space (for alarms ON & OFF)
0x0ECA	0x51D6      	MOVF        _i, 0, 1
0x0ECC	0x0A07      	XORLW       7
0x0ECE	0xE10B      	BNZ         L_edit70
0x0ED0	0xF0EDC0DC  	MOVFF       FARG_edit_y, FARG_Lcd_Out_row
0x0ED4	0x0E02      	MOVLW       2
0x0ED6	0x25DB      	ADDWF       FARG_edit_x, 0, 1
0x0ED8	0x6FEE      	MOVWF       FARG_Lcd_Out_column, 1
0x0EDA	0x0E79      	MOVLW       ?lstr15_T_RTCDS3231_1
0x0EDC	0x6FEF      	MOVWF       FARG_Lcd_Out_text, 1
0x0EDE	0x0E00      	MOVLW       hi_addr(?lstr15_T_RTCDS3231_1)
0x0EE0	0x6FF0      	MOVWF       FARG_Lcd_Out_text+1, 1
0x0EE2	0xF000EC8A  	CALL        _Lcd_Out, 0
L_edit70:
;T_RTCDS3231_1.c,186 :: 		blink();                                       // Call blink function
0x0EE6	0xF002EC6C  	CALL        _blink, 0
;T_RTCDS3231_1.c,187 :: 		if(i == 7){                                    // For alarms ON & OFF
0x0EEA	0x51D6      	MOVF        _i, 0, 1
0x0EEC	0x0A07      	XORLW       7
0x0EEE	0xE119      	BNZ         L_edit71
;T_RTCDS3231_1.c,188 :: 		if(parameter == 1)  Lcd_Out(y, x, "ON ");
0x0EF0	0x51DA      	MOVF        FARG_edit_parameter, 0, 1
0x0EF2	0x0A01      	XORLW       1
0x0EF4	0xE10B      	BNZ         L_edit72
0x0EF6	0xF0EDC0DC  	MOVFF       FARG_edit_y, FARG_Lcd_Out_row
0x0EFA	0xF0EEC0DB  	MOVFF       FARG_edit_x, FARG_Lcd_Out_column
0x0EFE	0x0E87      	MOVLW       ?lstr16_T_RTCDS3231_1
0x0F00	0x6FEF      	MOVWF       FARG_Lcd_Out_text, 1
0x0F02	0x0E00      	MOVLW       hi_addr(?lstr16_T_RTCDS3231_1)
0x0F04	0x6FF0      	MOVWF       FARG_Lcd_Out_text+1, 1
0x0F06	0xF000EC8A  	CALL        _Lcd_Out, 0
0x0F0A	0xD00A      	BRA         L_edit73
L_edit72:
;T_RTCDS3231_1.c,189 :: 		else                Lcd_Out(y, x, "OFF");
0x0F0C	0xF0EDC0DC  	MOVFF       FARG_edit_y, FARG_Lcd_Out_row
0x0F10	0xF0EEC0DB  	MOVFF       FARG_edit_x, FARG_Lcd_Out_column
0x0F14	0x0E93      	MOVLW       ?lstr17_T_RTCDS3231_1
0x0F16	0x6FEF      	MOVWF       FARG_Lcd_Out_text, 1
0x0F18	0x0E00      	MOVLW       hi_addr(?lstr17_T_RTCDS3231_1)
0x0F1A	0x6FF0      	MOVWF       FARG_Lcd_Out_text+1, 1
0x0F1C	0xF000EC8A  	CALL        _Lcd_Out, 0
L_edit73:
;T_RTCDS3231_1.c,190 :: 		}
0x0F20	0xD021      	BRA         L_edit74
L_edit71:
;T_RTCDS3231_1.c,192 :: 		Lcd_Chr(y, x, parameter / 10 + 48);
0x0F22	0xF0E1C0DC  	MOVFF       FARG_edit_y, FARG_Lcd_Chr_row
0x0F26	0xF0E2C0DB  	MOVFF       FARG_edit_x, FARG_Lcd_Chr_column
0x0F2A	0x0E0A      	MOVLW       10
0x0F2C	0x6E04      	MOVWF       R4 
0x0F2E	0xF000C0DA  	MOVFF       FARG_edit_parameter, R0
0x0F32	0xF001EC3E  	CALL        _Div_8X8_U, 0
0x0F36	0x0E30      	MOVLW       48
0x0F38	0x2400      	ADDWF       R0, 0 
0x0F3A	0x6FE3      	MOVWF       FARG_Lcd_Chr_out_char, 1
0x0F3C	0xF002ECA4  	CALL        _Lcd_Chr, 0
;T_RTCDS3231_1.c,193 :: 		Lcd_Chr(y, x + 1, parameter % 10 + 48);
0x0F40	0xF0E1C0DC  	MOVFF       FARG_edit_y, FARG_Lcd_Chr_row
0x0F44	0x51DB      	MOVF        FARG_edit_x, 0, 1
0x0F46	0x0F01      	ADDLW       1
0x0F48	0x6FE2      	MOVWF       FARG_Lcd_Chr_column, 1
0x0F4A	0x0E0A      	MOVLW       10
0x0F4C	0x6E04      	MOVWF       R4 
0x0F4E	0xF000C0DA  	MOVFF       FARG_edit_parameter, R0
0x0F52	0xF001EC3E  	CALL        _Div_8X8_U, 0
0x0F56	0xF000C008  	MOVFF       R8, R0
0x0F5A	0x0E30      	MOVLW       48
0x0F5C	0x2400      	ADDWF       R0, 0 
0x0F5E	0x6FE3      	MOVWF       FARG_Lcd_Chr_out_char, 1
0x0F60	0xF002ECA4  	CALL        _Lcd_Chr, 0
;T_RTCDS3231_1.c,194 :: 		}
L_edit74:
;T_RTCDS3231_1.c,195 :: 		blink();
0x0F64	0xF002EC6C  	CALL        _blink, 0
;T_RTCDS3231_1.c,196 :: 		if(i >= 5){
0x0F68	0x0E05      	MOVLW       5
0x0F6A	0x5DD6      	SUBWF       _i, 0, 1
0x0F6C	0xE304      	BNC         L_edit75
;T_RTCDS3231_1.c,197 :: 		DS3231_read();
0x0F6E	0xF002ECD3  	CALL        _DS3231_read, 0
;T_RTCDS3231_1.c,198 :: 		DS3231_display();}
0x0F72	0xF003EC71  	CALL        _DS3231_display, 0
L_edit75:
;T_RTCDS3231_1.c,199 :: 		if((!PORTB.F3 && i < 5) || (!PORTB.F5 && i >= 5)){
0x0F76	0xB681      	BTFSC       PORTB, 3 
0x0F78	0xD004      	BRA         L__edit112
0x0F7A	0x0E05      	MOVLW       5
0x0F7C	0x5DD6      	SUBWF       _i, 0, 1
0x0F7E	0xE201      	BC          L__edit112
0x0F80	0xD007      	BRA         L__edit110
L__edit112:
0x0F82	0xBA81      	BTFSC       PORTB, 5 
0x0F84	0xD004      	BRA         L__edit111
0x0F86	0x0E05      	MOVLW       5
0x0F88	0x5DD6      	SUBWF       _i, 0, 1
0x0F8A	0xE301      	BNC         L__edit111
0x0F8C	0xD001      	BRA         L__edit110
L__edit111:
0x0F8E	0xD004      	BRA         L_edit82
L__edit110:
;T_RTCDS3231_1.c,200 :: 		i++;                                       // Increment 'i' for the next parameter
0x0F90	0x2BD6      	INCF        _i, 1, 1
;T_RTCDS3231_1.c,201 :: 		return parameter;                          // Return parameter value and exit
0x0F92	0xF000C0DA  	MOVFF       FARG_edit_parameter, R0
0x0F96	0xD001      	BRA         L_end_edit
;T_RTCDS3231_1.c,202 :: 		}
L_edit82:
;T_RTCDS3231_1.c,203 :: 		}
0x0F98	0xD703      	BRA         L_edit38
;T_RTCDS3231_1.c,204 :: 		}
L_end_edit:
0x0F9A	0x0012      	RETURN      0
; end of _edit
_UART1_Init:
;__Lib_UART_c67.c,15 :: 		
;__Lib_UART_c67.c,18 :: 		
0x0F9C	0x0E36      	MOVLW       _UART1_Write
0x0F9E	0x0100      	MOVLB       0
0x0FA0	0x6FC8      	MOVWF       _UART_Wr_Ptr, 1
0x0FA2	0x0E00      	MOVLW       hi_addr(_UART1_Write)
0x0FA4	0x6FC9      	MOVWF       _UART_Wr_Ptr+1, 1
0x0FA6	0x0EF3      	MOVLW       FARG_UART1_Write_data_
0x0FA8	0x6FCA      	MOVWF       _UART_Wr_Ptr+2, 1
0x0FAA	0x0E00      	MOVLW       hi_addr(FARG_UART1_Write_data_)
0x0FAC	0x6FCB      	MOVWF       _UART_Wr_Ptr+3, 1
;__Lib_UART_c67.c,19 :: 		
0x0FAE	0x0EFF      	MOVLW       _UART1_Read
0x0FB0	0x6FC4      	MOVWF       _UART_Rd_Ptr, 1
0x0FB2	0x0EFF      	MOVLW       hi_addr(_UART1_Read)
0x0FB4	0x6FC5      	MOVWF       _UART_Rd_Ptr+1, 1
0x0FB6	0x0E00      	MOVLW       0
0x0FB8	0x6FC6      	MOVWF       _UART_Rd_Ptr+2, 1
0x0FBA	0x0E00      	MOVLW       0
0x0FBC	0x6FC7      	MOVWF       _UART_Rd_Ptr+3, 1
;__Lib_UART_c67.c,20 :: 		
0x0FBE	0x0EFF      	MOVLW       _UART1_Data_Ready
0x0FC0	0x6FBC      	MOVWF       _UART_Rdy_Ptr, 1
0x0FC2	0x0EFF      	MOVLW       hi_addr(_UART1_Data_Ready)
0x0FC4	0x6FBD      	MOVWF       _UART_Rdy_Ptr+1, 1
0x0FC6	0x0E00      	MOVLW       0
0x0FC8	0x6FBE      	MOVWF       _UART_Rdy_Ptr+2, 1
0x0FCA	0x0E00      	MOVLW       0
0x0FCC	0x6FBF      	MOVWF       _UART_Rdy_Ptr+3, 1
;__Lib_UART_c67.c,21 :: 		
0x0FCE	0x0EFF      	MOVLW       _UART1_Tx_Idle
0x0FD0	0x6FC0      	MOVWF       _UART_Tx_Idle_Ptr, 1
0x0FD2	0x0EFF      	MOVLW       hi_addr(_UART1_Tx_Idle)
0x0FD4	0x6FC1      	MOVWF       _UART_Tx_Idle_Ptr+1, 1
0x0FD6	0x0E00      	MOVLW       0
0x0FD8	0x6FC2      	MOVWF       _UART_Tx_Idle_Ptr+2, 1
0x0FDA	0x0E00      	MOVLW       0
0x0FDC	0x6FC3      	MOVWF       _UART_Tx_Idle_Ptr+3, 1
;__Lib_UART_c67.c,23 :: 		
0x0FDE	0x8AAC      	BSF         TXSTA, 5 
;__Lib_UART_c67.c,24 :: 		
0x0FE0	0x0E90      	MOVLW       144
0x0FE2	0x6EAB      	MOVWF       RCSTA 
;__Lib_UART_c67.c,25 :: 		
0x0FE4	0x8E94      	BSF         TRISC7_bit, BitPos(TRISC7_bit+0) 
;__Lib_UART_c67.c,26 :: 		
0x0FE6	0x9C94      	BCF         TRISC6_bit, BitPos(TRISC6_bit+0) 
;__Lib_UART_c67.c,28 :: 		
L_UART1_Init0:
0x0FE8	0xAA9E      	BTFSS       PIR1, 5 
0x0FEA	0xD003      	BRA         L_UART1_Init1
;__Lib_UART_c67.c,29 :: 		
0x0FEC	0xF000CFAE  	MOVFF       RCREG, R0
0x0FF0	0xD7FB      	BRA         L_UART1_Init0
L_UART1_Init1:
;__Lib_UART_c67.c,30 :: 		
L_end_UART1_Init:
0x0FF2	0x0012      	RETURN      0
; end of _UART1_Init
_main:
0x0FF4	0xF00AECFC  	CALL        5624, 0
;T_RTCDS3231_1.c,206 :: 		void main() {
;T_RTCDS3231_1.c,208 :: 		ADCON1 =0x0F;                      // Configure all PORTB pins as digital
0x0FF8	0x0E0F      	MOVLW       15
0x0FFA	0x6EC1      	MOVWF       ADCON1 
;T_RTCDS3231_1.c,209 :: 		PORTB = 0;                       // PORTB initial state
0x0FFC	0x6A81      	CLRF        PORTB 
;T_RTCDS3231_1.c,210 :: 		TRISB = 0x0F;                    // Configure RB0 ~ 3 as input pins
0x0FFE	0x0E0F      	MOVLW       15
0x1000	0x6E93      	MOVWF       TRISB 
;T_RTCDS3231_1.c,211 :: 		INTCON2.RBPU=0;                  // Pull-up resistors
0x1002	0x9EF1      	BCF         INTCON2, 7 
;T_RTCDS3231_1.c,212 :: 		I2C1_Init(100000);               // Initialize I2C communication
0x1004	0x0E32      	MOVLW       50
0x1006	0x6EC8      	MOVWF       SSPADD 
0x1008	0xDCDB      	RCALL       _I2C1_Init
;T_RTCDS3231_1.c,213 :: 		Lcd_Init();                      // Initialize LCD module
0x100A	0xDC77      	RCALL       _Lcd_Init
;T_RTCDS3231_1.c,214 :: 		Lcd_Cmd(_LCD_CURSOR_OFF);        // cursor off
0x100C	0x0E0C      	MOVLW       12
0x100E	0x6FF3      	MOVWF       FARG_Lcd_Cmd_out_char, 1
0x1010	0xF000EC2B  	CALL        _Lcd_Cmd, 0
;T_RTCDS3231_1.c,215 :: 		Lcd_Cmd(_LCD_CLEAR);             // clear LCD
0x1014	0x0E01      	MOVLW       1
0x1016	0x6FF3      	MOVWF       FARG_Lcd_Cmd_out_char, 1
0x1018	0xF000EC2B  	CALL        _Lcd_Cmd, 0
;T_RTCDS3231_1.c,217 :: 		UART1_Init(9600);               // Initialize UART module at 9600 bps
0x101C	0x86B8      	BSF         BAUDCON, 3, 0
0x101E	0x0E02      	MOVLW       2
0x1020	0x6EB0      	MOVWF       SPBRGH 
0x1022	0x0E08      	MOVLW       8
0x1024	0x6EAF      	MOVWF       SPBRG 
0x1026	0x84AC      	BSF         TXSTA, 2, 0
0x1028	0xDFB9      	RCALL       _UART1_Init
;T_RTCDS3231_1.c,218 :: 		Delay_ms(100);                  // Wait for UART module to stabilize
0x102A	0x0E03      	MOVLW       3
0x102C	0x6E0B      	MOVWF       R11, 0
0x102E	0x0E8A      	MOVLW       138
0x1030	0x6E0C      	MOVWF       R12, 0
0x1032	0x0E55      	MOVLW       85
0x1034	0x6E0D      	MOVWF       R13, 0
L_main83:
0x1036	0x2E0D      	DECFSZ      R13, 1, 0
0x1038	0xD7FE      	BRA         L_main83
0x103A	0x2E0C      	DECFSZ      R12, 1, 0
0x103C	0xD7FC      	BRA         L_main83
0x103E	0x2E0B      	DECFSZ      R11, 1, 0
0x1040	0xD7FA      	BRA         L_main83
0x1042	0x0000      	NOP
0x1044	0x0000      	NOP
;T_RTCDS3231_1.c,220 :: 		UART1_Write_Text("inicio");
0x1046	0x0E97      	MOVLW       ?lstr18_T_RTCDS3231_1
0x1048	0x6FE1      	MOVWF       FARG_UART1_Write_Text_uart_text, 1
0x104A	0x0E00      	MOVLW       hi_addr(?lstr18_T_RTCDS3231_1)
0x104C	0x6FE2      	MOVWF       FARG_UART1_Write_Text_uart_text+1, 1
0x104E	0xF002EC8A  	CALL        _UART1_Write_Text, 0
;T_RTCDS3231_1.c,221 :: 		UART1_Write(10);
0x1052	0x0E0A      	MOVLW       10
0x1054	0x6FF3      	MOVWF       FARG_UART1_Write_data_, 1
0x1056	0xF000EC1B  	CALL        _UART1_Write, 0
;T_RTCDS3231_1.c,222 :: 		UART1_Write(13);
0x105A	0x0E0D      	MOVLW       13
0x105C	0x0100      	MOVLB       0
0x105E	0x6FF3      	MOVWF       FARG_UART1_Write_data_, 1
0x1060	0xF000EC1B  	CALL        _UART1_Write, 0
;T_RTCDS3231_1.c,225 :: 		while(1) {
L_main84:
;T_RTCDS3231_1.c,226 :: 		if(!PORTB.F3){                          // If RB3 button is pressed
0x1064	0xB681      	BTFSC       PORTB, 3 
0x1066	0xD120      	BRA         L_main86
;T_RTCDS3231_1.c,227 :: 		i = 0;
0x1068	0x0100      	MOVLB       0
0x106A	0x6BD6      	CLRF        _i, 1
;T_RTCDS3231_1.c,228 :: 		hour   = edit(hour, 1, 1);            // Edit hours
0x106C	0xF0DAC0D2  	MOVFF       _hour, FARG_edit_parameter
0x1070	0x0E01      	MOVLW       1
0x1072	0x6FDB      	MOVWF       FARG_edit_x, 1
0x1074	0x0E01      	MOVLW       1
0x1076	0x6FDC      	MOVWF       FARG_edit_y, 1
0x1078	0xDE8D      	RCALL       _edit
0x107A	0xF0D2C000  	MOVFF       R0, _hour
;T_RTCDS3231_1.c,229 :: 		minute = edit(minute, 4, 1);          // Edit minutes
0x107E	0xF0DAC0D4  	MOVFF       _minute, FARG_edit_parameter
0x1082	0x0E04      	MOVLW       4
0x1084	0x6FDB      	MOVWF       FARG_edit_x, 1
0x1086	0x0E01      	MOVLW       1
0x1088	0x6FDC      	MOVWF       FARG_edit_y, 1
0x108A	0xDE84      	RCALL       _edit
0x108C	0xF0D4C000  	MOVFF       R0, _minute
;T_RTCDS3231_1.c,230 :: 		while(!PORTB.F3);                     // Wait for button RB0 release
L_main87:
0x1090	0xB681      	BTFSC       PORTB, 3 
0x1092	0xD001      	BRA         L_main88
0x1094	0xD7FD      	BRA         L_main87
L_main88:
;T_RTCDS3231_1.c,231 :: 		while(1){
L_main89:
;T_RTCDS3231_1.c,232 :: 		while(!PORTB.F4){                   // If button RB2 button is pressed
L_main91:
0x1096	0xB881      	BTFSC       PORTB, 4 
0x1098	0xD018      	BRA         L_main92
;T_RTCDS3231_1.c,233 :: 		day++;                            // Increment day
0x109A	0x0100      	MOVLB       0
0x109C	0x2BD0      	INCF        _day, 1, 1
;T_RTCDS3231_1.c,234 :: 		if(day > 7) day = 1;
0x109E	0x51D0      	MOVF        _day, 0, 1
0x10A0	0x0807      	SUBLW       7
0x10A2	0xE202      	BC          L_main93
0x10A4	0x0E01      	MOVLW       1
0x10A6	0x6FD0      	MOVWF       _day, 1
L_main93:
;T_RTCDS3231_1.c,235 :: 		day_display();
0x10A8	0xF002EC0F  	CALL        _day_display, 0
;T_RTCDS3231_1.c,236 :: 		delay_ms(200);
0x10AC	0x0E06      	MOVLW       6
0x10AE	0x6E0B      	MOVWF       R11, 0
0x10B0	0x0E13      	MOVLW       19
0x10B2	0x6E0C      	MOVWF       R12, 0
0x10B4	0x0EAD      	MOVLW       173
0x10B6	0x6E0D      	MOVWF       R13, 0
L_main94:
0x10B8	0x2E0D      	DECFSZ      R13, 1, 0
0x10BA	0xD7FE      	BRA         L_main94
0x10BC	0x2E0C      	DECFSZ      R12, 1, 0
0x10BE	0xD7FC      	BRA         L_main94
0x10C0	0x2E0B      	DECFSZ      R11, 1, 0
0x10C2	0xD7FA      	BRA         L_main94
0x10C4	0x0000      	NOP
0x10C6	0x0000      	NOP
;T_RTCDS3231_1.c,237 :: 		}
0x10C8	0xD7E6      	BRA         L_main91
L_main92:
0x10CA	0x0100      	MOVLB       0
;T_RTCDS3231_1.c,238 :: 		Lcd_Out(2, 1, "   ");                // Print 3 spaces
0x10CC	0x0E02      	MOVLW       2
0x10CE	0x6FED      	MOVWF       FARG_Lcd_Out_row, 1
0x10D0	0x0E01      	MOVLW       1
0x10D2	0x6FEE      	MOVWF       FARG_Lcd_Out_column, 1
0x10D4	0x0E8F      	MOVLW       ?lstr19_T_RTCDS3231_1
0x10D6	0x6FEF      	MOVWF       FARG_Lcd_Out_text, 1
0x10D8	0x0E00      	MOVLW       hi_addr(?lstr19_T_RTCDS3231_1)
0x10DA	0x6FF0      	MOVWF       FARG_Lcd_Out_text+1, 1
0x10DC	0xF000EC8A  	CALL        _Lcd_Out, 0
;T_RTCDS3231_1.c,239 :: 		blink();
0x10E0	0xF002EC6C  	CALL        _blink, 0
;T_RTCDS3231_1.c,240 :: 		day_display();
0x10E4	0xF002EC0F  	CALL        _day_display, 0
;T_RTCDS3231_1.c,241 :: 		blink();                             // Call blink function
0x10E8	0xF002EC6C  	CALL        _blink, 0
;T_RTCDS3231_1.c,242 :: 		if(!PORTB.F3)                        // If button RB1 is pressed
0x10EC	0xB681      	BTFSC       PORTB, 3 
0x10EE	0xD001      	BRA         L_main95
;T_RTCDS3231_1.c,243 :: 		break;
0x10F0	0xD001      	BRA         L_main90
L_main95:
;T_RTCDS3231_1.c,244 :: 		}
0x10F2	0xD7D1      	BRA         L_main89
L_main90:
;T_RTCDS3231_1.c,245 :: 		date = edit(date, 5, 2);                   // Edit date
0x10F4	0xF0DAC0D1  	MOVFF       _date, FARG_edit_parameter
0x10F8	0x0E05      	MOVLW       5
0x10FA	0x6FDB      	MOVWF       FARG_edit_x, 1
0x10FC	0x0E02      	MOVLW       2
0x10FE	0x6FDC      	MOVWF       FARG_edit_y, 1
0x1100	0xDE49      	RCALL       _edit
0x1102	0xF0D1C000  	MOVFF       R0, _date
;T_RTCDS3231_1.c,246 :: 		month = edit(month, 8, 2);                 // Edit month
0x1106	0xF0DAC0D5  	MOVFF       _month, FARG_edit_parameter
0x110A	0x0E08      	MOVLW       8
0x110C	0x6FDB      	MOVWF       FARG_edit_x, 1
0x110E	0x0E02      	MOVLW       2
0x1110	0x6FDC      	MOVWF       FARG_edit_y, 1
0x1112	0xDE40      	RCALL       _edit
0x1114	0xF0D5C000  	MOVFF       R0, _month
;T_RTCDS3231_1.c,247 :: 		year = edit(year, 13, 2);                  // Edit year
0x1118	0xF0DAC0D7  	MOVFF       _year, FARG_edit_parameter
0x111C	0x0E0D      	MOVLW       13
0x111E	0x6FDB      	MOVWF       FARG_edit_x, 1
0x1120	0x0E02      	MOVLW       2
0x1122	0x6FDC      	MOVWF       FARG_edit_y, 1
0x1124	0xDE37      	RCALL       _edit
0x1126	0xF0D9C000  	MOVFF       R0, FLOC__main+1
0x112A	0xF0D7C0D9  	MOVFF       FLOC__main+1, _year
;T_RTCDS3231_1.c,249 :: 		minute = ((minute / 10) << 4) + (minute % 10);
0x112E	0x0E0A      	MOVLW       10
0x1130	0x6E04      	MOVWF       R4 
0x1132	0xF000C0D4  	MOVFF       _minute, R0
0x1136	0xF001EC3E  	CALL        _Div_8X8_U, 0
0x113A	0xF0D8C000  	MOVFF       R0, FLOC__main
0x113E	0x37D8      	RLCF        FLOC__main, 1, 1
0x1140	0x91D8      	BCF         FLOC__main, 0, 1
0x1142	0x37D8      	RLCF        FLOC__main, 1, 1
0x1144	0x91D8      	BCF         FLOC__main, 0, 1
0x1146	0x37D8      	RLCF        FLOC__main, 1, 1
0x1148	0x91D8      	BCF         FLOC__main, 0, 1
0x114A	0x37D8      	RLCF        FLOC__main, 1, 1
0x114C	0x91D8      	BCF         FLOC__main, 0, 1
0x114E	0x0E0A      	MOVLW       10
0x1150	0x6E04      	MOVWF       R4 
0x1152	0xF000C0D4  	MOVFF       _minute, R0
0x1156	0xF001EC3E  	CALL        _Div_8X8_U, 0
0x115A	0xF000C008  	MOVFF       R8, R0
0x115E	0x5000      	MOVF        R0, 0 
0x1160	0x25D8      	ADDWF       FLOC__main, 0, 1
0x1162	0x6FD4      	MOVWF       _minute, 1
;T_RTCDS3231_1.c,250 :: 		hour = ((hour / 10) << 4) + (hour % 10);
0x1164	0x0E0A      	MOVLW       10
0x1166	0x6E04      	MOVWF       R4 
0x1168	0xF000C0D2  	MOVFF       _hour, R0
0x116C	0xF001EC3E  	CALL        _Div_8X8_U, 0
0x1170	0xF0D8C000  	MOVFF       R0, FLOC__main
0x1174	0x37D8      	RLCF        FLOC__main, 1, 1
0x1176	0x91D8      	BCF         FLOC__main, 0, 1
0x1178	0x37D8      	RLCF        FLOC__main, 1, 1
0x117A	0x91D8      	BCF         FLOC__main, 0, 1
0x117C	0x37D8      	RLCF        FLOC__main, 1, 1
0x117E	0x91D8      	BCF         FLOC__main, 0, 1
0x1180	0x37D8      	RLCF        FLOC__main, 1, 1
0x1182	0x91D8      	BCF         FLOC__main, 0, 1
0x1184	0x0E0A      	MOVLW       10
0x1186	0x6E04      	MOVWF       R4 
0x1188	0xF000C0D2  	MOVFF       _hour, R0
0x118C	0xF001EC3E  	CALL        _Div_8X8_U, 0
0x1190	0xF000C008  	MOVFF       R8, R0
0x1194	0x5000      	MOVF        R0, 0 
0x1196	0x25D8      	ADDWF       FLOC__main, 0, 1
0x1198	0x6FD2      	MOVWF       _hour, 1
;T_RTCDS3231_1.c,251 :: 		date = ((date / 10) << 4) + (date % 10);
0x119A	0x0E0A      	MOVLW       10
0x119C	0x6E04      	MOVWF       R4 
0x119E	0xF000C0D1  	MOVFF       _date, R0
0x11A2	0xF001EC3E  	CALL        _Div_8X8_U, 0
0x11A6	0xF0D8C000  	MOVFF       R0, FLOC__main
0x11AA	0x37D8      	RLCF        FLOC__main, 1, 1
0x11AC	0x91D8      	BCF         FLOC__main, 0, 1
0x11AE	0x37D8      	RLCF        FLOC__main, 1, 1
0x11B0	0x91D8      	BCF         FLOC__main, 0, 1
0x11B2	0x37D8      	RLCF        FLOC__main, 1, 1
0x11B4	0x91D8      	BCF         FLOC__main, 0, 1
0x11B6	0x37D8      	RLCF        FLOC__main, 1, 1
0x11B8	0x91D8      	BCF         FLOC__main, 0, 1
0x11BA	0x0E0A      	MOVLW       10
0x11BC	0x6E04      	MOVWF       R4 
0x11BE	0xF000C0D1  	MOVFF       _date, R0
0x11C2	0xF001EC3E  	CALL        _Div_8X8_U, 0
0x11C6	0xF000C008  	MOVFF       R8, R0
0x11CA	0x5000      	MOVF        R0, 0 
0x11CC	0x25D8      	ADDWF       FLOC__main, 0, 1
0x11CE	0x6FD1      	MOVWF       _date, 1
;T_RTCDS3231_1.c,252 :: 		month = ((month / 10) << 4) + (month % 10);
0x11D0	0x0E0A      	MOVLW       10
0x11D2	0x6E04      	MOVWF       R4 
0x11D4	0xF000C0D5  	MOVFF       _month, R0
0x11D8	0xF001EC3E  	CALL        _Div_8X8_U, 0
0x11DC	0xF0D8C000  	MOVFF       R0, FLOC__main
0x11E0	0x37D8      	RLCF        FLOC__main, 1, 1
0x11E2	0x91D8      	BCF         FLOC__main, 0, 1
0x11E4	0x37D8      	RLCF        FLOC__main, 1, 1
0x11E6	0x91D8      	BCF         FLOC__main, 0, 1
0x11E8	0x37D8      	RLCF        FLOC__main, 1, 1
0x11EA	0x91D8      	BCF         FLOC__main, 0, 1
0x11EC	0x37D8      	RLCF        FLOC__main, 1, 1
0x11EE	0x91D8      	BCF         FLOC__main, 0, 1
0x11F0	0x0E0A      	MOVLW       10
0x11F2	0x6E04      	MOVWF       R4 
0x11F4	0xF000C0D5  	MOVFF       _month, R0
0x11F8	0xF001EC3E  	CALL        _Div_8X8_U, 0
0x11FC	0xF000C008  	MOVFF       R8, R0
0x1200	0x5000      	MOVF        R0, 0 
0x1202	0x25D8      	ADDWF       FLOC__main, 0, 1
0x1204	0x6FD5      	MOVWF       _month, 1
;T_RTCDS3231_1.c,253 :: 		year = ((year / 10) << 4) + (year % 10);
0x1206	0x0E0A      	MOVLW       10
0x1208	0x6E04      	MOVWF       R4 
0x120A	0xF000C0D9  	MOVFF       FLOC__main+1, R0
0x120E	0xF001EC3E  	CALL        _Div_8X8_U, 0
0x1212	0xF0D7C000  	MOVFF       R0, _year
0x1216	0x37D7      	RLCF        _year, 1, 1
0x1218	0x91D7      	BCF         _year, 0, 1
0x121A	0x37D7      	RLCF        _year, 1, 1
0x121C	0x91D7      	BCF         _year, 0, 1
0x121E	0x37D7      	RLCF        _year, 1, 1
0x1220	0x91D7      	BCF         _year, 0, 1
0x1222	0x37D7      	RLCF        _year, 1, 1
0x1224	0x91D7      	BCF         _year, 0, 1
0x1226	0x0E0A      	MOVLW       10
0x1228	0x6E04      	MOVWF       R4 
0x122A	0xF000C0D9  	MOVFF       FLOC__main+1, R0
0x122E	0xF001EC3E  	CALL        _Div_8X8_U, 0
0x1232	0xF000C008  	MOVFF       R8, R0
0x1236	0x5000      	MOVF        R0, 0 
0x1238	0x27D7      	ADDWF       _year, 1, 1
;T_RTCDS3231_1.c,256 :: 		I2C1_Start();                               // Start I2C protocol
0x123A	0xF000ECF6  	CALL        _I2C1_Start, 0
;T_RTCDS3231_1.c,257 :: 		I2C1_Wr(0xD0);                           // DS3231 address
0x123E	0x0ED0      	MOVLW       208
0x1240	0x0100      	MOVLB       0
0x1242	0x6FE7      	MOVWF       FARG_I2C1_Wr_data_, 1
0x1244	0xF001ECAE  	CALL        _I2C1_Wr, 0
;T_RTCDS3231_1.c,258 :: 		I2C1_Wr(0);                              // Send register address (seconds address)
0x1248	0x0100      	MOVLB       0
0x124A	0x6BE7      	CLRF        FARG_I2C1_Wr_data_, 1
0x124C	0xF001ECAE  	CALL        _I2C1_Wr, 0
;T_RTCDS3231_1.c,259 :: 		I2C1_Wr(0);                              // Reset seconds and start oscillator
0x1250	0x0100      	MOVLB       0
0x1252	0x6BE7      	CLRF        FARG_I2C1_Wr_data_, 1
0x1254	0xF001ECAE  	CALL        _I2C1_Wr, 0
;T_RTCDS3231_1.c,260 :: 		I2C1_Wr(minute);                         // Write minute value to DS3231
0x1258	0xF0E7C0D4  	MOVFF       _minute, FARG_I2C1_Wr_data_
0x125C	0xF001ECAE  	CALL        _I2C1_Wr, 0
;T_RTCDS3231_1.c,261 :: 		I2C1_Wr(hour);                           // Write hour value to DS3231
0x1260	0xF0E7C0D2  	MOVFF       _hour, FARG_I2C1_Wr_data_
0x1264	0xF001ECAE  	CALL        _I2C1_Wr, 0
;T_RTCDS3231_1.c,262 :: 		I2C1_Wr(day);                            // Write day value
0x1268	0xF0E7C0D0  	MOVFF       _day, FARG_I2C1_Wr_data_
0x126C	0xF001ECAE  	CALL        _I2C1_Wr, 0
;T_RTCDS3231_1.c,263 :: 		I2C1_Wr(date);                           // Write date value to DS3231
0x1270	0xF0E7C0D1  	MOVFF       _date, FARG_I2C1_Wr_data_
0x1274	0xF001ECAE  	CALL        _I2C1_Wr, 0
;T_RTCDS3231_1.c,264 :: 		I2C1_Wr(month);                          // Write month value to DS3231
0x1278	0xF0E7C0D5  	MOVFF       _month, FARG_I2C1_Wr_data_
0x127C	0xF001ECAE  	CALL        _I2C1_Wr, 0
;T_RTCDS3231_1.c,265 :: 		I2C1_Wr(year);                           // Write year value to DS3231
0x1280	0xF0E7C0D7  	MOVFF       _year, FARG_I2C1_Wr_data_
0x1284	0xF001ECAE  	CALL        _I2C1_Wr, 0
;T_RTCDS3231_1.c,266 :: 		I2C1_Stop();                             // Stop I2C
0x1288	0xF000ECF4  	CALL        _I2C1_Stop, 0
;T_RTCDS3231_1.c,267 :: 		delay_ms(200);                           // Wait 200ms
0x128C	0x0E06      	MOVLW       6
0x128E	0x6E0B      	MOVWF       R11, 0
0x1290	0x0E13      	MOVLW       19
0x1292	0x6E0C      	MOVWF       R12, 0
0x1294	0x0EAD      	MOVLW       173
0x1296	0x6E0D      	MOVWF       R13, 0
L_main96:
0x1298	0x2E0D      	DECFSZ      R13, 1, 0
0x129A	0xD7FE      	BRA         L_main96
0x129C	0x2E0C      	DECFSZ      R12, 1, 0
0x129E	0xD7FC      	BRA         L_main96
0x12A0	0x2E0B      	DECFSZ      R11, 1, 0
0x12A2	0xD7FA      	BRA         L_main96
0x12A4	0x0000      	NOP
0x12A6	0x0000      	NOP
;T_RTCDS3231_1.c,268 :: 		}
L_main86:
;T_RTCDS3231_1.c,269 :: 		if(!PORTB.F5){                             // If RB3 button is pressed
0x12A8	0xBA81      	BTFSC       PORTB, 5 
0x12AA	0xD107      	BRA         L_main97
;T_RTCDS3231_1.c,270 :: 		while(!PORTB.F5);                        // Wait until button RB3 released
L_main98:
0x12AC	0xBA81      	BTFSC       PORTB, 5 
0x12AE	0xD001      	BRA         L_main99
0x12B0	0xD7FD      	BRA         L_main98
L_main99:
;T_RTCDS3231_1.c,271 :: 		i = 5;
0x12B2	0x0E05      	MOVLW       5
0x12B4	0x0100      	MOVLB       0
0x12B6	0x6FD6      	MOVWF       _i, 1
;T_RTCDS3231_1.c,272 :: 		alarm1_hour   = edit(alarm1_hour, 5, 3);
0x12B8	0xF0DAC0A3  	MOVFF       _alarm1_hour, FARG_edit_parameter
0x12BC	0x0E05      	MOVLW       5
0x12BE	0x6FDB      	MOVWF       FARG_edit_x, 1
0x12C0	0x0E03      	MOVLW       3
0x12C2	0x6FDC      	MOVWF       FARG_edit_y, 1
0x12C4	0xDD67      	RCALL       _edit
0x12C6	0xF0A3C000  	MOVFF       R0, _alarm1_hour
;T_RTCDS3231_1.c,273 :: 		alarm1_minute = edit(alarm1_minute, 8, 3);
0x12CA	0xF0DAC0A2  	MOVFF       _alarm1_minute, FARG_edit_parameter
0x12CE	0x0E08      	MOVLW       8
0x12D0	0x6FDB      	MOVWF       FARG_edit_x, 1
0x12D2	0x0E03      	MOVLW       3
0x12D4	0x6FDC      	MOVWF       FARG_edit_y, 1
0x12D6	0xDD5E      	RCALL       _edit
0x12D8	0xF0A2C000  	MOVFF       R0, _alarm1_minute
;T_RTCDS3231_1.c,274 :: 		alarm1_status = edit(alarm1_status, 18, 3);
0x12DC	0x0E00      	MOVLW       0
0x12DE	0xB1A1      	BTFSC       _alarm1_status, BitPos(_alarm1_status+0), 1
0x12E0	0x0E01      	MOVLW       1
0x12E2	0x6FDA      	MOVWF       FARG_edit_parameter, 1
0x12E4	0x0E12      	MOVLW       18
0x12E6	0x6FDB      	MOVWF       FARG_edit_x, 1
0x12E8	0x0E03      	MOVLW       3
0x12EA	0x6FDC      	MOVWF       FARG_edit_y, 1
0x12EC	0xDD53      	RCALL       _edit
0x12EE	0xB000      	BTFSC       R0, 0 
0x12F0	0xD002      	BRA         L__main138
0x12F2	0x91A1      	BCF         _alarm1_status, BitPos(_alarm1_status+0), 1
0x12F4	0xD001      	BRA         L__main139
L__main138:
0x12F6	0x81A1      	BSF         _alarm1_status, BitPos(_alarm1_status+0), 1
L__main139:
;T_RTCDS3231_1.c,275 :: 		i = 5;
0x12F8	0x0E05      	MOVLW       5
0x12FA	0x6FD6      	MOVWF       _i, 1
;T_RTCDS3231_1.c,276 :: 		alarm2_hour   = edit(alarm2_hour, 5, 4);
0x12FC	0xF0DAC0A0  	MOVFF       _alarm2_hour, FARG_edit_parameter
0x1300	0x0E05      	MOVLW       5
0x1302	0x6FDB      	MOVWF       FARG_edit_x, 1
0x1304	0x0E04      	MOVLW       4
0x1306	0x6FDC      	MOVWF       FARG_edit_y, 1
0x1308	0xDD45      	RCALL       _edit
0x130A	0xF0A0C000  	MOVFF       R0, _alarm2_hour
;T_RTCDS3231_1.c,277 :: 		alarm2_minute = edit(alarm2_minute, 8, 4);
0x130E	0xF0DAC09F  	MOVFF       _alarm2_minute, FARG_edit_parameter
0x1312	0x0E08      	MOVLW       8
0x1314	0x6FDB      	MOVWF       FARG_edit_x, 1
0x1316	0x0E04      	MOVLW       4
0x1318	0x6FDC      	MOVWF       FARG_edit_y, 1
0x131A	0xDD3C      	RCALL       _edit
0x131C	0xF09FC000  	MOVFF       R0, _alarm2_minute
;T_RTCDS3231_1.c,278 :: 		alarm2_status = edit(alarm2_status, 18, 4);
0x1320	0x0E00      	MOVLW       0
0x1322	0xB3A1      	BTFSC       _alarm2_status, BitPos(_alarm2_status+0), 1
0x1324	0x0E01      	MOVLW       1
0x1326	0x6FDA      	MOVWF       FARG_edit_parameter, 1
0x1328	0x0E12      	MOVLW       18
0x132A	0x6FDB      	MOVWF       FARG_edit_x, 1
0x132C	0x0E04      	MOVLW       4
0x132E	0x6FDC      	MOVWF       FARG_edit_y, 1
0x1330	0xDD31      	RCALL       _edit
0x1332	0xB000      	BTFSC       R0, 0 
0x1334	0xD002      	BRA         L__main140
0x1336	0x93A1      	BCF         _alarm2_status, BitPos(_alarm2_status+0), 1
0x1338	0xD001      	BRA         L__main141
L__main140:
0x133A	0x83A1      	BSF         _alarm2_status, BitPos(_alarm2_status+0), 1
L__main141:
;T_RTCDS3231_1.c,279 :: 		alarm1_minute = ((alarm1_minute / 10) << 4) + (alarm1_minute % 10);
0x133C	0x0E0A      	MOVLW       10
0x133E	0x6E04      	MOVWF       R4 
0x1340	0xF000C0A2  	MOVFF       _alarm1_minute, R0
0x1344	0xF001EC3E  	CALL        _Div_8X8_U, 0
0x1348	0xF0D8C000  	MOVFF       R0, FLOC__main
0x134C	0x37D8      	RLCF        FLOC__main, 1, 1
0x134E	0x91D8      	BCF         FLOC__main, 0, 1
0x1350	0x37D8      	RLCF        FLOC__main, 1, 1
0x1352	0x91D8      	BCF         FLOC__main, 0, 1
0x1354	0x37D8      	RLCF        FLOC__main, 1, 1
0x1356	0x91D8      	BCF         FLOC__main, 0, 1
0x1358	0x37D8      	RLCF        FLOC__main, 1, 1
0x135A	0x91D8      	BCF         FLOC__main, 0, 1
0x135C	0x0E0A      	MOVLW       10
0x135E	0x6E04      	MOVWF       R4 
0x1360	0xF000C0A2  	MOVFF       _alarm1_minute, R0
0x1364	0xF001EC3E  	CALL        _Div_8X8_U, 0
0x1368	0xF000C008  	MOVFF       R8, R0
0x136C	0x5000      	MOVF        R0, 0 
0x136E	0x25D8      	ADDWF       FLOC__main, 0, 1
0x1370	0x6FA2      	MOVWF       _alarm1_minute, 1
;T_RTCDS3231_1.c,280 :: 		alarm1_hour   = ((alarm1_hour / 10) << 4) + (alarm1_hour % 10);
0x1372	0x0E0A      	MOVLW       10
0x1374	0x6E04      	MOVWF       R4 
0x1376	0xF000C0A3  	MOVFF       _alarm1_hour, R0
0x137A	0xF001EC3E  	CALL        _Div_8X8_U, 0
0x137E	0xF0D8C000  	MOVFF       R0, FLOC__main
0x1382	0x37D8      	RLCF        FLOC__main, 1, 1
0x1384	0x91D8      	BCF         FLOC__main, 0, 1
0x1386	0x37D8      	RLCF        FLOC__main, 1, 1
0x1388	0x91D8      	BCF         FLOC__main, 0, 1
0x138A	0x37D8      	RLCF        FLOC__main, 1, 1
0x138C	0x91D8      	BCF         FLOC__main, 0, 1
0x138E	0x37D8      	RLCF        FLOC__main, 1, 1
0x1390	0x91D8      	BCF         FLOC__main, 0, 1
0x1392	0x0E0A      	MOVLW       10
0x1394	0x6E04      	MOVWF       R4 
0x1396	0xF000C0A3  	MOVFF       _alarm1_hour, R0
0x139A	0xF001EC3E  	CALL        _Div_8X8_U, 0
0x139E	0xF000C008  	MOVFF       R8, R0
0x13A2	0x5000      	MOVF        R0, 0 
0x13A4	0x25D8      	ADDWF       FLOC__main, 0, 1
0x13A6	0x6FA3      	MOVWF       _alarm1_hour, 1
;T_RTCDS3231_1.c,281 :: 		alarm2_minute = ((alarm2_minute / 10) << 4) + (alarm2_minute % 10);
0x13A8	0x0E0A      	MOVLW       10
0x13AA	0x6E04      	MOVWF       R4 
0x13AC	0xF000C09F  	MOVFF       _alarm2_minute, R0
0x13B0	0xF001EC3E  	CALL        _Div_8X8_U, 0
0x13B4	0xF0D8C000  	MOVFF       R0, FLOC__main
0x13B8	0x37D8      	RLCF        FLOC__main, 1, 1
0x13BA	0x91D8      	BCF         FLOC__main, 0, 1
0x13BC	0x37D8      	RLCF        FLOC__main, 1, 1
0x13BE	0x91D8      	BCF         FLOC__main, 0, 1
0x13C0	0x37D8      	RLCF        FLOC__main, 1, 1
0x13C2	0x91D8      	BCF         FLOC__main, 0, 1
0x13C4	0x37D8      	RLCF        FLOC__main, 1, 1
0x13C6	0x91D8      	BCF         FLOC__main, 0, 1
0x13C8	0x0E0A      	MOVLW       10
0x13CA	0x6E04      	MOVWF       R4 
0x13CC	0xF000C09F  	MOVFF       _alarm2_minute, R0
0x13D0	0xF001EC3E  	CALL        _Div_8X8_U, 0
0x13D4	0xF000C008  	MOVFF       R8, R0
0x13D8	0x5000      	MOVF        R0, 0 
0x13DA	0x25D8      	ADDWF       FLOC__main, 0, 1
0x13DC	0x6F9F      	MOVWF       _alarm2_minute, 1
;T_RTCDS3231_1.c,282 :: 		alarm2_hour   = ((alarm2_hour / 10) << 4) + (alarm2_hour % 10);
0x13DE	0x0E0A      	MOVLW       10
0x13E0	0x6E04      	MOVWF       R4 
0x13E2	0xF000C0A0  	MOVFF       _alarm2_hour, R0
0x13E6	0xF001EC3E  	CALL        _Div_8X8_U, 0
0x13EA	0xF0D8C000  	MOVFF       R0, FLOC__main
0x13EE	0x37D8      	RLCF        FLOC__main, 1, 1
0x13F0	0x91D8      	BCF         FLOC__main, 0, 1
0x13F2	0x37D8      	RLCF        FLOC__main, 1, 1
0x13F4	0x91D8      	BCF         FLOC__main, 0, 1
0x13F6	0x37D8      	RLCF        FLOC__main, 1, 1
0x13F8	0x91D8      	BCF         FLOC__main, 0, 1
0x13FA	0x37D8      	RLCF        FLOC__main, 1, 1
0x13FC	0x91D8      	BCF         FLOC__main, 0, 1
0x13FE	0x0E0A      	MOVLW       10
0x1400	0x6E04      	MOVWF       R4 
0x1402	0xF000C0A0  	MOVFF       _alarm2_hour, R0
0x1406	0xF001EC3E  	CALL        _Div_8X8_U, 0
0x140A	0xF000C008  	MOVFF       R8, R0
0x140E	0x5000      	MOVF        R0, 0 
0x1410	0x25D8      	ADDWF       FLOC__main, 0, 1
0x1412	0x6FA0      	MOVWF       _alarm2_hour, 1
;T_RTCDS3231_1.c,284 :: 		I2C1_Start();                            // Start I2C
0x1414	0xF000ECF6  	CALL        _I2C1_Start, 0
;T_RTCDS3231_1.c,285 :: 		I2C1_Wr(0xD0);                           // DS3231 address
0x1418	0x0ED0      	MOVLW       208
0x141A	0x0100      	MOVLB       0
0x141C	0x6FE7      	MOVWF       FARG_I2C1_Wr_data_, 1
0x141E	0xF001ECAE  	CALL        _I2C1_Wr, 0
;T_RTCDS3231_1.c,286 :: 		I2C1_Wr(7);                              // Send register address (alarm1 seconds)
0x1422	0x0E07      	MOVLW       7
0x1424	0x0100      	MOVLB       0
0x1426	0x6FE7      	MOVWF       FARG_I2C1_Wr_data_, 1
0x1428	0xF001ECAE  	CALL        _I2C1_Wr, 0
;T_RTCDS3231_1.c,287 :: 		I2C1_Wr(0);                              // Write 0 to alarm1 seconds
0x142C	0x0100      	MOVLB       0
0x142E	0x6BE7      	CLRF        FARG_I2C1_Wr_data_, 1
0x1430	0xF001ECAE  	CALL        _I2C1_Wr, 0
;T_RTCDS3231_1.c,288 :: 		I2C1_Wr(alarm1_minute);                  // Write alarm1 minutes value to DS3231
0x1434	0xF0E7C0A2  	MOVFF       _alarm1_minute, FARG_I2C1_Wr_data_
0x1438	0xF001ECAE  	CALL        _I2C1_Wr, 0
;T_RTCDS3231_1.c,289 :: 		I2C1_Wr(alarm1_hour);                    // Write alarm1 hours value to DS3231
0x143C	0xF0E7C0A3  	MOVFF       _alarm1_hour, FARG_I2C1_Wr_data_
0x1440	0xF001ECAE  	CALL        _I2C1_Wr, 0
;T_RTCDS3231_1.c,290 :: 		I2C1_Wr(0x80);                           // Alarm1 when hours, minutes, and seconds match
0x1444	0x0E80      	MOVLW       128
0x1446	0x0100      	MOVLB       0
0x1448	0x6FE7      	MOVWF       FARG_I2C1_Wr_data_, 1
0x144A	0xF001ECAE  	CALL        _I2C1_Wr, 0
;T_RTCDS3231_1.c,291 :: 		I2C1_Wr(alarm2_minute);                  // Write alarm2 minutes value to DS3231
0x144E	0xF0E7C09F  	MOVFF       _alarm2_minute, FARG_I2C1_Wr_data_
0x1452	0xF001ECAE  	CALL        _I2C1_Wr, 0
;T_RTCDS3231_1.c,292 :: 		I2C1_Wr(alarm2_hour);                    // Write alarm2 hours value to DS3231
0x1456	0xF0E7C0A0  	MOVFF       _alarm2_hour, FARG_I2C1_Wr_data_
0x145A	0xF001ECAE  	CALL        _I2C1_Wr, 0
;T_RTCDS3231_1.c,293 :: 		I2C1_Wr(0x80);                           // Alarm2 when hours and minutes match
0x145E	0x0E80      	MOVLW       128
0x1460	0x0100      	MOVLB       0
0x1462	0x6FE7      	MOVWF       FARG_I2C1_Wr_data_, 1
0x1464	0xF001ECAE  	CALL        _I2C1_Wr, 0
;T_RTCDS3231_1.c,294 :: 		I2C1_Wr(4 | alarm1_status | (alarm2_status << 1));      // Write data to DS3231 control register (enable interrupt when alarm)
0x1468	0x6A00      	CLRF        R0 
0x146A	0x0100      	MOVLB       0
0x146C	0xB1A1      	BTFSC       _alarm1_status, BitPos(_alarm1_status+0), 1
0x146E	0x2A00      	INCF        R0, 1 
0x1470	0x0E04      	MOVLW       4
0x1472	0x1000      	IORWF       R0, 0 
0x1474	0x6FE7      	MOVWF       FARG_I2C1_Wr_data_, 1
0x1476	0x6A03      	CLRF        R3 
0x1478	0xB3A1      	BTFSC       _alarm2_status, BitPos(_alarm2_status+0), 1
0x147A	0x2A03      	INCF        R3, 1 
0x147C	0xF000C003  	MOVFF       R3, R0
0x1480	0x0E00      	MOVLW       0
0x1482	0x6E01      	MOVWF       R1 
0x1484	0x3600      	RLCF        R0, 1 
0x1486	0x9000      	BCF         R0, 0 
0x1488	0x3601      	RLCF        R1, 1 
0x148A	0x5000      	MOVF        R0, 0 
0x148C	0x13E7      	IORWF       FARG_I2C1_Wr_data_, 1, 1
0x148E	0xF001ECAE  	CALL        _I2C1_Wr, 0
;T_RTCDS3231_1.c,295 :: 		I2C1_Wr(0);                              // Clear alarm flag bits
0x1492	0x0100      	MOVLB       0
0x1494	0x6BE7      	CLRF        FARG_I2C1_Wr_data_, 1
0x1496	0xF001ECAE  	CALL        _I2C1_Wr, 0
;T_RTCDS3231_1.c,296 :: 		I2C1_Stop();                             // Stop I2C
0x149A	0xF000ECF4  	CALL        _I2C1_Stop, 0
;T_RTCDS3231_1.c,297 :: 		delay_ms(200);                           // Wait 200ms
0x149E	0x0E06      	MOVLW       6
0x14A0	0x6E0B      	MOVWF       R11, 0
0x14A2	0x0E13      	MOVLW       19
0x14A4	0x6E0C      	MOVWF       R12, 0
0x14A6	0x0EAD      	MOVLW       173
0x14A8	0x6E0D      	MOVWF       R13, 0
L_main100:
0x14AA	0x2E0D      	DECFSZ      R13, 1, 0
0x14AC	0xD7FE      	BRA         L_main100
0x14AE	0x2E0C      	DECFSZ      R12, 1, 0
0x14B0	0xD7FC      	BRA         L_main100
0x14B2	0x2E0B      	DECFSZ      R11, 1, 0
0x14B4	0xD7FA      	BRA         L_main100
0x14B6	0x0000      	NOP
0x14B8	0x0000      	NOP
;T_RTCDS3231_1.c,298 :: 		}
L_main97:
;T_RTCDS3231_1.c,299 :: 		if(!PORTB.F4 && PORTB.F6){                 // When button B2 pressed with alarm (Reset and turn OFF the alarm)
0x14BA	0xB881      	BTFSC       PORTB, 4 
0x14BC	0xD042      	BRA         L_main103
0x14BE	0xAC81      	BTFSS       PORTB, 6 
0x14C0	0xD040      	BRA         L_main103
L__main122:
;T_RTCDS3231_1.c,300 :: 		PORTB.F6 = 0;                            // Turn OFF the alarm indicator
0x14C2	0x9C81      	BCF         PORTB, 6 
;T_RTCDS3231_1.c,301 :: 		I2C1_Start();                            // Start I2C
0x14C4	0xF000ECF6  	CALL        _I2C1_Start, 0
;T_RTCDS3231_1.c,302 :: 		I2C1_Wr(0xD0);                           // DS3231 address
0x14C8	0x0ED0      	MOVLW       208
0x14CA	0x0100      	MOVLB       0
0x14CC	0x6FE7      	MOVWF       FARG_I2C1_Wr_data_, 1
0x14CE	0xF001ECAE  	CALL        _I2C1_Wr, 0
;T_RTCDS3231_1.c,303 :: 		I2C1_Wr(0x0E);                           // Send register address (control register)
0x14D2	0x0E0E      	MOVLW       14
0x14D4	0x0100      	MOVLB       0
0x14D6	0x6FE7      	MOVWF       FARG_I2C1_Wr_data_, 1
0x14D8	0xF001ECAE  	CALL        _I2C1_Wr, 0
;T_RTCDS3231_1.c,305 :: 		I2C1_Wr(4 | (!(status_reg & 1) & alarm1_status) | ((!((status_reg >> 1) & 1) & alarm2_status) << 1));
0x14DC	0x0E01      	MOVLW       1
0x14DE	0x0100      	MOVLB       0
0x14E0	0x159E      	ANDWF       _status_reg, 0, 1
0x14E2	0x6E00      	MOVWF       R0 
0x14E4	0x5200      	MOVF        R0, 1 
0x14E6	0x0E01      	MOVLW       1
0x14E8	0xA4D8      	BTFSS       STATUS, 2 
0x14EA	0x0E00      	MOVLW       0
0x14EC	0x6E01      	MOVWF       R1 
0x14EE	0x6A00      	CLRF        R0 
0x14F0	0xB1A1      	BTFSC       _alarm1_status, BitPos(_alarm1_status+0), 1
0x14F2	0x2A00      	INCF        R0, 1 
0x14F4	0x5001      	MOVF        R1, 0 
0x14F6	0x1600      	ANDWF       R0, 1 
0x14F8	0x0E04      	MOVLW       4
0x14FA	0x1000      	IORWF       R0, 0 
0x14FC	0x6FE7      	MOVWF       FARG_I2C1_Wr_data_, 1
0x14FE	0xF000C09E  	MOVFF       _status_reg, R0
0x1502	0x3200      	RRCF        R0, 1 
0x1504	0x9E00      	BCF         R0, 7 
0x1506	0x0E01      	MOVLW       1
0x1508	0x1600      	ANDWF       R0, 1 
0x150A	0x5200      	MOVF        R0, 1 
0x150C	0x0E01      	MOVLW       1
0x150E	0xA4D8      	BTFSS       STATUS, 2 
0x1510	0x0E00      	MOVLW       0
0x1512	0x6E01      	MOVWF       R1 
0x1514	0x6A00      	CLRF        R0 
0x1516	0xB3A1      	BTFSC       _alarm2_status, BitPos(_alarm2_status+0), 1
0x1518	0x2A00      	INCF        R0, 1 
0x151A	0x5000      	MOVF        R0, 0 
0x151C	0x1401      	ANDWF       R1, 0 
0x151E	0x6E03      	MOVWF       R3 
0x1520	0xF000C003  	MOVFF       R3, R0
0x1524	0x0E00      	MOVLW       0
0x1526	0x6E01      	MOVWF       R1 
0x1528	0x3600      	RLCF        R0, 1 
0x152A	0x9000      	BCF         R0, 0 
0x152C	0x3601      	RLCF        R1, 1 
0x152E	0x5000      	MOVF        R0, 0 
0x1530	0x13E7      	IORWF       FARG_I2C1_Wr_data_, 1, 1
0x1532	0xF001ECAE  	CALL        _I2C1_Wr, 0
;T_RTCDS3231_1.c,306 :: 		I2C1_Wr(0);                              // Clear alarm flag bits
0x1536	0x0100      	MOVLB       0
0x1538	0x6BE7      	CLRF        FARG_I2C1_Wr_data_, 1
0x153A	0xF001ECAE  	CALL        _I2C1_Wr, 0
;T_RTCDS3231_1.c,307 :: 		I2C1_Stop();                             // Stop I2C
0x153E	0xF000ECF4  	CALL        _I2C1_Stop, 0
;T_RTCDS3231_1.c,308 :: 		}
L_main103:
;T_RTCDS3231_1.c,309 :: 		DS3231_read();                             // Read time and calendar parameters from DS3231 RTC
0x1542	0xF002ECD3  	CALL        _DS3231_read, 0
;T_RTCDS3231_1.c,310 :: 		alarms_read_display();                     // Read and display alarms parameters
0x1546	0xF005EC24  	CALL        _alarms_read_display, 0
;T_RTCDS3231_1.c,311 :: 		DS3231_display();                          // Display time & calendar
0x154A	0xF003EC71  	CALL        _DS3231_display, 0
;T_RTCDS3231_1.c,312 :: 		delay_ms(50);                              // Wait 50ms
0x154E	0x0E02      	MOVLW       2
0x1550	0x6E0B      	MOVWF       R11, 0
0x1552	0x0E45      	MOVLW       69
0x1554	0x6E0C      	MOVWF       R12, 0
0x1556	0x0EA9      	MOVLW       169
0x1558	0x6E0D      	MOVWF       R13, 0
L_main104:
0x155A	0x2E0D      	DECFSZ      R13, 1, 0
0x155C	0xD7FE      	BRA         L_main104
0x155E	0x2E0C      	DECFSZ      R12, 1, 0
0x1560	0xD7FC      	BRA         L_main104
0x1562	0x2E0B      	DECFSZ      R11, 1, 0
0x1564	0xD7FA      	BRA         L_main104
0x1566	0x0000      	NOP
0x1568	0x0000      	NOP
;T_RTCDS3231_1.c,313 :: 		}
0x156A	0xD57C      	BRA         L_main84
;T_RTCDS3231_1.c,314 :: 		}
L_end_main:
0x156C	0xD7FF      	BRA         $+0
; end of _main
0x15F8	0xF015EE10  	LFSR        1, 21
0x15FC	0x0E89      	MOVLW       137
0x15FE	0x6E00      	MOVWF       R0 
0x1600	0x0E01      	MOVLW       1
0x1602	0x6E01      	MOVWF       R1 
0x1604	0x0E6E      	MOVLW       110
0x1606	0x6EF6      	MOVWF       4086 
0x1608	0x0E15      	MOVLW       21
0x160A	0x6EF7      	MOVWF       TBLPTRH 
0x160C	0x0E00      	MOVLW       0
0x160E	0x6EF8      	MOVWF       TBLPTRU 
0x1610	0xF005EC1C  	CALL        2616, 0
0x1614	0x0012      	RETURN      0
;T_RTCDS3231_1.c,0 :: ?ICS_alarm1
0x156E	0x3141 ;?ICS_alarm1+0
0x1570	0x203A ;?ICS_alarm1+2
0x1572	0x2020 ;?ICS_alarm1+4
0x1574	0x203A ;?ICS_alarm1+6
0x1576	0x3A20 ;?ICS_alarm1+8
0x1578	0x3030 ;?ICS_alarm1+10
0x157A	0x00 ;?ICS_alarm1+12
; end of ?ICS_alarm1
;T_RTCDS3231_1.c,0 :: ?ICS_alarm2
0x157B	0x3241 ;?ICS_alarm2+0
0x157D	0x203A ;?ICS_alarm2+2
0x157F	0x2020 ;?ICS_alarm2+4
0x1581	0x203A ;?ICS_alarm2+6
0x1583	0x3A20 ;?ICS_alarm2+8
0x1585	0x3030 ;?ICS_alarm2+10
0x1587	0x00 ;?ICS_alarm2+12
; end of ?ICS_alarm2
;T_RTCDS3231_1.c,0 :: ?ICS?lstr2_T_RTCDS3231_1
0x1588	0x464F ;?ICS?lstr2_T_RTCDS3231_1+0
0x158A	0x0046 ;?ICS?lstr2_T_RTCDS3231_1+2
; end of ?ICS?lstr2_T_RTCDS3231_1
;T_RTCDS3231_1.c,0 :: ?ICS?lstr3_T_RTCDS3231_1
0x158C	0x4E4F ;?ICS?lstr3_T_RTCDS3231_1+0
0x158E	0x0020 ;?ICS?lstr3_T_RTCDS3231_1+2
; end of ?ICS?lstr3_T_RTCDS3231_1
;T_RTCDS3231_1.c,0 :: ?ICS?lstr1_T_RTCDS3231_1
0x1590	0x4E4F ;?ICS?lstr1_T_RTCDS3231_1+0
0x1592	0x0020 ;?ICS?lstr1_T_RTCDS3231_1+2
; end of ?ICS?lstr1_T_RTCDS3231_1
;T_RTCDS3231_1.c,0 :: ?ICS_temperature
0x1594	0x3A54 ;?ICS_temperature+0
0x1596	0x2020 ;?ICS_temperature+2
0x1598	0x2E20 ;?ICS_temperature+4
0x159A	0x2020 ;?ICS_temperature+6
0x159C	0x4320 ;?ICS_temperature+8
0x159E	0x00 ;?ICS_temperature+10
; end of ?ICS_temperature
;T_RTCDS3231_1.c,0 :: ?ICS?lstr8_T_RTCDS3231_1
0x159F	0x6557 ;?ICS?lstr8_T_RTCDS3231_1+0
0x15A1	0x0064 ;?ICS?lstr8_T_RTCDS3231_1+2
; end of ?ICS?lstr8_T_RTCDS3231_1
;T_RTCDS3231_1.c,0 :: ?ICS?lstr9_T_RTCDS3231_1
0x15A3	0x6854 ;?ICS?lstr9_T_RTCDS3231_1+0
0x15A5	0x0075 ;?ICS?lstr9_T_RTCDS3231_1+2
; end of ?ICS?lstr9_T_RTCDS3231_1
;T_RTCDS3231_1.c,0 :: ?ICS?lstr7_T_RTCDS3231_1
0x15A7	0x7554 ;?ICS?lstr7_T_RTCDS3231_1+0
0x15A9	0x0065 ;?ICS?lstr7_T_RTCDS3231_1+2
; end of ?ICS?lstr7_T_RTCDS3231_1
;T_RTCDS3231_1.c,0 :: ?ICS?lstr5_T_RTCDS3231_1
0x15AB	0x7553 ;?ICS?lstr5_T_RTCDS3231_1+0
0x15AD	0x006E ;?ICS?lstr5_T_RTCDS3231_1+2
; end of ?ICS?lstr5_T_RTCDS3231_1
;T_RTCDS3231_1.c,0 :: ?ICS?lstr6_T_RTCDS3231_1
0x15AF	0x6F4D ;?ICS?lstr6_T_RTCDS3231_1+0
0x15B1	0x006E ;?ICS?lstr6_T_RTCDS3231_1+2
; end of ?ICS?lstr6_T_RTCDS3231_1
;T_RTCDS3231_1.c,0 :: ?ICS?lstr10_T_RTCDS3231_1
0x15B3	0x7246 ;?ICS?lstr10_T_RTCDS3231_1+0
0x15B5	0x0069 ;?ICS?lstr10_T_RTCDS3231_1+2
; end of ?ICS?lstr10_T_RTCDS3231_1
;T_RTCDS3231_1.c,0 :: ?ICS_calendar
0x15B7	0x2020 ;?ICS_calendar+0
0x15B9	0x202F ;?ICS_calendar+2
0x15BB	0x2F20 ;?ICS_calendar+4
0x15BD	0x3032 ;?ICS_calendar+6
0x15BF	0x2020 ;?ICS_calendar+8
0x15C1	0x00 ;?ICS_calendar+10
; end of ?ICS_calendar
;T_RTCDS3231_1.c,0 :: ?ICS?lstr11_T_RTCDS3231_1
0x15C2	0x6153 ;?ICS?lstr11_T_RTCDS3231_1+0
0x15C4	0x0074 ;?ICS?lstr11_T_RTCDS3231_1+2
; end of ?ICS?lstr11_T_RTCDS3231_1
;T_RTCDS3231_1.c,0 :: ?ICS_time
0x15C6	0x2020 ;?ICS_time+0
0x15C8	0x203A ;?ICS_time+2
0x15CA	0x3A20 ;?ICS_time+4
0x15CC	0x2020 ;?ICS_time+6
0x15CE	0x00 ;?ICS_time+8
; end of ?ICS_time
;T_RTCDS3231_1.c,0 :: ?ICS?lstr14_T_RTCDS3231_1
0x15CF	0x2020 ;?ICS?lstr14_T_RTCDS3231_1+0
0x15D1	0x00 ;?ICS?lstr14_T_RTCDS3231_1+2
; end of ?ICS?lstr14_T_RTCDS3231_1
;T_RTCDS3231_1.c,0 :: ?ICS?lstr15_T_RTCDS3231_1
0x15D2	0x0020 ;?ICS?lstr15_T_RTCDS3231_1+0
; end of ?ICS?lstr15_T_RTCDS3231_1
;T_RTCDS3231_1.c,0 :: ?ICS?lstr13_T_RTCDS3231_1
0x15D4	0x464F ;?ICS?lstr13_T_RTCDS3231_1+0
0x15D6	0x0046 ;?ICS?lstr13_T_RTCDS3231_1+2
; end of ?ICS?lstr13_T_RTCDS3231_1
;T_RTCDS3231_1.c,0 :: ?ICS?lstr4_T_RTCDS3231_1
0x15D8	0x464F ;?ICS?lstr4_T_RTCDS3231_1+0
0x15DA	0x0046 ;?ICS?lstr4_T_RTCDS3231_1+2
; end of ?ICS?lstr4_T_RTCDS3231_1
;T_RTCDS3231_1.c,0 :: ?ICS?lstr12_T_RTCDS3231_1
0x15DC	0x4E4F ;?ICS?lstr12_T_RTCDS3231_1+0
0x15DE	0x0020 ;?ICS?lstr12_T_RTCDS3231_1+2
; end of ?ICS?lstr12_T_RTCDS3231_1
;T_RTCDS3231_1.c,0 :: ?ICS?lstr16_T_RTCDS3231_1
0x15E0	0x4E4F ;?ICS?lstr16_T_RTCDS3231_1+0
0x15E2	0x0020 ;?ICS?lstr16_T_RTCDS3231_1+2
; end of ?ICS?lstr16_T_RTCDS3231_1
;__Lib_I2C_b10.c,0 :: ?ICS__Lib_I2C_b10__I2C1_TIMEOUT
0x15E4	0x0000 ;?ICS__Lib_I2C_b10__I2C1_TIMEOUT+0
0x15E6	0x0000 ;?ICS__Lib_I2C_b10__I2C1_TIMEOUT+2
; end of ?ICS__Lib_I2C_b10__I2C1_TIMEOUT
;T_RTCDS3231_1.c,0 :: ?ICS?lstr19_T_RTCDS3231_1
0x15E8	0x2020 ;?ICS?lstr19_T_RTCDS3231_1+0
0x15EA	0x0020 ;?ICS?lstr19_T_RTCDS3231_1+2
; end of ?ICS?lstr19_T_RTCDS3231_1
;T_RTCDS3231_1.c,0 :: ?ICS?lstr17_T_RTCDS3231_1
0x15EC	0x464F ;?ICS?lstr17_T_RTCDS3231_1+0
0x15EE	0x0046 ;?ICS?lstr17_T_RTCDS3231_1+2
; end of ?ICS?lstr17_T_RTCDS3231_1
;T_RTCDS3231_1.c,0 :: ?ICS?lstr18_T_RTCDS3231_1
0x15F0	0x6E69 ;?ICS?lstr18_T_RTCDS3231_1+0
0x15F2	0x6369 ;?ICS?lstr18_T_RTCDS3231_1+2
0x15F4	0x6F69 ;?ICS?lstr18_T_RTCDS3231_1+4
0x15F6	0x00 ;?ICS?lstr18_T_RTCDS3231_1+6
; end of ?ICS?lstr18_T_RTCDS3231_1
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0008       [2]    _Interrupt
0x000A      [12]    _Delay_1us
0x0016      [22]    _Delay_5500us
0x002C      [10]    _Delay_50us
0x0036      [14]    _UART1_Write
0x0044      [18]    _SPI1_Write
0x0056     [126]    _Lcd_Cmd
0x00D4      [14]    _Lcd_Chr_CP
0x00E2      [24]    _____DoIFC
0x00FA      [26]    _I2C1_Is_Idle
0x0114     [126]    _Lcd_Out
0x0192      [86]    _I2C1_Repeated_Start
0x01E8       [4]    _I2C1_Stop
0x01EC     [144]    _I2C1_Start
0x027C      [30]    _Div_8X8_U
0x029A     [194]    _I2C1_Rd
0x035C     [194]    _I2C1_Wr
0x041E     [186]    _day_display
0x04D8      [60]    _blink
0x0514      [52]    _UART1_Write_Text
0x0548      [94]    _Lcd_Chr
0x05A6     [112]    _DS3231_read
0x0616      [46]    _abs
0x0644     [158]    _Div_8X8_S
0x06E2     [522]    _DS3231_display
0x08EC      [14]    _I2C_Restart
0x08FA     [198]    _Lcd_Init
0x09C0     [120]    _I2C1_Init
0x0A38      [16]    ___CC2DW
0x0A48     [844]    _alarms_read_display
0x0D94     [520]    _edit
0x0F9C      [88]    _UART1_Init
0x0FF4    [1402]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    UART1_Init_tmp_L0
0x0000       [1]    SPI1_Write_tmp_L0
0x0000       [1]    R0
0x0000       [1]    EEPROM_Write_SaveINTCON_L0
0x0001       [1]    R1
0x0001       [1]    UART1_Read___tmp_UART1_Read_L0
0x0001       [1]    ispunct_rslt_L0
0x0002       [1]    R2
0x0002       [2]    memset_pp_L0
0x0002       [2]    memcpy_dd_L0
0x0002       [2]    memchr_s_L0
0x0002       [2]    strlen_cp_L0
0x0003       [2]    memmove_tt_L0
0x0003       [1]    R3
0x0003       [2]    Ltrim_original_L0
0x0004       [2]    strcat_cp_L0
0x0004       [2]    strncat_cp_L0
0x0004       [2]    strcpy_cp_L0
0x0004       [2]    strncpy_cp_L0
0x0004       [2]    memcpy_ss_L0
0x0004       [1]    R4
0x0004       [2]    frexp_pom_L0
0x0005       [1]    R5
0x0005       [2]    LongIntToHex_input_half_L0
0x0005       [2]    Ltrim_p_L0
0x0005       [2]    LongWordToHex_input_half_L0
0x0005       [2]    memmove_ff_L0
0x0006       [1]    R6
0x0007       [1]    R7
0x0008       [1]    R8
0x0009       [1]    R9
0x000A       [1]    R10
0x000B       [1]    R11
0x000C       [1]    R12
0x000D       [1]    R13
0x000E       [1]    R14
0x000F       [1]    R15
0x0010       [1]    R16
0x0011       [1]    R17
0x0012       [1]    R18
0x0013       [1]    R19
0x0014       [1]    R20
0x0015      [13]    _alarm1
0x0022      [13]    _alarm2
0x002F       [4]    ?lstr2_T_RTCDS3231_1
0x0033       [4]    ?lstr3_T_RTCDS3231_1
0x0037       [4]    ?lstr1_T_RTCDS3231_1
0x003B      [11]    _temperature
0x0046       [4]    ?lstr8_T_RTCDS3231_1
0x004A       [4]    ?lstr9_T_RTCDS3231_1
0x004E       [4]    ?lstr7_T_RTCDS3231_1
0x0052       [4]    ?lstr5_T_RTCDS3231_1
0x0056       [4]    ?lstr6_T_RTCDS3231_1
0x005A       [4]    ?lstr10_T_RTCDS3231_1
0x005E      [11]    _calendar
0x0069       [4]    ?lstr11_T_RTCDS3231_1
0x006D       [9]    _time
0x0076       [3]    ?lstr14_T_RTCDS3231_1
0x0079       [2]    ?lstr15_T_RTCDS3231_1
0x007B       [4]    ?lstr13_T_RTCDS3231_1
0x007F       [4]    ?lstr4_T_RTCDS3231_1
0x0083       [4]    ?lstr12_T_RTCDS3231_1
0x0087       [4]    ?lstr16_T_RTCDS3231_1
0x008B       [4]    __Lib_I2C_b10__I2C1_TIMEOUT
0x008F       [4]    ?lstr19_T_RTCDS3231_1
0x0093       [4]    ?lstr17_T_RTCDS3231_1
0x0097       [7]    ?lstr18_T_RTCDS3231_1
0x009E       [1]    _status_reg
0x009F       [1]    _alarm2_minute
0x00A0       [1]    _alarm2_hour
0x00A1       [0]    _alarm2_status
0x00A1       [0]    _alarm1_status
0x00A1       [0]    __Lib_Lcd_cmd_status
0x00A2       [1]    _alarm1_minute
0x00A3       [1]    _alarm1_hour
0x00A4       [4]    _I2C_Read_Ptr
0x00A8       [4]    _I2C_Write_Ptr
0x00AC       [4]    _I2C_Restart_Ptr
0x00B0       [4]    _I2C_Is_Idle_Ptr
0x00B4       [4]    _I2C_Start_Ptr
0x00B8       [4]    _I2C_Stop_Ptr
0x00BC       [4]    _UART_Rdy_Ptr
0x00C0       [4]    _UART_Tx_Idle_Ptr
0x00C4       [4]    _UART_Rd_Ptr
0x00C8       [4]    _UART_Wr_Ptr
0x00CC       [4]    _I2C1_Timeout_Ptr
0x00D0       [1]    _day
0x00D1       [1]    _date
0x00D2       [1]    _hour
0x00D3       [1]    _second
0x00D4       [1]    _minute
0x00D5       [1]    _month
0x00D6       [1]    _i
0x00D7       [1]    _year
0x00D8       [2]    FLOC__main
0x00DA       [1]    FARG_edit_parameter
0x00DA       [1]    alarms_read_display_control_reg_L0
0x00DA       [4]    FARG_I2C1_Init_clock
0x00DB       [1]    alarms_read_display_temperature_lsb_L0
0x00DB       [1]    FARG_edit_x
0x00DC       [1]    alarms_read_display_temperature_msb_L0
0x00DC       [1]    FARG_edit_y
0x00DD       [4]    FLOC__alarms_read_display
0x00E1       [1]    blink_j_L0
0x00E1       [2]    FARG_abs_a
0x00E1       [2]    FARG_UART1_Write_Text_uart_text
0x00E1       [1]    FARG_Lcd_Chr_row
0x00E1       [6]    FLOC__DS3231_display
0x00E2       [1]    FARG_Lcd_Chr_column
0x00E3       [1]    UART1_Write_Text_data__L0
0x00E3       [1]    FARG_Lcd_Chr_out_char
0x00E4       [1]    UART1_Write_Text_counter_L0
0x00E7       [1]    FARG_I2C1_Rd_ack
0x00E7       [1]    FARG_I2C1_Wr_data_
0x00E7       [2]    I2C1_Start_j_L0
0x00E8       [4]    I2C1_Wr_timeout_L0
0x00E8       [1]    I2C1_Rd_tmp_L0
0x00E9       [4]    I2C1_Rd_timeout_L0
0x00E9       [4]    I2C1_Start_timeout_L0
0x00ED       [1]    FARG_Lcd_Out_row
0x00ED       [4]    I2C1_Repeated_Start_timeout_L0
0x00EE       [1]    FARG_Lcd_Out_column
0x00EF       [2]    FARG_Lcd_Out_text
0x00F1       [1]    Lcd_Out_i_L0
0x00F2       [1]    FARG_Lcd_Chr_CP_out_char
0x00F3       [1]    FARG_Lcd_Cmd_out_char
0x00F3       [1]    FARG_SPI1_Write_data_
0x00F3       [1]    FARG_UART1_Write_data_
0x0F81       [1]    PORTB
0x0F83       [0]    RD7_bit
0x0F83       [0]    LCD_D4
0x0F83       [0]    LCD_D5
0x0F83       [0]    RD5_bit
0x0F83       [0]    RD4_bit
0x0F83       [0]    RD1_bit
0x0F83       [0]    RD0_bit
0x0F83       [0]    LCD_EN
0x0F83       [0]    LCD_RS
0x0F83       [0]    LCD_D6
0x0F83       [0]    LCD_D7
0x0F83       [0]    RD6_bit
0x0F8A       [0]    LATB1_bit
0x0F8A       [0]    LATB0_bit
0x0F93       [0]    TRISB1_bit
0x0F93       [0]    TRISB0_bit
0x0F93       [1]    TRISB
0x0F94       [0]    TRISC7_bit
0x0F94       [0]    TRISC6_bit
0x0F95       [0]    TRISD0_bit
0x0F95       [0]    TRISD7_bit
0x0F95       [0]    LCD_RS_Direction
0x0F95       [0]    TRISD6_bit
0x0F95       [0]    TRISD1_bit
0x0F95       [0]    TRISD5_bit
0x0F95       [0]    TRISD4_bit
0x0F95       [0]    LCD_EN_Direction
0x0F95       [0]    LCD_D7_Direction
0x0F95       [0]    LCD_D4_Direction
0x0F95       [0]    LCD_D5_Direction
0x0F95       [0]    LCD_D6_Direction
0x0F9E       [1]    PIR1
0x0FAB       [1]    RCSTA
0x0FAC       [1]    TXSTA
0x0FAD       [1]    TXREG
0x0FAE       [1]    RCREG
0x0FAF       [1]    SPBRG
0x0FB0       [1]    SPBRGH
0x0FB8       [1]    BAUDCON
0x0FC1       [1]    ADCON1
0x0FC5       [1]    SSPCON2
0x0FC6       [1]    SSPCON1
0x0FC7       [1]    SSPSTAT
0x0FC8       [1]    SSPADD
0x0FC9       [1]    SSPBUF
0x0FD8       [1]    STATUS
0x0FD9       [1]    FSR2L
0x0FDA       [1]    FSR2H
0x0FDE       [1]    POSTINC2
0x0FE0       [1]    BSR
0x0FE1       [2]    FSR1
0x0FE1       [1]    FSR1L
0x0FE2       [1]    FSR1H
0x0FE4       [1]    PREINC1
0x0FE6       [1]    POSTINC1
0x0FE7       [1]    INDF1
0x0FE8       [1]    WREG
0x0FE9       [1]    FSR0L
0x0FEA       [1]    FSR0H
0x0FEE       [1]    POSTINC0
0x0FF1       [1]    INTCON2
0x0FF2       [1]    INTCON
0x0FF3       [1]    PRODL
0x0FF4       [1]    PRODH
0x0FF5       [1]    TABLAT
0x0FF6       [1]    TBLPTRL
0x0FF7       [1]    TBLPTRH
0x0FF8       [1]    TBLPTRU
0x0FFD       [1]    TOSL
0x0FFE       [1]    TOSH
0x0FFF       [1]    TOSU
//** Constants locations ** 
//ADDRESS    SIZE    CONSTANT
//----------------------------------------------
0x156E      [13]    ?ICS_alarm1
0x157B      [13]    ?ICS_alarm2
0x1588       [4]    ?ICS?lstr2_T_RTCDS3231_1
0x158C       [4]    ?ICS?lstr3_T_RTCDS3231_1
0x1590       [4]    ?ICS?lstr1_T_RTCDS3231_1
0x1594      [11]    ?ICS_temperature
0x159F       [4]    ?ICS?lstr8_T_RTCDS3231_1
0x15A3       [4]    ?ICS?lstr9_T_RTCDS3231_1
0x15A7       [4]    ?ICS?lstr7_T_RTCDS3231_1
0x15AB       [4]    ?ICS?lstr5_T_RTCDS3231_1
0x15AF       [4]    ?ICS?lstr6_T_RTCDS3231_1
0x15B3       [4]    ?ICS?lstr10_T_RTCDS3231_1
0x15B7      [11]    ?ICS_calendar
0x15C2       [4]    ?ICS?lstr11_T_RTCDS3231_1
0x15C6       [9]    ?ICS_time
0x15CF       [3]    ?ICS?lstr14_T_RTCDS3231_1
0x15D2       [2]    ?ICS?lstr15_T_RTCDS3231_1
0x15D4       [4]    ?ICS?lstr13_T_RTCDS3231_1
0x15D8       [4]    ?ICS?lstr4_T_RTCDS3231_1
0x15DC       [4]    ?ICS?lstr12_T_RTCDS3231_1
0x15E0       [4]    ?ICS?lstr16_T_RTCDS3231_1
0x15E4       [4]    ?ICS__Lib_I2C_b10__I2C1_TIMEOUT
0x15E8       [4]    ?ICS?lstr19_T_RTCDS3231_1
0x15EC       [4]    ?ICS?lstr17_T_RTCDS3231_1
0x15F0       [7]    ?ICS?lstr18_T_RTCDS3231_1

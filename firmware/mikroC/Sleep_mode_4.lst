;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 07/08/2019 10:03:14 a. m.
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0xF000EF29  	GOTO        82
_interrupt:
;Sleep_mode_4.c,7 :: 		void interrupt ()                          //Se activa la rutina de interrupción
0x0008	0xF017C00B  	MOVFF       R11, 23
0x000C	0xF016C00C  	MOVFF       R12, 22
0x0010	0xF015C00D  	MOVFF       R13, 21
;Sleep_mode_4.c,9 :: 		if (INTCON.INT0IF)
0x0014	0xA2F2      	BTFSS       INTCON, 1 
0x0016	0xD016      	BRA         L_interrupt0
;Sleep_mode_4.c,11 :: 		INTCON.INT0IF = 0;
0x0018	0x92F2      	BCF         INTCON, 1 
;Sleep_mode_4.c,12 :: 		flag = ~flag;
0x001A	0x1E18      	COMF        _flag, 1 
0x001C	0x1E19      	COMF        _flag+1, 1 
;Sleep_mode_4.c,14 :: 		LATA.LATA1 = ~LATA.LATA1;           //led blink
0x001E	0x7289      	BTG         LATA, 1 
;Sleep_mode_4.c,15 :: 		delay_ms(1000);
0x0020	0x0E1A      	MOVLW       26
0x0022	0x6E0B      	MOVWF       R11, 0
0x0024	0x0E5E      	MOVLW       94
0x0026	0x6E0C      	MOVWF       R12, 0
0x0028	0x0E6E      	MOVLW       110
0x002A	0x6E0D      	MOVWF       R13, 0
L_interrupt1:
0x002C	0x2E0D      	DECFSZ      R13, 1, 0
0x002E	0xD7FE      	BRA         L_interrupt1
0x0030	0x2E0C      	DECFSZ      R12, 1, 0
0x0032	0xD7FC      	BRA         L_interrupt1
0x0034	0x2E0B      	DECFSZ      R11, 1, 0
0x0036	0xD7FA      	BRA         L_interrupt1
0x0038	0x0000      	NOP
;Sleep_mode_4.c,16 :: 		LATA.LATA0 = 0;                     //off
0x003A	0x9089      	BCF         LATA, 0 
;Sleep_mode_4.c,19 :: 		if (flag) asm Sleep ;
0x003C	0x5018      	MOVF        _flag, 0 
0x003E	0x1019      	IORWF       _flag+1, 0 
0x0040	0xA4D8      	BTFSS       STATUS, 2 
0x0042	0x0003      	SLEEP
L_interrupt2:
;Sleep_mode_4.c,22 :: 		}                                   // end if
L_interrupt0:
;Sleep_mode_4.c,23 :: 		}                                         // end interrupt
L_end_interrupt:
L__interrupt9:
0x0044	0xF00BC017  	MOVFF       23, R11
0x0048	0xF00CC016  	MOVFF       22, R12
0x004C	0xF00DC015  	MOVFF       21, R13
0x0050	0x0011      	RETFIE      1
; end of _interrupt
_main:
;Sleep_mode_4.c,26 :: 		void main()
;Sleep_mode_4.c,28 :: 		CM1CON0.C1ON=0;                       // Comparators disable
0x0052	0x9E79      	BCF         CM1CON0, 7 
;Sleep_mode_4.c,29 :: 		CM2CON0.C2ON=0;                       // Comparators disable
0x0054	0x9E78      	BCF         CM2CON0, 7 
;Sleep_mode_4.c,32 :: 		ADCON1=0x0f;                          // control registers (1111)  Config. Ports as digitals
0x0056	0x0E0F      	MOVLW       15
0x0058	0x6EC1      	MOVWF       ADCON1 
;Sleep_mode_4.c,33 :: 		TRISA=0;                              // PORT D  as output
0x005A	0x6A92      	CLRF        TRISA 
;Sleep_mode_4.c,34 :: 		TRISB.f0=1;                           // Set PORT B, pin 0 as input  (INT0)
0x005C	0x8093      	BSF         TRISB, 0 
;Sleep_mode_4.c,35 :: 		OSCCON.IDLEN=0;                       // IDLEN=0,       (72)
0x005E	0x9ED3      	BCF         OSCCON, 7 
;Sleep_mode_4.c,37 :: 		INTCON2.INTEDG0=1;         //yes      // INT0 on rising edge interrupt selected   (External Interrupt 0 Edge Select bit)
0x0060	0x8CF1      	BSF         INTCON2, 6 
;Sleep_mode_4.c,38 :: 		INTCON.INT0IF=1;           //yes      //(IE) and INT0 External Interrupt Flag bit    (IF)
0x0062	0x82F2      	BSF         INTCON, 1 
;Sleep_mode_4.c,39 :: 		INTCON.INT0IE=1;                      // Enables the INT0 external interrupt
0x0064	0x88F2      	BSF         INTCON, 4 
;Sleep_mode_4.c,42 :: 		RCON.IPEN=1;                            //Enables interrupt priorities                              *******
0x0066	0x8ED0      	BSF         RCON, 7 
;Sleep_mode_4.c,43 :: 		INTCON.GIEH=1;                          //Enabling High priority interrupts (When IPEN = 1)         *******
0x0068	0x8EF2      	BSF         INTCON, 7 
;Sleep_mode_4.c,44 :: 		INTCON.GIEL=1;                          //Enabling Low priority interrupts   (When IPEN = 1)        *******
0x006A	0x8CF2      	BSF         INTCON, 6 
;Sleep_mode_4.c,46 :: 		INTCON3.INT2IE=1;                       //Enabling INT2 interrupt                    *******
0x006C	0x88F0      	BSF         INTCON3, 4 
;Sleep_mode_4.c,51 :: 		LATA.LATA0 = 0;                           //led 0 off
0x006E	0x9089      	BCF         LATA, 0 
;Sleep_mode_4.c,52 :: 		LATA.LATA1 = 0;                           //led 1 off
0x0070	0x9289      	BCF         LATA, 1 
;Sleep_mode_4.c,53 :: 		delay_ms(1000);
0x0072	0x0E1A      	MOVLW       26
0x0074	0x6E0B      	MOVWF       R11, 0
0x0076	0x0E5E      	MOVLW       94
0x0078	0x6E0C      	MOVWF       R12, 0
0x007A	0x0E6E      	MOVLW       110
0x007C	0x6E0D      	MOVWF       R13, 0
L_main3:
0x007E	0x2E0D      	DECFSZ      R13, 1, 0
0x0080	0xD7FE      	BRA         L_main3
0x0082	0x2E0C      	DECFSZ      R12, 1, 0
0x0084	0xD7FC      	BRA         L_main3
0x0086	0x2E0B      	DECFSZ      R11, 1, 0
0x0088	0xD7FA      	BRA         L_main3
0x008A	0x0000      	NOP
;Sleep_mode_4.c,55 :: 		flag = 0;                                 // Variable = sleep mode enable (1)
0x008C	0x6A18      	CLRF        _flag 
0x008E	0x6A19      	CLRF        _flag+1 
;Sleep_mode_4.c,58 :: 		while(1)
L_main4:
;Sleep_mode_4.c,60 :: 		LATA.LATA0 = ~LATA.LATA0;       // make blink the LED
0x0090	0x7089      	BTG         LATA, 0 
;Sleep_mode_4.c,61 :: 		delay_ms(1000);
0x0092	0x0E1A      	MOVLW       26
0x0094	0x6E0B      	MOVWF       R11, 0
0x0096	0x0E5E      	MOVLW       94
0x0098	0x6E0C      	MOVWF       R12, 0
0x009A	0x0E6E      	MOVLW       110
0x009C	0x6E0D      	MOVWF       R13, 0
L_main6:
0x009E	0x2E0D      	DECFSZ      R13, 1, 0
0x00A0	0xD7FE      	BRA         L_main6
0x00A2	0x2E0C      	DECFSZ      R12, 1, 0
0x00A4	0xD7FC      	BRA         L_main6
0x00A6	0x2E0B      	DECFSZ      R11, 1, 0
0x00A8	0xD7FA      	BRA         L_main6
0x00AA	0x0000      	NOP
;Sleep_mode_4.c,62 :: 		LATA.LATA0 = ~LATA.LATA0;       // make blink the LED
0x00AC	0x7089      	BTG         LATA, 0 
;Sleep_mode_4.c,63 :: 		delay_ms(1000);
0x00AE	0x0E1A      	MOVLW       26
0x00B0	0x6E0B      	MOVWF       R11, 0
0x00B2	0x0E5E      	MOVLW       94
0x00B4	0x6E0C      	MOVWF       R12, 0
0x00B6	0x0E6E      	MOVLW       110
0x00B8	0x6E0D      	MOVWF       R13, 0
L_main7:
0x00BA	0x2E0D      	DECFSZ      R13, 1, 0
0x00BC	0xD7FE      	BRA         L_main7
0x00BE	0x2E0C      	DECFSZ      R12, 1, 0
0x00C0	0xD7FC      	BRA         L_main7
0x00C2	0x2E0B      	DECFSZ      R11, 1, 0
0x00C4	0xD7FA      	BRA         L_main7
0x00C6	0x0000      	NOP
;Sleep_mode_4.c,66 :: 		}
0x00C8	0xD7E3      	BRA         L_main4
;Sleep_mode_4.c,71 :: 		}
L_end_main:
0x00CA	0xD7FF      	BRA         $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0008      [74]    _interrupt
0x0052     [122]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    R0
0x0001       [1]    R1
0x0002       [1]    R2
0x0003       [1]    R3
0x0004       [1]    R4
0x0005       [1]    R5
0x0006       [1]    R6
0x0007       [1]    R7
0x0008       [1]    R8
0x0009       [1]    R9
0x000A       [1]    R10
0x000B       [1]    R11
0x000C       [1]    R12
0x000D       [1]    R13
0x000E       [1]    R14
0x000F       [1]    R15
0x0010       [1]    R16
0x0011       [1]    R17
0x0012       [1]    R18
0x0013       [1]    R19
0x0014       [1]    R20
0x0018       [2]    _flag
0x0F78       [1]    CM2CON0
0x0F79       [1]    CM1CON0
0x0F89       [1]    LATA
0x0F92       [1]    TRISA
0x0F93       [1]    TRISB
0x0FC1       [1]    ADCON1
0x0FD0       [1]    RCON
0x0FD3       [1]    OSCCON
0x0FD8       [1]    STATUS
0x0FD9       [1]    FSR2L
0x0FDA       [1]    FSR2H
0x0FDE       [1]    POSTINC2
0x0FE0       [1]    BSR
0x0FE1       [1]    FSR1L
0x0FE2       [1]    FSR1H
0x0FE4       [1]    PREINC1
0x0FE6       [1]    POSTINC1
0x0FE7       [1]    INDF1
0x0FE8       [1]    WREG
0x0FE9       [1]    FSR0L
0x0FEA       [1]    FSR0H
0x0FEE       [1]    POSTINC0
0x0FF0       [1]    INTCON3
0x0FF1       [1]    INTCON2
0x0FF2       [1]    INTCON
0x0FF3       [1]    PRODL
0x0FF4       [1]    PRODH
0x0FF5       [1]    TABLAT
0x0FF6       [1]    TBLPTRL
0x0FF7       [1]    TBLPTRH
0x0FF8       [1]    TBLPTRU
